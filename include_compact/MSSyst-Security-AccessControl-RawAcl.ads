-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Security.AccessControl.GenericAcl;
with MSSyst.Collections.ICollection;
with type MSSyst.Security.AccessControl.GenericAce.Ref_array is access;
with type MSSyst.Object.Ref is access;
with type MSSyst.Security.AccessControl.GenericAce.Ref is access;
with type MSSyst.Security.AccessControl.AceEnumerator.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.Security.AccessControl.RawAcl is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Security.AccessControl.GenericAcl.Typ
         and MSSyst.Collections.ICollection.Typ
   with record
      null;
   end record;
   function new_RawAcl(
      This : Ref := null;
      revision : MSIL_Types.unsigned_int8;
      capacity : Integer) return Ref;
   function new_RawAcl(
      This : Ref := null;
      binaryForm : MSIL_Types.unsigned_int8_Arr;
      offset : Integer) return Ref;
   function get_BinaryLength(
      This : access Typ) return Integer;
   function get_Count(
      This : access Typ) return Integer;
   function get_Item(
      This : access Typ;
      index : Integer) return MSSyst.Security.AccessControl.GenericAce.Ref;
   function get_Revision(
      This : access Typ) return MSIL_Types.unsigned_int8;
   procedure GetBinaryForm(
      This : access Typ;
      binaryForm : MSIL_Types.unsigned_int8_Arr;
      offset : Integer);
   procedure InsertAce(
      This : access Typ;
      index : Integer;
      ace : MSSyst.Security.AccessControl.GenericAce.Ref);
   procedure RemoveAce(
      This : access Typ;
      index : Integer);
   procedure set_Item(
      This : access Typ;
      index : Integer;
      value : MSSyst.Security.AccessControl.GenericAce.Ref);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_RawAcl);
   pragma Import(MSIL,get_BinaryLength,"get_BinaryLength");
   pragma Import(MSIL,get_Count,"get_Count");
   pragma Import(MSIL,get_Item,"get_Item");
   pragma Import(MSIL,get_Revision,"get_Revision");
   pragma Import(MSIL,GetBinaryForm,"GetBinaryForm");
   pragma Import(MSIL,InsertAce,"InsertAce");
   pragma Import(MSIL,RemoveAce,"RemoveAce");
   pragma Import(MSIL,set_Item,"set_Item");
end MSSyst.Security.AccessControl.RawAcl;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Security.AccessControl.RawAcl,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Security.AccessControl.RawAcl");
