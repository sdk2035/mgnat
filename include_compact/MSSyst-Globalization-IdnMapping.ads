-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with type MSSyst.String.Ref is access;
with type MSSyst.Type_k.Ref is access;
package MSSyst.Globalization.IdnMapping is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   function new_IdnMapping(
      This : Ref := null) return Ref;
   function Equals(
      This : access Typ;
      obj : MSSyst.Object.Ref) return Standard.Boolean;
   function get_AllowUnassigned(
      This : access Typ) return Standard.Boolean;
   function get_UseStd3AsciiRules(
      This : access Typ) return Standard.Boolean;
   function GetAscii(
      This : access Typ;
      unicode : MSSyst.String.Ref;
      index : Integer) return MSSyst.String.Ref;
   function GetAscii(
      This : access Typ;
      unicode : MSSyst.String.Ref;
      index : Integer;
      count : Integer) return MSSyst.String.Ref;
   function GetAscii(
      This : access Typ;
      unicode : MSSyst.String.Ref) return MSSyst.String.Ref;
   function GetHashCode(
      This : access Typ) return Integer;
   function GetUnicode(
      This : access Typ;
      ascii : MSSyst.String.Ref;
      index : Integer;
      count : Integer) return MSSyst.String.Ref;
   function GetUnicode(
      This : access Typ;
      ascii : MSSyst.String.Ref) return MSSyst.String.Ref;
   function GetUnicode(
      This : access Typ;
      ascii : MSSyst.String.Ref;
      index : Integer) return MSSyst.String.Ref;
   procedure set_AllowUnassigned(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_UseStd3AsciiRules(
      This : access Typ;
      value : Standard.Boolean);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_IdnMapping);
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_AllowUnassigned,"get_AllowUnassigned");
   pragma Import(MSIL,get_UseStd3AsciiRules,"get_UseStd3AsciiRules");
   pragma Import(MSIL,GetAscii,"GetAscii");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetUnicode,"GetUnicode");
   pragma Import(MSIL,set_AllowUnassigned,"set_AllowUnassigned");
   pragma Import(MSIL,set_UseStd3AsciiRules,"set_UseStd3AsciiRules");
end MSSyst.Globalization.IdnMapping;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Globalization.IdnMapping,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Globalization.IdnMapping");
