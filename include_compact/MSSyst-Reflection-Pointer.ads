-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with MSSyst.Runtime.Serialization.ISerializable;
with MSSyst.Void;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.Reflection.Pointer is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ
         and MSSyst.Runtime.Serialization.ISerializable.Typ
   with record
      null;
   end record;
   function Box(
      ptr : MSIL_Types.void_addrof;
      type_k : MSSyst.Type_k.Ref) return MSSyst.Object.Ref;
   function Unbox(
      ptr : MSSyst.Object.Ref) return MSIL_Types.void_addrof;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,Box,"Box");
   pragma Import(MSIL,Unbox,"Unbox");
end MSSyst.Reflection.Pointer;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Reflection.Pointer,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Reflection.Pointer");
