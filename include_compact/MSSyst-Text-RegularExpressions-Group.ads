-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Text.RegularExpressions.Capture;
with type MSSyst.Object.Ref is access;
with type MSSyst.Text.RegularExpressions.CaptureCollection.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Type_k.Ref is access;
package MSSyst.Text.RegularExpressions.Group is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Text.RegularExpressions.Capture.Typ   with record
      null;
   end record;
   function get_Captures(
      This : access Typ) return MSSyst.Text.RegularExpressions.CaptureCollection.Ref;
   function get_Success(
      This : access Typ) return Standard.Boolean;
   function Synchronized_k(
      inner : MSSyst.Text.RegularExpressions.Group.Ref) return MSSyst.Text.RegularExpressions.Group.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,get_Captures,"get_Captures");
   pragma Import(MSIL,get_Success,"get_Success");
   pragma Import(MSIL,Synchronized_k,"Synchronized");
end MSSyst.Text.RegularExpressions.Group;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Text.RegularExpressions.Group,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Text.RegularExpressions.Group");
