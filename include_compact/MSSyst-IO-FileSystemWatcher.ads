-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.ComponentModel.Component;
with MSSyst.ComponentModel.IComponent;
with MSSyst.ComponentModel.ISupportInitialize;
with type MSSyst.IO.FileSystemEventHandler.Ref is access;
with type MSSyst.EventHandler.Ref is access;
with type MSSyst.IO.ErrorEventHandler.Ref is access;
with type MSSyst.IO.RenamedEventHandler.Ref is access;
with type MSSyst.Runtime.Remoting.ObjRef.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Object.Ref is access;
with type MSSyst.ComponentModel.IContainer.Ref is access;
with type MSSyst.String.Ref is access;
with MSSyst.IO.NotifyFilters;
with type MSSyst.ComponentModel.ISite.Ref is access;
with type MSSyst.ComponentModel.ISynchronizeInvoke.Ref is access;
with type MSSyst.IO.WaitForChangedResult.Valuetype is tagged;
with MSSyst.IO.WatcherChangeTypes;
package MSSyst.IO.FileSystemWatcher is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.ComponentModel.Component.Typ
         and MSSyst.ComponentModel.IComponent.Typ
         and MSSyst.ComponentModel.ISupportInitialize.Typ
   with record
      null;
   end record;
   function new_FileSystemWatcher(
      This : Ref := null) return Ref;
   function new_FileSystemWatcher(
      This : Ref := null;
      path : MSSyst.String.Ref) return Ref;
   function new_FileSystemWatcher(
      This : Ref := null;
      path : MSSyst.String.Ref;
      filter : MSSyst.String.Ref) return Ref;
   procedure add_Changed(
      This : access Typ;
      value : MSSyst.IO.FileSystemEventHandler.Ref);
   procedure add_Created(
      This : access Typ;
      value : MSSyst.IO.FileSystemEventHandler.Ref);
   procedure add_Deleted(
      This : access Typ;
      value : MSSyst.IO.FileSystemEventHandler.Ref);
   procedure add_Error(
      This : access Typ;
      value : MSSyst.IO.ErrorEventHandler.Ref);
   procedure add_Renamed(
      This : access Typ;
      value : MSSyst.IO.RenamedEventHandler.Ref);
   procedure BeginInit(
      This : access Typ);
   procedure EndInit(
      This : access Typ);
   function get_EnableRaisingEvents(
      This : access Typ) return Standard.Boolean;
   function get_Filter(
      This : access Typ) return MSSyst.String.Ref;
   function get_IncludeSubdirectories(
      This : access Typ) return Standard.Boolean;
   function get_InternalBufferSize(
      This : access Typ) return Integer;
   function get_NotifyFilter(
      This : access Typ) return MSSyst.IO.NotifyFilters.Valuetype;
   function get_Path(
      This : access Typ) return MSSyst.String.Ref;
   function get_Site(
      This : access Typ) return MSSyst.ComponentModel.ISite.Ref;
   function get_SynchronizingObject(
      This : access Typ) return MSSyst.ComponentModel.ISynchronizeInvoke.Ref;
   procedure remove_Changed(
      This : access Typ;
      value : MSSyst.IO.FileSystemEventHandler.Ref);
   procedure remove_Created(
      This : access Typ;
      value : MSSyst.IO.FileSystemEventHandler.Ref);
   procedure remove_Deleted(
      This : access Typ;
      value : MSSyst.IO.FileSystemEventHandler.Ref);
   procedure remove_Error(
      This : access Typ;
      value : MSSyst.IO.ErrorEventHandler.Ref);
   procedure remove_Renamed(
      This : access Typ;
      value : MSSyst.IO.RenamedEventHandler.Ref);
   procedure set_EnableRaisingEvents(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_Filter(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_IncludeSubdirectories(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_InternalBufferSize(
      This : access Typ;
      value : Integer);
   procedure set_NotifyFilter(
      This : access Typ;
      value : MSSyst.IO.NotifyFilters.Valuetype);
   procedure set_Path(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_Site(
      This : access Typ;
      value : MSSyst.ComponentModel.ISite.Ref);
   procedure set_SynchronizingObject(
      This : access Typ;
      value : MSSyst.ComponentModel.ISynchronizeInvoke.Ref);
   function WaitForChanged(
      This : access Typ;
      changeType : MSSyst.IO.WatcherChangeTypes.Valuetype) return MSSyst.IO.WaitForChangedResult.Valuetype;
   function WaitForChanged(
      This : access Typ;
      changeType : MSSyst.IO.WatcherChangeTypes.Valuetype;
      timeout : Integer) return MSSyst.IO.WaitForChangedResult.Valuetype;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_FileSystemWatcher);
   pragma Import(MSIL,add_Changed,"add_Changed");
   pragma Import(MSIL,add_Created,"add_Created");
   pragma Import(MSIL,add_Deleted,"add_Deleted");
   pragma Import(MSIL,add_Error,"add_Error");
   pragma Import(MSIL,add_Renamed,"add_Renamed");
   pragma Import(MSIL,BeginInit,"BeginInit");
   pragma Import(MSIL,EndInit,"EndInit");
   pragma Import(MSIL,get_EnableRaisingEvents,"get_EnableRaisingEvents");
   pragma Import(MSIL,get_Filter,"get_Filter");
   pragma Import(MSIL,get_IncludeSubdirectories,"get_IncludeSubdirectories");
   pragma Import(MSIL,get_InternalBufferSize,"get_InternalBufferSize");
   pragma Import(MSIL,get_NotifyFilter,"get_NotifyFilter");
   pragma Import(MSIL,get_Path,"get_Path");
   pragma Import(MSIL,get_Site,"get_Site");
   pragma Import(MSIL,get_SynchronizingObject,"get_SynchronizingObject");
   pragma Import(MSIL,remove_Changed,"remove_Changed");
   pragma Import(MSIL,remove_Created,"remove_Created");
   pragma Import(MSIL,remove_Deleted,"remove_Deleted");
   pragma Import(MSIL,remove_Error,"remove_Error");
   pragma Import(MSIL,remove_Renamed,"remove_Renamed");
   pragma Import(MSIL,set_EnableRaisingEvents,"set_EnableRaisingEvents");
   pragma Import(MSIL,set_Filter,"set_Filter");
   pragma Import(MSIL,set_IncludeSubdirectories,"set_IncludeSubdirectories");
   pragma Import(MSIL,set_InternalBufferSize,"set_InternalBufferSize");
   pragma Import(MSIL,set_NotifyFilter,"set_NotifyFilter");
   pragma Import(MSIL,set_Path,"set_Path");
   pragma Import(MSIL,set_Site,"set_Site");
   pragma Import(MSIL,set_SynchronizingObject,"set_SynchronizingObject");
   pragma Import(MSIL,WaitForChanged,"WaitForChanged");
end MSSyst.IO.FileSystemWatcher;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.IO.FileSystemWatcher,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.IO.FileSystemWatcher");
