-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with MSSyst.Runtime.Remoting.Messaging.IRemotingFormatter;
with MSSyst.Runtime.Serialization.IFormatter;
with type MSSyst.IO.Stream.Ref is access;
with type MSSyst.Runtime.Remoting.Messaging.HeaderHandler.Ref is access;
with type MSSyst.Runtime.Remoting.Messaging.IMethodCallMessage.Ref is access;
with MSSyst.Runtime.Serialization.Formatters.FormatterAssemblyStyle;
with type MSSyst.Runtime.Serialization.SerializationBinder.Ref is access;
with type MSSyst.Runtime.Serialization.StreamingContext.Valuetype is tagged;
with MSSyst.Runtime.Serialization.Formatters.TypeFilterLevel;
with type MSSyst.Runtime.Serialization.ISurrogateSelector.Ref is access;
with MSSyst.Runtime.Serialization.Formatters.FormatterTypeStyle;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Runtime.Remoting.Messaging.Header.Ref_array is access;
with type MSSyst.String.Ref is access;
package MSSyst.Runtime.Serialization.Formatters.Binary.BinaryFormatter is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ
         and MSSyst.Runtime.Remoting.Messaging.IRemotingFormatter.Typ
         and MSSyst.Runtime.Serialization.IFormatter.Typ
   with record
      null;
   end record;
   function new_BinaryFormatter(
      This : Ref := null) return Ref;
   function new_BinaryFormatter(
      This : Ref := null;
      selector : MSSyst.Runtime.Serialization.ISurrogateSelector.Ref;
      context : MSSyst.Runtime.Serialization.StreamingContext.Valuetype) return Ref;
   function Deserialize(
      This : access Typ;
      serializationStream : MSSyst.IO.Stream.Ref;
      handler : MSSyst.Runtime.Remoting.Messaging.HeaderHandler.Ref) return MSSyst.Object.Ref;
   function Deserialize(
      This : access Typ;
      serializationStream : MSSyst.IO.Stream.Ref) return MSSyst.Object.Ref;
   function DeserializeMethodResponse(
      This : access Typ;
      serializationStream : MSSyst.IO.Stream.Ref;
      handler : MSSyst.Runtime.Remoting.Messaging.HeaderHandler.Ref;
      methodCallMessage : MSSyst.Runtime.Remoting.Messaging.IMethodCallMessage.Ref) return MSSyst.Object.Ref;
   function get_AssemblyFormat(
      This : access Typ) return MSSyst.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Valuetype;
   function get_Binder(
      This : access Typ) return MSSyst.Runtime.Serialization.SerializationBinder.Ref;
   function get_Context(
      This : access Typ) return MSSyst.Runtime.Serialization.StreamingContext.Valuetype;
   function get_FilterLevel(
      This : access Typ) return MSSyst.Runtime.Serialization.Formatters.TypeFilterLevel.Valuetype;
   function get_SurrogateSelector(
      This : access Typ) return MSSyst.Runtime.Serialization.ISurrogateSelector.Ref;
   function get_TypeFormat(
      This : access Typ) return MSSyst.Runtime.Serialization.Formatters.FormatterTypeStyle.Valuetype;
   procedure Serialize(
      This : access Typ;
      serializationStream : MSSyst.IO.Stream.Ref;
      graph : MSSyst.Object.Ref);
   procedure Serialize(
      This : access Typ;
      serializationStream : MSSyst.IO.Stream.Ref;
      graph : MSSyst.Object.Ref;
      headers : MSSyst.Runtime.Remoting.Messaging.Header.Ref_array);
   procedure set_AssemblyFormat(
      This : access Typ;
      value : MSSyst.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Valuetype);
   procedure set_Binder(
      This : access Typ;
      value : MSSyst.Runtime.Serialization.SerializationBinder.Ref);
   procedure set_Context(
      This : access Typ;
      value : MSSyst.Runtime.Serialization.StreamingContext.Valuetype);
   procedure set_FilterLevel(
      This : access Typ;
      value : MSSyst.Runtime.Serialization.Formatters.TypeFilterLevel.Valuetype);
   procedure set_SurrogateSelector(
      This : access Typ;
      value : MSSyst.Runtime.Serialization.ISurrogateSelector.Ref);
   procedure set_TypeFormat(
      This : access Typ;
      value : MSSyst.Runtime.Serialization.Formatters.FormatterTypeStyle.Valuetype);
   function UnsafeDeserialize(
      This : access Typ;
      serializationStream : MSSyst.IO.Stream.Ref;
      handler : MSSyst.Runtime.Remoting.Messaging.HeaderHandler.Ref) return MSSyst.Object.Ref;
   function UnsafeDeserializeMethodResponse(
      This : access Typ;
      serializationStream : MSSyst.IO.Stream.Ref;
      handler : MSSyst.Runtime.Remoting.Messaging.HeaderHandler.Ref;
      methodCallMessage : MSSyst.Runtime.Remoting.Messaging.IMethodCallMessage.Ref) return MSSyst.Object.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_BinaryFormatter);
   pragma Import(MSIL,Deserialize,"Deserialize");
   pragma Import(MSIL,DeserializeMethodResponse,"DeserializeMethodResponse");
   pragma Import(MSIL,get_AssemblyFormat,"get_AssemblyFormat");
   pragma Import(MSIL,get_Binder,"get_Binder");
   pragma Import(MSIL,get_Context,"get_Context");
   pragma Import(MSIL,get_FilterLevel,"get_FilterLevel");
   pragma Import(MSIL,get_SurrogateSelector,"get_SurrogateSelector");
   pragma Import(MSIL,get_TypeFormat,"get_TypeFormat");
   pragma Import(MSIL,Serialize,"Serialize");
   pragma Import(MSIL,set_AssemblyFormat,"set_AssemblyFormat");
   pragma Import(MSIL,set_Binder,"set_Binder");
   pragma Import(MSIL,set_Context,"set_Context");
   pragma Import(MSIL,set_FilterLevel,"set_FilterLevel");
   pragma Import(MSIL,set_SurrogateSelector,"set_SurrogateSelector");
   pragma Import(MSIL,set_TypeFormat,"set_TypeFormat");
   pragma Import(MSIL,UnsafeDeserialize,"UnsafeDeserialize");
   pragma Import(MSIL,UnsafeDeserializeMethodResponse,"UnsafeDeserializeMethodResponse");
end MSSyst.Runtime.Serialization.Formatters.Binary.BinaryFormatter;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Runtime.Serialization.Formatters.Binary.BinaryFormatter,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Runtime.Serialization.Formatters.Binary.BinaryFormatter");
