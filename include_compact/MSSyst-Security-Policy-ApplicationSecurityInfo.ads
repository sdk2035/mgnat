-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with type MSSyst.Security.Policy.Evidence.Ref is access;
with type MSSyst.ApplicationId.Ref is access;
with type MSSyst.Security.PermissionSet.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.ActivationContext.Ref is access;
package MSSyst.Security.Policy.ApplicationSecurityInfo is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   function new_ApplicationSecurityInfo(
      This : Ref := null;
      activationContext : MSSyst.ActivationContext.Ref) return Ref;
   function get_ApplicationEvidence(
      This : access Typ) return MSSyst.Security.Policy.Evidence.Ref;
   function get_ApplicationId(
      This : access Typ) return MSSyst.ApplicationId.Ref;
   function get_DefaultRequestSet(
      This : access Typ) return MSSyst.Security.PermissionSet.Ref;
   function get_DeploymentId(
      This : access Typ) return MSSyst.ApplicationId.Ref;
   procedure set_ApplicationEvidence(
      This : access Typ;
      value : MSSyst.Security.Policy.Evidence.Ref);
   procedure set_ApplicationId(
      This : access Typ;
      value : MSSyst.ApplicationId.Ref);
   procedure set_DefaultRequestSet(
      This : access Typ;
      value : MSSyst.Security.PermissionSet.Ref);
   procedure set_DeploymentId(
      This : access Typ;
      value : MSSyst.ApplicationId.Ref);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_ApplicationSecurityInfo);
   pragma Import(MSIL,get_ApplicationEvidence,"get_ApplicationEvidence");
   pragma Import(MSIL,get_ApplicationId,"get_ApplicationId");
   pragma Import(MSIL,get_DefaultRequestSet,"get_DefaultRequestSet");
   pragma Import(MSIL,get_DeploymentId,"get_DeploymentId");
   pragma Import(MSIL,set_ApplicationEvidence,"set_ApplicationEvidence");
   pragma Import(MSIL,set_ApplicationId,"set_ApplicationId");
   pragma Import(MSIL,set_DefaultRequestSet,"set_DefaultRequestSet");
   pragma Import(MSIL,set_DeploymentId,"set_DeploymentId");
end MSSyst.Security.Policy.ApplicationSecurityInfo;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Security.Policy.ApplicationSecurityInfo,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Security.Policy.ApplicationSecurityInfo");
