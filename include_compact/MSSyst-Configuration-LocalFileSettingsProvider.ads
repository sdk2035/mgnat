-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Configuration.SettingsProvider;
with MSSyst.Configuration.IApplicationSettingsProvider;
with type MSSyst.Object.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Configuration.SettingsPropertyValue.Ref is access;
with type MSSyst.Configuration.SettingsContext.Ref is access;
with type MSSyst.Configuration.SettingsProperty.Ref is access;
with type MSSyst.Configuration.SettingsPropertyValueCollection.Ref is access;
with type MSSyst.Configuration.SettingsPropertyCollection.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Collections.Specialized.NameValueCollection.Ref is access;
package MSSyst.Configuration.LocalFileSettingsProvider is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Configuration.SettingsProvider.Typ
         and MSSyst.Configuration.IApplicationSettingsProvider.Typ
   with record
      null;
   end record;
   function new_LocalFileSettingsProvider(
      This : Ref := null) return Ref;
   function get_ApplicationName(
      This : access Typ) return MSSyst.String.Ref;
   function GetPreviousVersion(
      This : access Typ;
      context : MSSyst.Configuration.SettingsContext.Ref;
      property : MSSyst.Configuration.SettingsProperty.Ref) return MSSyst.Configuration.SettingsPropertyValue.Ref;
   function GetPropertyValues(
      This : access Typ;
      context : MSSyst.Configuration.SettingsContext.Ref;
      properties : MSSyst.Configuration.SettingsPropertyCollection.Ref) return MSSyst.Configuration.SettingsPropertyValueCollection.Ref;
   procedure Initialize(
      This : access Typ;
      name : MSSyst.String.Ref;
      values : MSSyst.Collections.Specialized.NameValueCollection.Ref);
   procedure Reset(
      This : access Typ;
      context : MSSyst.Configuration.SettingsContext.Ref);
   procedure set_ApplicationName(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure SetPropertyValues(
      This : access Typ;
      context : MSSyst.Configuration.SettingsContext.Ref;
      values : MSSyst.Configuration.SettingsPropertyValueCollection.Ref);
   procedure Upgrade(
      This : access Typ;
      context : MSSyst.Configuration.SettingsContext.Ref;
      properties : MSSyst.Configuration.SettingsPropertyCollection.Ref);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_LocalFileSettingsProvider);
   pragma Import(MSIL,get_ApplicationName,"get_ApplicationName");
   pragma Import(MSIL,GetPreviousVersion,"GetPreviousVersion");
   pragma Import(MSIL,GetPropertyValues,"GetPropertyValues");
   pragma Import(MSIL,Initialize,"Initialize");
   pragma Import(MSIL,Reset,"Reset");
   pragma Import(MSIL,set_ApplicationName,"set_ApplicationName");
   pragma Import(MSIL,SetPropertyValues,"SetPropertyValues");
   pragma Import(MSIL,Upgrade,"Upgrade");
end MSSyst.Configuration.LocalFileSettingsProvider;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Configuration.LocalFileSettingsProvider,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Configuration.LocalFileSettingsProvider");
