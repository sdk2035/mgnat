-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with MSSyst.ICloneable;
with MSSyst.Drawing.Imaging.ColorAdjustType;
with type MSSyst.Drawing.Imaging.ColorPalette.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Drawing.Imaging.ColorMap.Ref_array is access;
with type MSSyst.Drawing.Color.Valuetype is tagged;
with type MSSyst.Drawing.Imaging.ColorMatrix.Ref is access;
with MSSyst.Drawing.Imaging.ColorMatrixFlag;
with MSSyst.Drawing.Imaging.ColorChannelFlag;
with type MSSyst.String.Ref is access;
with MSSyst.Drawing.Drawing2D.WrapMode;
package MSSyst.Drawing.Imaging.ImageAttributes is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ
         and MSSyst.ICloneable.Typ
   with record
      null;
   end record;
   function new_ImageAttributes(
      This : Ref := null) return Ref;
   procedure ClearBrushRemapTable(
      This : access Typ);
   procedure ClearColorKey(
      This : access Typ);
   procedure ClearColorKey(
      This : access Typ;
      type_k : MSSyst.Drawing.Imaging.ColorAdjustType.Valuetype);
   procedure ClearColorMatrix(
      This : access Typ);
   procedure ClearColorMatrix(
      This : access Typ;
      type_k : MSSyst.Drawing.Imaging.ColorAdjustType.Valuetype);
   procedure ClearGamma(
      This : access Typ;
      type_k : MSSyst.Drawing.Imaging.ColorAdjustType.Valuetype);
   procedure ClearGamma(
      This : access Typ);
   procedure ClearNoOp(
      This : access Typ;
      type_k : MSSyst.Drawing.Imaging.ColorAdjustType.Valuetype);
   procedure ClearNoOp(
      This : access Typ);
   procedure ClearOutputChannel(
      This : access Typ);
   procedure ClearOutputChannel(
      This : access Typ;
      type_k : MSSyst.Drawing.Imaging.ColorAdjustType.Valuetype);
   procedure ClearOutputChannelColorProfile(
      This : access Typ;
      type_k : MSSyst.Drawing.Imaging.ColorAdjustType.Valuetype);
   procedure ClearOutputChannelColorProfile(
      This : access Typ);
   procedure ClearRemapTable(
      This : access Typ);
   procedure ClearRemapTable(
      This : access Typ;
      type_k : MSSyst.Drawing.Imaging.ColorAdjustType.Valuetype);
   procedure ClearThreshold(
      This : access Typ;
      type_k : MSSyst.Drawing.Imaging.ColorAdjustType.Valuetype);
   procedure ClearThreshold(
      This : access Typ);
   function Clone(
      This : access Typ) return MSSyst.Object.Ref;
   procedure Dispose(
      This : access Typ);
   procedure GetAdjustedPalette(
      This : access Typ;
      palette : MSSyst.Drawing.Imaging.ColorPalette.Ref;
      type_k : MSSyst.Drawing.Imaging.ColorAdjustType.Valuetype);
   procedure SetBrushRemapTable(
      This : access Typ;
      map : MSSyst.Drawing.Imaging.ColorMap.Ref_array);
   procedure SetColorKey(
      This : access Typ;
      colorLow : MSSyst.Drawing.Color.Valuetype;
      colorHigh : MSSyst.Drawing.Color.Valuetype);
   procedure SetColorKey(
      This : access Typ;
      colorLow : MSSyst.Drawing.Color.Valuetype;
      colorHigh : MSSyst.Drawing.Color.Valuetype;
      type_k : MSSyst.Drawing.Imaging.ColorAdjustType.Valuetype);
   procedure SetColorMatrices(
      This : access Typ;
      newColorMatrix : MSSyst.Drawing.Imaging.ColorMatrix.Ref;
      grayMatrix : MSSyst.Drawing.Imaging.ColorMatrix.Ref;
      flags : MSSyst.Drawing.Imaging.ColorMatrixFlag.Valuetype);
   procedure SetColorMatrices(
      This : access Typ;
      newColorMatrix : MSSyst.Drawing.Imaging.ColorMatrix.Ref;
      grayMatrix : MSSyst.Drawing.Imaging.ColorMatrix.Ref;
      mode : MSSyst.Drawing.Imaging.ColorMatrixFlag.Valuetype;
      type_k : MSSyst.Drawing.Imaging.ColorAdjustType.Valuetype);
   procedure SetColorMatrices(
      This : access Typ;
      newColorMatrix : MSSyst.Drawing.Imaging.ColorMatrix.Ref;
      grayMatrix : MSSyst.Drawing.Imaging.ColorMatrix.Ref);
   procedure SetColorMatrix(
      This : access Typ;
      newColorMatrix : MSSyst.Drawing.Imaging.ColorMatrix.Ref);
   procedure SetColorMatrix(
      This : access Typ;
      newColorMatrix : MSSyst.Drawing.Imaging.ColorMatrix.Ref;
      flags : MSSyst.Drawing.Imaging.ColorMatrixFlag.Valuetype);
   procedure SetColorMatrix(
      This : access Typ;
      newColorMatrix : MSSyst.Drawing.Imaging.ColorMatrix.Ref;
      mode : MSSyst.Drawing.Imaging.ColorMatrixFlag.Valuetype;
      type_k : MSSyst.Drawing.Imaging.ColorAdjustType.Valuetype);
   procedure SetGamma(
      This : access Typ;
      gamma : Float);
   procedure SetGamma(
      This : access Typ;
      gamma : Float;
      type_k : MSSyst.Drawing.Imaging.ColorAdjustType.Valuetype);
   procedure SetNoOp(
      This : access Typ);
   procedure SetNoOp(
      This : access Typ;
      type_k : MSSyst.Drawing.Imaging.ColorAdjustType.Valuetype);
   procedure SetOutputChannel(
      This : access Typ;
      flags : MSSyst.Drawing.Imaging.ColorChannelFlag.Valuetype);
   procedure SetOutputChannel(
      This : access Typ;
      flags : MSSyst.Drawing.Imaging.ColorChannelFlag.Valuetype;
      type_k : MSSyst.Drawing.Imaging.ColorAdjustType.Valuetype);
   procedure SetOutputChannelColorProfile(
      This : access Typ;
      colorProfileFilename : MSSyst.String.Ref);
   procedure SetOutputChannelColorProfile(
      This : access Typ;
      colorProfileFilename : MSSyst.String.Ref;
      type_k : MSSyst.Drawing.Imaging.ColorAdjustType.Valuetype);
   procedure SetRemapTable(
      This : access Typ;
      map : MSSyst.Drawing.Imaging.ColorMap.Ref_array;
      type_k : MSSyst.Drawing.Imaging.ColorAdjustType.Valuetype);
   procedure SetRemapTable(
      This : access Typ;
      map : MSSyst.Drawing.Imaging.ColorMap.Ref_array);
   procedure SetThreshold(
      This : access Typ;
      threshold : Float;
      type_k : MSSyst.Drawing.Imaging.ColorAdjustType.Valuetype);
   procedure SetThreshold(
      This : access Typ;
      threshold : Float);
   procedure SetWrapMode(
      This : access Typ;
      mode : MSSyst.Drawing.Drawing2D.WrapMode.Valuetype;
      color : MSSyst.Drawing.Color.Valuetype);
   procedure SetWrapMode(
      This : access Typ;
      mode : MSSyst.Drawing.Drawing2D.WrapMode.Valuetype);
   procedure SetWrapMode(
      This : access Typ;
      mode : MSSyst.Drawing.Drawing2D.WrapMode.Valuetype;
      color : MSSyst.Drawing.Color.Valuetype;
      clamp : Standard.Boolean);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_ImageAttributes);
   pragma Import(MSIL,ClearBrushRemapTable,"ClearBrushRemapTable");
   pragma Import(MSIL,ClearColorKey,"ClearColorKey");
   pragma Import(MSIL,ClearColorMatrix,"ClearColorMatrix");
   pragma Import(MSIL,ClearGamma,"ClearGamma");
   pragma Import(MSIL,ClearNoOp,"ClearNoOp");
   pragma Import(MSIL,ClearOutputChannel,"ClearOutputChannel");
   pragma Import(MSIL,ClearOutputChannelColorProfile,"ClearOutputChannelColorProfile");
   pragma Import(MSIL,ClearRemapTable,"ClearRemapTable");
   pragma Import(MSIL,ClearThreshold,"ClearThreshold");
   pragma Import(MSIL,Clone,"Clone");
   pragma Import(MSIL,Dispose,"Dispose");
   pragma Import(MSIL,GetAdjustedPalette,"GetAdjustedPalette");
   pragma Import(MSIL,SetBrushRemapTable,"SetBrushRemapTable");
   pragma Import(MSIL,SetColorKey,"SetColorKey");
   pragma Import(MSIL,SetColorMatrices,"SetColorMatrices");
   pragma Import(MSIL,SetColorMatrix,"SetColorMatrix");
   pragma Import(MSIL,SetGamma,"SetGamma");
   pragma Import(MSIL,SetNoOp,"SetNoOp");
   pragma Import(MSIL,SetOutputChannel,"SetOutputChannel");
   pragma Import(MSIL,SetOutputChannelColorProfile,"SetOutputChannelColorProfile");
   pragma Import(MSIL,SetRemapTable,"SetRemapTable");
   pragma Import(MSIL,SetThreshold,"SetThreshold");
   pragma Import(MSIL,SetWrapMode,"SetWrapMode");
end MSSyst.Drawing.Imaging.ImageAttributes;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Drawing.Imaging.ImageAttributes,
   ".ver 2:0:0:0 .publickeytoken=( b0 3f 5f 7f 11 d5 0a 3a )",
   "[System.Drawing]System.Drawing.Imaging.ImageAttributes");
