-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Security.Cryptography.X509Certificates.X509Extension;
with type MSSyst.Security.Cryptography.AsnEncodedData.Ref is access;
with type MSSyst.Object.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Security.Cryptography.Oid.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Security.Cryptography.X509Certificates.PublicKey.Ref is access;
with MSSyst.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm;
package MSSyst.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Security.Cryptography.X509Certificates.X509Extension.Typ   with record
      null;
   end record;
   function new_X509SubjectKeyIdentifierExtension(
      This : Ref := null) return Ref;
   function new_X509SubjectKeyIdentifierExtension(
      This : Ref := null;
      subjectKeyIdentifier : MSSyst.String.Ref;
      critical : Standard.Boolean) return Ref;
   function new_X509SubjectKeyIdentifierExtension(
      This : Ref := null;
      subjectKeyIdentifier : MSIL_Types.unsigned_int8_Arr;
      critical : Standard.Boolean) return Ref;
   function new_X509SubjectKeyIdentifierExtension(
      This : Ref := null;
      encodedSubjectKeyIdentifier : MSSyst.Security.Cryptography.AsnEncodedData.Ref;
      critical : Standard.Boolean) return Ref;
   function new_X509SubjectKeyIdentifierExtension(
      This : Ref := null;
      key : MSSyst.Security.Cryptography.X509Certificates.PublicKey.Ref;
      critical : Standard.Boolean) return Ref;
   function new_X509SubjectKeyIdentifierExtension(
      This : Ref := null;
      key : MSSyst.Security.Cryptography.X509Certificates.PublicKey.Ref;
      algorithm : MSSyst.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm.Valuetype;
      critical : Standard.Boolean) return Ref;
   procedure CopyFrom(
      This : access Typ;
      asnEncodedData : MSSyst.Security.Cryptography.AsnEncodedData.Ref);
   function get_SubjectKeyIdentifier(
      This : access Typ) return MSSyst.String.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_X509SubjectKeyIdentifierExtension);
   pragma Import(MSIL,CopyFrom,"CopyFrom");
   pragma Import(MSIL,get_SubjectKeyIdentifier,"get_SubjectKeyIdentifier");
end MSSyst.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension");
