-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Configuration.ConfigurationElement;
with type MSSyst.Object.Ref is access;
with type MSSyst.Configuration.ElementInformation.Ref is access;
with type MSSyst.Configuration.ConfigurationLockCollection.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.Net.Configuration.HttpWebRequestElement is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Configuration.ConfigurationElement.Typ   with record
      null;
   end record;
   function new_HttpWebRequestElement(
      This : Ref := null) return Ref;
   function get_MaximumErrorResponseLength(
      This : access Typ) return Integer;
   function get_MaximumResponseHeadersLength(
      This : access Typ) return Integer;
   function get_MaximumUnauthorizedUploadLength(
      This : access Typ) return Integer;
   function get_UseUnsafeHeaderParsing(
      This : access Typ) return Standard.Boolean;
   procedure set_MaximumErrorResponseLength(
      This : access Typ;
      value : Integer);
   procedure set_MaximumResponseHeadersLength(
      This : access Typ;
      value : Integer);
   procedure set_MaximumUnauthorizedUploadLength(
      This : access Typ;
      value : Integer);
   procedure set_UseUnsafeHeaderParsing(
      This : access Typ;
      value : Standard.Boolean);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_HttpWebRequestElement);
   pragma Import(MSIL,get_MaximumErrorResponseLength,"get_MaximumErrorResponseLength");
   pragma Import(MSIL,get_MaximumResponseHeadersLength,"get_MaximumResponseHeadersLength");
   pragma Import(MSIL,get_MaximumUnauthorizedUploadLength,"get_MaximumUnauthorizedUploadLength");
   pragma Import(MSIL,get_UseUnsafeHeaderParsing,"get_UseUnsafeHeaderParsing");
   pragma Import(MSIL,set_MaximumErrorResponseLength,"set_MaximumErrorResponseLength");
   pragma Import(MSIL,set_MaximumResponseHeadersLength,"set_MaximumResponseHeadersLength");
   pragma Import(MSIL,set_MaximumUnauthorizedUploadLength,"set_MaximumUnauthorizedUploadLength");
   pragma Import(MSIL,set_UseUnsafeHeaderParsing,"set_UseUnsafeHeaderParsing");
end MSSyst.Net.Configuration.HttpWebRequestElement;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Net.Configuration.HttpWebRequestElement,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Net.Configuration.HttpWebRequestElement");
