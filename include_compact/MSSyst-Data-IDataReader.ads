-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.IDisposable.Ref is access;
with type MSSyst.Data.IDataRecord.Ref is access;
with type MSSyst.Data.DataTable.Ref is access;
package MSSyst.Data.IDataReader is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Arr1 is array(Natural range <>) of Ref;
   type Ref_Array is access all Arr1;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ (Self : access MSSyst.Object.Typ'Class)
      is abstract new MSSyst.Object.Typ with null record;
   pragma MSIL_Interface(Typ);
   procedure Close(
      This : access Typ);
   function get_Depth(
      This : access Typ) return Integer;
   function get_IsClosed(
      This : access Typ) return Standard.Boolean;
   function get_RecordsAffected(
      This : access Typ) return Integer;
   function GetSchemaTable(
      This : access Typ) return MSSyst.Data.DataTable.Ref;
   function NextResult(
      This : access Typ) return Standard.Boolean;
   function Read(
      This : access Typ) return Standard.Boolean;
private
   pragma Import(MSIL,Close,"Close");
   pragma Import(MSIL,get_Depth,"get_Depth");
   pragma Import(MSIL,get_IsClosed,"get_IsClosed");
   pragma Import(MSIL,get_RecordsAffected,"get_RecordsAffected");
   pragma Import(MSIL,GetSchemaTable,"GetSchemaTable");
   pragma Import(MSIL,NextResult,"NextResult");
   pragma Import(MSIL,Read,"Read");
end MSSyst.Data.IDataReader;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Data.IDataReader,
   ".ver 1:0:5000:0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[System.Data]System.Data.IDataReader");
