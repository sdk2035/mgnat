-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with MSSyst.Collections.IComparer;
with MSSyst.Collections.IEqualityComparer;
with type MSSyst.String.Ref is access;
with type MSSyst.Globalization.CultureInfo.Ref is access;
with type MSSyst.Type_k.Ref is access;
package MSSyst.StringComparer is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is abstract new MSSyst.Object.Typ
         and MSSyst.Collections.IComparer.Typ
         and MSSyst.Collections.IEqualityComparer.Typ
   with record
      null;
   end record;
   function Compare(
      This : access Typ;
      x : MSSyst.String.Ref;
      y : MSSyst.String.Ref) return Integer;
   function Compare(
      This : access Typ;
      x : MSSyst.Object.Ref;
      y : MSSyst.Object.Ref) return Integer;
   function Create(
      culture : MSSyst.Globalization.CultureInfo.Ref;
      ignoreCase : Standard.Boolean) return MSSyst.StringComparer.Ref;
   function Equals(
      This : access Typ;
      x : MSSyst.String.Ref;
      y : MSSyst.String.Ref) return Standard.Boolean;
   function Equals(
      This : access Typ;
      x : MSSyst.Object.Ref;
      y : MSSyst.Object.Ref) return Standard.Boolean;
   function get_CurrentCulture return MSSyst.StringComparer.Ref;
   function get_CurrentCultureIgnoreCase return MSSyst.StringComparer.Ref;
   function get_InvariantCulture return MSSyst.StringComparer.Ref;
   function get_InvariantCultureIgnoreCase return MSSyst.StringComparer.Ref;
   function get_Ordinal return MSSyst.StringComparer.Ref;
   function get_OrdinalIgnoreCase return MSSyst.StringComparer.Ref;
   function GetHashCode(
      This : access Typ;
      obj : MSSyst.Object.Ref) return Integer;
   function GetHashCode(
      This : access Typ;
      obj : MSSyst.String.Ref) return Integer;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,Compare,"Compare");
   pragma Import(MSIL,Create,"Create");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_CurrentCulture,"get_CurrentCulture");
   pragma Import(MSIL,get_CurrentCultureIgnoreCase,"get_CurrentCultureIgnoreCase");
   pragma Import(MSIL,get_InvariantCulture,"get_InvariantCulture");
   pragma Import(MSIL,get_InvariantCultureIgnoreCase,"get_InvariantCultureIgnoreCase");
   pragma Import(MSIL,get_Ordinal,"get_Ordinal");
   pragma Import(MSIL,get_OrdinalIgnoreCase,"get_OrdinalIgnoreCase");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
end MSSyst.StringComparer;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.StringComparer,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.StringComparer");
