-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.IServiceProvider;
with type MSSyst.ComponentModel.IComponent.Ref is access;
with type MSSyst.ComponentModel.IContainer.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.ComponentModel.ISite is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is interface;
   function get_Component(
      This : access Typ) return MSSyst.ComponentModel.IComponent.Ref is abstract;
   function get_Container(
      This : access Typ) return MSSyst.ComponentModel.IContainer.Ref is abstract;
   function get_DesignMode(
      This : access Typ) return Standard.Boolean is abstract;
   function get_Name(
      This : access Typ) return MSSyst.String.Ref is abstract;
   procedure set_Name(
      This : access Typ;
      value : MSSyst.String.Ref) is abstract;
private
   pragma Import(MSIL,get_Component,"get_Component");
   pragma Import(MSIL,get_Container,"get_Container");
   pragma Import(MSIL,get_DesignMode,"get_DesignMode");
   pragma Import(MSIL,get_Name,"get_Name");
   pragma Import(MSIL,set_Name,"set_Name");
end MSSyst.ComponentModel.ISite;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.ComponentModel.ISite,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.ComponentModel.ISite");
