-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
package Microsoft.Win32.NativeMethods.PDH_RAW_COUNTER is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ   with record
      CStatus : Integer;
      pragma Import(MSIL,CStatus,"CStatus");
      TimeStamp : Long_Long_Integer;
      pragma Import(MSIL,TimeStamp,"TimeStamp");
      FirstValue : Long_Long_Integer;
      pragma Import(MSIL,FirstValue,"FirstValue");
      SecondValue : Long_Long_Integer;
      pragma Import(MSIL,SecondValue,"SecondValue");
      MultiCount : Integer;
      pragma Import(MSIL,MultiCount,"MultiCount");
   end record;
   function new_PDH_RAW_COUNTER(
      This : Ref := null) return Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_PDH_RAW_COUNTER);
end Microsoft.Win32.NativeMethods.PDH_RAW_COUNTER;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,Microsoft.Win32.NativeMethods.PDH_RAW_COUNTER,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]Microsoft.Win32.NativeMethods/PDH_RAW_COUNTER");
