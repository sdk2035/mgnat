-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Collections.IEnumerator;
with type MSSyst.Collections.DictionaryEntry.Valuetype is tagged;
with type MSSyst.Object.Ref is access;
package MSSyst.Collections.IDictionaryEnumerator is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is interface;
   function get_Entry(
      This : access Typ) return MSSyst.Collections.DictionaryEntry.Valuetype is abstract;
   function get_Key(
      This : access Typ) return MSSyst.Object.Ref is abstract;
   function get_Value(
      This : access Typ) return MSSyst.Object.Ref is abstract;
private
   pragma Import(MSIL,get_Entry,"get_Entry");
   pragma Import(MSIL,get_Key,"get_Key");
   pragma Import(MSIL,get_Value,"get_Value");
end MSSyst.Collections.IDictionaryEnumerator;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Collections.IDictionaryEnumerator,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Collections.IDictionaryEnumerator");
