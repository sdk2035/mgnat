-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with MSSyst.IAsyncResult;
with MSSyst.Runtime.Remoting.Messaging.IMessageSink;
with type MSSyst.Runtime.Remoting.Messaging.IMessageCtrl.Ref is access;
with type MSSyst.Runtime.Remoting.Messaging.IMessage.Ref is access;
with type MSSyst.Threading.WaitHandle.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.Runtime.Remoting.Messaging.AsyncResult is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ
         and MSSyst.IAsyncResult.Typ
         and MSSyst.Runtime.Remoting.Messaging.IMessageSink.Typ
   with record
      null;
   end record;
   function AsyncProcessMessage(
      This : access Typ;
      msg : MSSyst.Runtime.Remoting.Messaging.IMessage.Ref;
      replySink : MSSyst.Runtime.Remoting.Messaging.IMessageSink.Ref) return MSSyst.Runtime.Remoting.Messaging.IMessageCtrl.Ref;
   function get_AsyncDelegate(
      This : access Typ) return MSSyst.Object.Ref;
   function get_AsyncState(
      This : access Typ) return MSSyst.Object.Ref;
   function get_AsyncWaitHandle(
      This : access Typ) return MSSyst.Threading.WaitHandle.Ref;
   function get_CompletedSynchronously(
      This : access Typ) return Standard.Boolean;
   function get_EndInvokeCalled(
      This : access Typ) return Standard.Boolean;
   function get_IsCompleted(
      This : access Typ) return Standard.Boolean;
   function get_NextSink(
      This : access Typ) return MSSyst.Runtime.Remoting.Messaging.IMessageSink.Ref;
   function GetReplyMessage(
      This : access Typ) return MSSyst.Runtime.Remoting.Messaging.IMessage.Ref;
   procedure set_EndInvokeCalled(
      This : access Typ;
      value : Standard.Boolean);
   procedure SetMessageCtrl(
      This : access Typ;
      mc : MSSyst.Runtime.Remoting.Messaging.IMessageCtrl.Ref);
   function SyncProcessMessage(
      This : access Typ;
      msg : MSSyst.Runtime.Remoting.Messaging.IMessage.Ref) return MSSyst.Runtime.Remoting.Messaging.IMessage.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,AsyncProcessMessage,"AsyncProcessMessage");
   pragma Import(MSIL,get_AsyncDelegate,"get_AsyncDelegate");
   pragma Import(MSIL,get_AsyncState,"get_AsyncState");
   pragma Import(MSIL,get_AsyncWaitHandle,"get_AsyncWaitHandle");
   pragma Import(MSIL,get_CompletedSynchronously,"get_CompletedSynchronously");
   pragma Import(MSIL,get_EndInvokeCalled,"get_EndInvokeCalled");
   pragma Import(MSIL,get_IsCompleted,"get_IsCompleted");
   pragma Import(MSIL,get_NextSink,"get_NextSink");
   pragma Import(MSIL,GetReplyMessage,"GetReplyMessage");
   pragma Import(MSIL,set_EndInvokeCalled,"set_EndInvokeCalled");
   pragma Import(MSIL,SetMessageCtrl,"SetMessageCtrl");
   pragma Import(MSIL,SyncProcessMessage,"SyncProcessMessage");
end MSSyst.Runtime.Remoting.Messaging.AsyncResult;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Runtime.Remoting.Messaging.AsyncResult,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Runtime.Remoting.Messaging.AsyncResult");
