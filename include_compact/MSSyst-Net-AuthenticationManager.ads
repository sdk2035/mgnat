-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with type MSSyst.Net.Authorization.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Net.WebRequest.Ref is access;
with type MSSyst.Net.ICredentials.Ref is access;
with type MSSyst.Net.ICredentialPolicy.Ref is access;
with type MSSyst.Collections.Specialized.StringDictionary.Ref is access;
with type MSSyst.Collections.IEnumerator.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Net.IAuthenticationModule.Ref is access;
package MSSyst.Net.AuthenticationManager is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   function Authenticate(
      challenge : MSSyst.String.Ref;
      request : MSSyst.Net.WebRequest.Ref;
      credentials : MSSyst.Net.ICredentials.Ref) return MSSyst.Net.Authorization.Ref;
   function get_CredentialPolicy return MSSyst.Net.ICredentialPolicy.Ref;
   function get_CustomTargetNameDictionary return MSSyst.Collections.Specialized.StringDictionary.Ref;
   function get_RegisteredModules return MSSyst.Collections.IEnumerator.Ref;
   function PreAuthenticate(
      request : MSSyst.Net.WebRequest.Ref;
      credentials : MSSyst.Net.ICredentials.Ref) return MSSyst.Net.Authorization.Ref;
   procedure Register(
      authenticationModule : MSSyst.Net.IAuthenticationModule.Ref);
   procedure set_CredentialPolicy(
      value : MSSyst.Net.ICredentialPolicy.Ref);
   procedure Unregister(
      authenticationModule : MSSyst.Net.IAuthenticationModule.Ref);
   procedure Unregister(
      authenticationScheme : MSSyst.String.Ref);
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,Authenticate,"Authenticate");
   pragma Import(MSIL,get_CredentialPolicy,"get_CredentialPolicy");
   pragma Import(MSIL,get_CustomTargetNameDictionary,"get_CustomTargetNameDictionary");
   pragma Import(MSIL,get_RegisteredModules,"get_RegisteredModules");
   pragma Import(MSIL,PreAuthenticate,"PreAuthenticate");
   pragma Import(MSIL,Register,"Register");
   pragma Import(MSIL,set_CredentialPolicy,"set_CredentialPolicy");
   pragma Import(MSIL,Unregister,"Unregister");
end MSSyst.Net.AuthenticationManager;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Net.AuthenticationManager,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Net.AuthenticationManager");
