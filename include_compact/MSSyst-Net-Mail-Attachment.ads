-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Net.Mail.AttachmentBase;
with type MSSyst.String.Ref is access;
with type MSSyst.Text.Encoding.Ref is access;
with type MSSyst.Net.Mime.ContentType.Ref is access;
with type MSSyst.Object.Ref is access;
with type MSSyst.Net.Mime.ContentDisposition.Ref is access;
with type MSSyst.IO.Stream.Ref is access;
with MSSyst.Net.Mime.TransferEncoding;
with type MSSyst.Type_k.Ref is access;
package MSSyst.Net.Mail.Attachment is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Net.Mail.AttachmentBase.Typ   with record
      null;
   end record;
   function new_Attachment(
      This : Ref := null;
      fileName : MSSyst.String.Ref) return Ref;
   function new_Attachment(
      This : Ref := null;
      fileName : MSSyst.String.Ref;
      mediaType : MSSyst.String.Ref) return Ref;
   function new_Attachment(
      This : Ref := null;
      fileName : MSSyst.String.Ref;
      contentType : MSSyst.Net.Mime.ContentType.Ref) return Ref;
   function new_Attachment(
      This : Ref := null;
      contentStream : MSSyst.IO.Stream.Ref;
      name : MSSyst.String.Ref) return Ref;
   function new_Attachment(
      This : Ref := null;
      contentStream : MSSyst.IO.Stream.Ref;
      name : MSSyst.String.Ref;
      mediaType : MSSyst.String.Ref) return Ref;
   function new_Attachment(
      This : Ref := null;
      contentStream : MSSyst.IO.Stream.Ref;
      contentType : MSSyst.Net.Mime.ContentType.Ref) return Ref;
   function CreateAttachmentFromString(
      content : MSSyst.String.Ref;
      name : MSSyst.String.Ref) return MSSyst.Net.Mail.Attachment.Ref;
   function CreateAttachmentFromString(
      content : MSSyst.String.Ref;
      name : MSSyst.String.Ref;
      contentEncoding : MSSyst.Text.Encoding.Ref;
      mediaType : MSSyst.String.Ref) return MSSyst.Net.Mail.Attachment.Ref;
   function CreateAttachmentFromString(
      content : MSSyst.String.Ref;
      contentType : MSSyst.Net.Mime.ContentType.Ref) return MSSyst.Net.Mail.Attachment.Ref;
   function get_ContentDisposition(
      This : access Typ) return MSSyst.Net.Mime.ContentDisposition.Ref;
   function get_Name(
      This : access Typ) return MSSyst.String.Ref;
   function get_NameEncoding(
      This : access Typ) return MSSyst.Text.Encoding.Ref;
   procedure set_Name(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_NameEncoding(
      This : access Typ;
      value : MSSyst.Text.Encoding.Ref);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_Attachment);
   pragma Import(MSIL,CreateAttachmentFromString,"CreateAttachmentFromString");
   pragma Import(MSIL,get_ContentDisposition,"get_ContentDisposition");
   pragma Import(MSIL,get_Name,"get_Name");
   pragma Import(MSIL,get_NameEncoding,"get_NameEncoding");
   pragma Import(MSIL,set_Name,"set_Name");
   pragma Import(MSIL,set_NameEncoding,"set_NameEncoding");
end MSSyst.Net.Mail.Attachment;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Net.Mail.Attachment,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Net.Mail.Attachment");
