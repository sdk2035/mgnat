-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with type MSSyst.String.Ref is access;
with type MSSyst.Type_k.Ref is access;
package MSSyst.Security.Policy.CodeConnectAccess is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   DefaultPort : Integer;
   pragma Import(MSIL,DefaultPort,"DefaultPort");
   OriginPort : Integer;
   pragma Import(MSIL,OriginPort,"OriginPort");
   OriginScheme : MSSyst.String.Ref;
   pragma Import(MSIL,OriginScheme,"OriginScheme");
   AnyScheme : MSSyst.String.Ref;
   pragma Import(MSIL,AnyScheme,"AnyScheme");
   function new_CodeConnectAccess(
      This : Ref := null;
      allowScheme : MSSyst.String.Ref;
      allowPort : Integer) return Ref;
   function CreateAnySchemeAccess(
      allowPort : Integer) return MSSyst.Security.Policy.CodeConnectAccess.Ref;
   function CreateOriginSchemeAccess(
      allowPort : Integer) return MSSyst.Security.Policy.CodeConnectAccess.Ref;
   function Equals(
      This : access Typ;
      o : MSSyst.Object.Ref) return Standard.Boolean;
   function get_Port(
      This : access Typ) return Integer;
   function get_Scheme(
      This : access Typ) return MSSyst.String.Ref;
   function GetHashCode(
      This : access Typ) return Integer;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_CodeConnectAccess);
   pragma Import(MSIL,CreateAnySchemeAccess,"CreateAnySchemeAccess");
   pragma Import(MSIL,CreateOriginSchemeAccess,"CreateOriginSchemeAccess");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_Port,"get_Port");
   pragma Import(MSIL,get_Scheme,"get_Scheme");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
end MSSyst.Security.Policy.CodeConnectAccess;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Security.Policy.CodeConnectAccess,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Security.Policy.CodeConnectAccess");
