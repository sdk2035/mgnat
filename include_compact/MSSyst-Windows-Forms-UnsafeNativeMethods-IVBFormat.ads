-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.Object.Ref_addrof is access;
package MSSyst.Windows.Forms.UnsafeNativeMethods.IVBFormat is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is interface;
   function Format(
      This : access Typ;
      var : MSSyst.Object.Ref_addrof;
      pszFormat : MSIL_Types.native_int;
      lpBuffer : MSIL_Types.native_int;
      cpBuffer : MSIL_Types.int16;
      lcid : Integer;
      firstD : MSIL_Types.int16;
      firstW : MSIL_Types.int16;
      result : MSIL_Types.Int16_Arr) return Integer is abstract;
private
   pragma Import(MSIL,Format,"Format");
end MSSyst.Windows.Forms.UnsafeNativeMethods.IVBFormat;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Windows.Forms.UnsafeNativeMethods.IVBFormat,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System.Windows.Forms]System.Windows.Forms.UnsafeNativeMethods/IVBFormat");
