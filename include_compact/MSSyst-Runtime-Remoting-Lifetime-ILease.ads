-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.TimeSpan.Valuetype is tagged;
with MSSyst.Runtime.Remoting.Lifetime.LeaseState;
with type MSSyst.Runtime.Remoting.Lifetime.ISponsor.Ref is access;
package MSSyst.Runtime.Remoting.Lifetime.ILease is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is interface;
   function get_CurrentLeaseTime(
      This : access Typ) return MSSyst.TimeSpan.Valuetype is abstract;
   function get_CurrentState(
      This : access Typ) return MSSyst.Runtime.Remoting.Lifetime.LeaseState.Valuetype is abstract;
   function get_InitialLeaseTime(
      This : access Typ) return MSSyst.TimeSpan.Valuetype is abstract;
   function get_RenewOnCallTime(
      This : access Typ) return MSSyst.TimeSpan.Valuetype is abstract;
   function get_SponsorshipTimeout(
      This : access Typ) return MSSyst.TimeSpan.Valuetype is abstract;
   procedure Register(
      This : access Typ;
      obj : MSSyst.Runtime.Remoting.Lifetime.ISponsor.Ref;
      renewalTime : MSSyst.TimeSpan.Valuetype) is abstract;
   procedure Register(
      This : access Typ;
      obj : MSSyst.Runtime.Remoting.Lifetime.ISponsor.Ref) is abstract;
   function Renew(
      This : access Typ;
      renewalTime : MSSyst.TimeSpan.Valuetype) return MSSyst.TimeSpan.Valuetype is abstract;
   procedure set_InitialLeaseTime(
      This : access Typ;
      value : MSSyst.TimeSpan.Valuetype) is abstract;
   procedure set_RenewOnCallTime(
      This : access Typ;
      value : MSSyst.TimeSpan.Valuetype) is abstract;
   procedure set_SponsorshipTimeout(
      This : access Typ;
      value : MSSyst.TimeSpan.Valuetype) is abstract;
   procedure Unregister(
      This : access Typ;
      obj : MSSyst.Runtime.Remoting.Lifetime.ISponsor.Ref) is abstract;
private
   pragma Import(MSIL,get_CurrentLeaseTime,"get_CurrentLeaseTime");
   pragma Import(MSIL,get_CurrentState,"get_CurrentState");
   pragma Import(MSIL,get_InitialLeaseTime,"get_InitialLeaseTime");
   pragma Import(MSIL,get_RenewOnCallTime,"get_RenewOnCallTime");
   pragma Import(MSIL,get_SponsorshipTimeout,"get_SponsorshipTimeout");
   pragma Import(MSIL,Register,"Register");
   pragma Import(MSIL,Renew,"Renew");
   pragma Import(MSIL,set_InitialLeaseTime,"set_InitialLeaseTime");
   pragma Import(MSIL,set_RenewOnCallTime,"set_RenewOnCallTime");
   pragma Import(MSIL,set_SponsorshipTimeout,"set_SponsorshipTimeout");
   pragma Import(MSIL,Unregister,"Unregister");
end MSSyst.Runtime.Remoting.Lifetime.ILease;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Runtime.Remoting.Lifetime.ILease,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Runtime.Remoting.Lifetime.ILease");
