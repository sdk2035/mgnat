-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with MSSyst.Runtime.Serialization.ISerializable;
with type MSSyst.ApplicationIdentity.Ref is access;
with type MSSyst.String.Ref_array is access;
with MSSyst.ActivationContext.ContextForm;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.ActivationContext is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ
         and MSSyst.Runtime.Serialization.ISerializable.Typ
   with record
      null;
   end record;
   function CreatePartialActivationContext(
      identity : MSSyst.ApplicationIdentity.Ref;
      manifestPaths : MSSyst.String.Ref_array) return MSSyst.ActivationContext.Ref;
   function CreatePartialActivationContext(
      identity : MSSyst.ApplicationIdentity.Ref) return MSSyst.ActivationContext.Ref;
   procedure Dispose(
      This : access Typ);
   function get_Form(
      This : access Typ) return MSSyst.ActivationContext.ContextForm.Valuetype;
   function get_Identity(
      This : access Typ) return MSSyst.ApplicationIdentity.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,CreatePartialActivationContext,"CreatePartialActivationContext");
   pragma Import(MSIL,Dispose,"Dispose");
   pragma Import(MSIL,get_Form,"get_Form");
   pragma Import(MSIL,get_Identity,"get_Identity");
end MSSyst.ActivationContext;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.ActivationContext,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.ActivationContext");
