-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with MSSyst.Collections.ICollection;
with MSSyst.ICloneable;
with type MSSyst.Array_k.Ref is access;
with type MSSyst.Collections.IEnumerator.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Object.Ref_array is access;
with type MSSyst.String.Ref is access;
package MSSyst.Collections.Queue is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ
         and MSSyst.Collections.ICollection.Typ
         and MSSyst.ICloneable.Typ
   with record
      null;
   end record;
   function new_Queue(
      This : Ref := null) return Ref;
   function new_Queue(
      This : Ref := null;
      capacity : Integer) return Ref;
   function new_Queue(
      This : Ref := null;
      capacity : Integer;
      growFactor : Float) return Ref;
   function new_Queue(
      This : Ref := null;
      col : MSSyst.Collections.ICollection.Ref) return Ref;
   procedure Clear(
      This : access Typ);
   function Clone(
      This : access Typ) return MSSyst.Object.Ref;
   function Contains(
      This : access Typ;
      obj : MSSyst.Object.Ref) return Standard.Boolean;
   procedure CopyTo(
      This : access Typ;
      array_k : MSSyst.Array_k.Ref;
      index : Integer);
   function Dequeue(
      This : access Typ) return MSSyst.Object.Ref;
   procedure Enqueue(
      This : access Typ;
      obj : MSSyst.Object.Ref);
   function get_Count(
      This : access Typ) return Integer;
   function get_IsSynchronized(
      This : access Typ) return Standard.Boolean;
   function get_SyncRoot(
      This : access Typ) return MSSyst.Object.Ref;
   function GetEnumerator(
      This : access Typ) return MSSyst.Collections.IEnumerator.Ref;
   function Peek(
      This : access Typ) return MSSyst.Object.Ref;
   function Synchronized_k(
      queue : MSSyst.Collections.Queue.Ref) return MSSyst.Collections.Queue.Ref;
   function ToArray(
      This : access Typ) return MSSyst.Object.Ref_array;
   procedure TrimToSize(
      This : access Typ);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_Queue);
   pragma Import(MSIL,Clear,"Clear");
   pragma Import(MSIL,Clone,"Clone");
   pragma Import(MSIL,Contains,"Contains");
   pragma Import(MSIL,CopyTo,"CopyTo");
   pragma Import(MSIL,Dequeue,"Dequeue");
   pragma Import(MSIL,Enqueue,"Enqueue");
   pragma Import(MSIL,get_Count,"get_Count");
   pragma Import(MSIL,get_IsSynchronized,"get_IsSynchronized");
   pragma Import(MSIL,get_SyncRoot,"get_SyncRoot");
   pragma Import(MSIL,GetEnumerator,"GetEnumerator");
   pragma Import(MSIL,Peek,"Peek");
   pragma Import(MSIL,Synchronized_k,"Synchronized");
   pragma Import(MSIL,ToArray,"ToArray");
   pragma Import(MSIL,TrimToSize,"TrimToSize");
end MSSyst.Collections.Queue;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Collections.Queue,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Collections.Queue");
