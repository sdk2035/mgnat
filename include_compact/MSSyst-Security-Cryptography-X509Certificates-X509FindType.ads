-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.Object.Ref is access;
with type MSSyst.Type_k.Ref is access;
with MSSyst.TypeCode;
with type MSSyst.String.Ref is access;
with type MSSyst.IFormatProvider.Ref is access;
package MSSyst.Security.Cryptography.X509Certificates.X509FindType is
   type ValueType is (
      FindByThumbprint,
      FindBySubjectName,
      FindBySubjectDistinguishedName,
      FindByIssuerName,
      FindByIssuerDistinguishedName,
      FindBySerialNumber,
      FindByTimeValid,
      FindByTimeNotYetValid,
      FindByTimeExpired,
      FindByTemplateName,
      FindByApplicationPolicy,
      FindByCertificatePolicy,
      FindByExtension,
      FindByKeyUsage,
      FindBySubjectKeyIdentifier);
   pragma Convention (MSIL, ValueType);
   for ValueType use (
      FindByThumbprint =>  0,
      FindBySubjectName =>  1,
      FindBySubjectDistinguishedName =>  2,
      FindByIssuerName =>  3,
      FindByIssuerDistinguishedName =>  4,
      FindBySerialNumber =>  5,
      FindByTimeValid =>  6,
      FindByTimeNotYetValid =>  7,
      FindByTimeExpired =>  8,
      FindByTemplateName =>  9,
      FindByApplicationPolicy =>  10,
      FindByCertificatePolicy =>  11,
      FindByExtension =>  12,
      FindByKeyUsage =>  13,
      FindBySubjectKeyIdentifier =>  14);
   type ValueType_Arr is array (Natural range <>) of ValueType; -- start at 0
   type ValueType_Array is access all ValueType_Arr;
   type ValueType_addrof is access all ValueType;
   type ValueType_array_addrof is access all ValueType_Array;
   function CompareTo(
      This : Valuetype;
      target : MSSyst.Object.Ref) return Integer;
   function Equals(
      This : Valuetype;
      obj : MSSyst.Object.Ref) return Standard.Boolean;
   function GetHashCode(
      This : Valuetype) return Integer;
   function GetType(
      This : Valuetype) return MSSyst.Type_k.Ref;
   function GetTypeCode(
      This : Valuetype) return MSSyst.TypeCode.Valuetype;
   function ToString(
      This : Valuetype;
      provider : MSSyst.IFormatProvider.Ref) return MSSyst.String.Ref;
   function ToString(
      This : Valuetype) return MSSyst.String.Ref;
   function ToString(
      This : Valuetype;
      format : MSSyst.String.Ref;
      provider : MSSyst.IFormatProvider.Ref) return MSSyst.String.Ref;
   function ToString(
      This : Valuetype;
      format : MSSyst.String.Ref) return MSSyst.String.Ref;
private
   pragma Import(MSIL,CompareTo,"CompareTo");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetType,"GetType");
   pragma Import(MSIL,GetTypeCode,"GetTypeCode");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Security.Cryptography.X509Certificates.X509FindType;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Security.Cryptography.X509Certificates.X509FindType,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Security.Cryptography.X509Certificates.X509FindType");
