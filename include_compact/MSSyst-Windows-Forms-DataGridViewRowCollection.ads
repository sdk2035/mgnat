-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with MSSyst.Collections.IList;
with MSSyst.Collections.ICollection;
with type MSSyst.Windows.Forms.DataGridViewRow.Ref is access;
with type MSSyst.Object.Ref_array is access;
with type MSSyst.ComponentModel.CollectionChangeEventHandler.Ref is access;
with type MSSyst.Windows.Forms.DataGridViewRow.Ref_array is access;
with MSSyst.Windows.Forms.DataGridViewElementStates;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Windows.Forms.DataGridView.Ref is access;
package MSSyst.Windows.Forms.DataGridViewRowCollection is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ
         and MSSyst.Collections.IList.Typ
         and MSSyst.Collections.ICollection.Typ
   with record
      null;
   end record;
   function new_DataGridViewRowCollection(
      This : Ref := null;
      dataGridView : MSSyst.Windows.Forms.DataGridView.Ref) return Ref;
   function Add(
      This : access Typ;
      count : Integer) return Integer;
   function Add(
      This : access Typ;
      dataGridViewRow : MSSyst.Windows.Forms.DataGridViewRow.Ref) return Integer;
   function Add(
      This : access Typ;
      values : MSSyst.Object.Ref_array) return Integer;
   function Add(
      This : access Typ) return Integer;
   procedure add_CollectionChanged(
      This : access Typ;
      value : MSSyst.ComponentModel.CollectionChangeEventHandler.Ref);
   function AddCopies(
      This : access Typ;
      indexSource : Integer;
      count : Integer) return Integer;
   function AddCopy(
      This : access Typ;
      indexSource : Integer) return Integer;
   procedure AddRange(
      This : access Typ;
      dataGridViewRows : MSSyst.Windows.Forms.DataGridViewRow.Ref_array);
   procedure Clear(
      This : access Typ);
   function Contains(
      This : access Typ;
      dataGridViewRow : MSSyst.Windows.Forms.DataGridViewRow.Ref) return Standard.Boolean;
   procedure CopyTo(
      This : access Typ;
      array_k : MSSyst.Windows.Forms.DataGridViewRow.Ref_array;
      index : Integer);
   function get_Count(
      This : access Typ) return Integer;
   function get_Item(
      This : access Typ;
      index : Integer) return MSSyst.Windows.Forms.DataGridViewRow.Ref;
   function GetFirstRow(
      This : access Typ;
      includeFilter : MSSyst.Windows.Forms.DataGridViewElementStates.Valuetype;
      excludeFilter : MSSyst.Windows.Forms.DataGridViewElementStates.Valuetype) return Integer;
   function GetFirstRow(
      This : access Typ;
      includeFilter : MSSyst.Windows.Forms.DataGridViewElementStates.Valuetype) return Integer;
   function GetLastRow(
      This : access Typ;
      includeFilter : MSSyst.Windows.Forms.DataGridViewElementStates.Valuetype) return Integer;
   function GetNextRow(
      This : access Typ;
      indexStart : Integer;
      includeFilter : MSSyst.Windows.Forms.DataGridViewElementStates.Valuetype;
      excludeFilter : MSSyst.Windows.Forms.DataGridViewElementStates.Valuetype) return Integer;
   function GetNextRow(
      This : access Typ;
      indexStart : Integer;
      includeFilter : MSSyst.Windows.Forms.DataGridViewElementStates.Valuetype) return Integer;
   function GetPreviousRow(
      This : access Typ;
      indexStart : Integer;
      includeFilter : MSSyst.Windows.Forms.DataGridViewElementStates.Valuetype;
      excludeFilter : MSSyst.Windows.Forms.DataGridViewElementStates.Valuetype) return Integer;
   function GetPreviousRow(
      This : access Typ;
      indexStart : Integer;
      includeFilter : MSSyst.Windows.Forms.DataGridViewElementStates.Valuetype) return Integer;
   function GetRowCount(
      This : access Typ;
      includeFilter : MSSyst.Windows.Forms.DataGridViewElementStates.Valuetype) return Integer;
   function GetRowsHeight(
      This : access Typ;
      includeFilter : MSSyst.Windows.Forms.DataGridViewElementStates.Valuetype) return Integer;
   function GetRowState(
      This : access Typ;
      rowIndex : Integer) return MSSyst.Windows.Forms.DataGridViewElementStates.Valuetype;
   function IndexOf(
      This : access Typ;
      dataGridViewRow : MSSyst.Windows.Forms.DataGridViewRow.Ref) return Integer;
   procedure Insert(
      This : access Typ;
      rowIndex : Integer;
      count : Integer);
   procedure Insert(
      This : access Typ;
      rowIndex : Integer;
      values : MSSyst.Object.Ref_array);
   procedure Insert(
      This : access Typ;
      rowIndex : Integer;
      dataGridViewRow : MSSyst.Windows.Forms.DataGridViewRow.Ref);
   procedure InsertCopies(
      This : access Typ;
      indexSource : Integer;
      indexDestination : Integer;
      count : Integer);
   procedure InsertCopy(
      This : access Typ;
      indexSource : Integer;
      indexDestination : Integer);
   procedure InsertRange(
      This : access Typ;
      rowIndex : Integer;
      dataGridViewRows : MSSyst.Windows.Forms.DataGridViewRow.Ref_array);
   procedure Remove(
      This : access Typ;
      dataGridViewRow : MSSyst.Windows.Forms.DataGridViewRow.Ref);
   procedure remove_CollectionChanged(
      This : access Typ;
      value : MSSyst.ComponentModel.CollectionChangeEventHandler.Ref);
   procedure RemoveAt(
      This : access Typ;
      index : Integer);
   function SharedRow(
      This : access Typ;
      rowIndex : Integer) return MSSyst.Windows.Forms.DataGridViewRow.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_DataGridViewRowCollection);
   pragma Import(MSIL,Add,"Add");
   pragma Import(MSIL,add_CollectionChanged,"add_CollectionChanged");
   pragma Import(MSIL,AddCopies,"AddCopies");
   pragma Import(MSIL,AddCopy,"AddCopy");
   pragma Import(MSIL,AddRange,"AddRange");
   pragma Import(MSIL,Clear,"Clear");
   pragma Import(MSIL,Contains,"Contains");
   pragma Import(MSIL,CopyTo,"CopyTo");
   pragma Import(MSIL,get_Count,"get_Count");
   pragma Import(MSIL,get_Item,"get_Item");
   pragma Import(MSIL,GetFirstRow,"GetFirstRow");
   pragma Import(MSIL,GetLastRow,"GetLastRow");
   pragma Import(MSIL,GetNextRow,"GetNextRow");
   pragma Import(MSIL,GetPreviousRow,"GetPreviousRow");
   pragma Import(MSIL,GetRowCount,"GetRowCount");
   pragma Import(MSIL,GetRowsHeight,"GetRowsHeight");
   pragma Import(MSIL,GetRowState,"GetRowState");
   pragma Import(MSIL,IndexOf,"IndexOf");
   pragma Import(MSIL,Insert,"Insert");
   pragma Import(MSIL,InsertCopies,"InsertCopies");
   pragma Import(MSIL,InsertCopy,"InsertCopy");
   pragma Import(MSIL,InsertRange,"InsertRange");
   pragma Import(MSIL,Remove,"Remove");
   pragma Import(MSIL,remove_CollectionChanged,"remove_CollectionChanged");
   pragma Import(MSIL,RemoveAt,"RemoveAt");
   pragma Import(MSIL,SharedRow,"SharedRow");
end MSSyst.Windows.Forms.DataGridViewRowCollection;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Windows.Forms.DataGridViewRowCollection,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System.Windows.Forms]System.Windows.Forms.DataGridViewRowCollection");
