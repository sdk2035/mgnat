-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.String.Ref is access;
with type MSSyst.Runtime.InteropServices.ComTypes.ITypeInfo.Ref_array is access;
with type MSSyst.String.Ref_addrof is access;
with type MSSyst.Runtime.InteropServices.ComTypes.ITypeComp.Ref_addrof is access;
with type MSSyst.Runtime.InteropServices.ComTypes.ITypeInfo.Ref_addrof is access;
with MSSyst.Guid;
with MSSyst.Runtime.InteropServices.ComTypes.TYPEKIND;
package MSSyst.Runtime.InteropServices.ComTypes.ITypeLib is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is interface;
   procedure FindName(
      This : access Typ;
      szNameBuf : MSSyst.String.Ref;
      lHashVal : Integer;
      ppTInfo : MSSyst.Runtime.InteropServices.ComTypes.ITypeInfo.Ref_array;
      rgMemId : MSIL_Types.Int32_Arr;
      pcFound : MSIL_Types.Int16_addrof) is abstract;
   procedure GetDocumentation(
      This : access Typ;
      index : Integer;
      strName : MSSyst.String.Ref_addrof;
      strDocString : MSSyst.String.Ref_addrof;
      dwHelpContext : MSIL_Types.Int32_addrof;
      strHelpFile : MSSyst.String.Ref_addrof) is abstract;
   procedure GetLibAttr(
      This : access Typ;
      ppTLibAttr : MSIL_Types.native_int_addrof) is abstract;
   procedure GetTypeComp(
      This : access Typ;
      ppTComp : MSSyst.Runtime.InteropServices.ComTypes.ITypeComp.Ref_addrof) is abstract;
   procedure GetTypeInfo(
      This : access Typ;
      index : Integer;
      ppTI : MSSyst.Runtime.InteropServices.ComTypes.ITypeInfo.Ref_addrof) is abstract;
   function GetTypeInfoCount(
      This : access Typ) return Integer is abstract;
   procedure GetTypeInfoOfGuid(
      This : access Typ;
      guid : MSSyst.Guid.Valuetype_addrof;
      ppTInfo : MSSyst.Runtime.InteropServices.ComTypes.ITypeInfo.Ref_addrof) is abstract;
   procedure GetTypeInfoType(
      This : access Typ;
      index : Integer;
      pTKind : MSSyst.Runtime.InteropServices.ComTypes.TYPEKIND.Valuetype_addrof) is abstract;
   function IsName(
      This : access Typ;
      szNameBuf : MSSyst.String.Ref;
      lHashVal : Integer) return Standard.Boolean is abstract;
   procedure ReleaseTLibAttr(
      This : access Typ;
      pTLibAttr : MSIL_Types.native_int) is abstract;
private
   pragma Import(MSIL,FindName,"FindName");
   pragma Import(MSIL,GetDocumentation,"GetDocumentation");
   pragma Import(MSIL,GetLibAttr,"GetLibAttr");
   pragma Import(MSIL,GetTypeComp,"GetTypeComp");
   pragma Import(MSIL,GetTypeInfo,"GetTypeInfo");
   pragma Import(MSIL,GetTypeInfoCount,"GetTypeInfoCount");
   pragma Import(MSIL,GetTypeInfoOfGuid,"GetTypeInfoOfGuid");
   pragma Import(MSIL,GetTypeInfoType,"GetTypeInfoType");
   pragma Import(MSIL,IsName,"IsName");
   pragma Import(MSIL,ReleaseTLibAttr,"ReleaseTLibAttr");
end MSSyst.Runtime.InteropServices.ComTypes.ITypeLib;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Runtime.InteropServices.ComTypes.ITypeLib,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Runtime.InteropServices.ComTypes.ITypeLib");
