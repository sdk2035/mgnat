-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Diagnostics.TraceListener;
with type MSSyst.Runtime.Remoting.ObjRef.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Object.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Collections.Specialized.StringDictionary.Ref is access;
with type MSSyst.Diagnostics.TraceFilter.Ref is access;
with MSSyst.Diagnostics.TraceOptions;
with type MSSyst.Diagnostics.TraceEventCache.Ref is access;
with MSSyst.Diagnostics.TraceEventType;
with type MSSyst.Object.Ref_array is access;
with type MSSyst.Guid.Valuetype is tagged;
package MSSyst.Diagnostics.DefaultTraceListener is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Diagnostics.TraceListener.Typ   with record
      null;
   end record;
   function new_DefaultTraceListener(
      This : Ref := null) return Ref;
   procedure Fail(
      This : access Typ;
      message : MSSyst.String.Ref;
      detailMessage : MSSyst.String.Ref);
   procedure Fail(
      This : access Typ;
      message : MSSyst.String.Ref);
   function get_AssertUiEnabled(
      This : access Typ) return Standard.Boolean;
   function get_LogFileName(
      This : access Typ) return MSSyst.String.Ref;
   procedure set_AssertUiEnabled(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_LogFileName(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure Write(
      This : access Typ;
      message : MSSyst.String.Ref);
   procedure WriteLine(
      This : access Typ;
      message : MSSyst.String.Ref);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_DefaultTraceListener);
   pragma Import(MSIL,Fail,"Fail");
   pragma Import(MSIL,get_AssertUiEnabled,"get_AssertUiEnabled");
   pragma Import(MSIL,get_LogFileName,"get_LogFileName");
   pragma Import(MSIL,set_AssertUiEnabled,"set_AssertUiEnabled");
   pragma Import(MSIL,set_LogFileName,"set_LogFileName");
   pragma Import(MSIL,Write,"Write");
   pragma Import(MSIL,WriteLine,"WriteLine");
end MSSyst.Diagnostics.DefaultTraceListener;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Diagnostics.DefaultTraceListener,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Diagnostics.DefaultTraceListener");
