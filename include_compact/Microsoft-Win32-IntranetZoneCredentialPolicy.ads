-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with MSSyst.Net.ICredentialPolicy;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Uri.Ref is access;
with type MSSyst.Net.WebRequest.Ref is access;
with type MSSyst.Net.NetworkCredential.Ref is access;
with type MSSyst.Net.IAuthenticationModule.Ref is access;
with type MSSyst.String.Ref is access;
package Microsoft.Win32.IntranetZoneCredentialPolicy is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ
         and MSSyst.Net.ICredentialPolicy.Typ
   with record
      null;
   end record;
   function new_IntranetZoneCredentialPolicy(
      This : Ref := null) return Ref;
   function ShouldSendCredential(
      This : access Typ;
      challengeUri : MSSyst.Uri.Ref;
      request : MSSyst.Net.WebRequest.Ref;
      credential : MSSyst.Net.NetworkCredential.Ref;
      authModule : MSSyst.Net.IAuthenticationModule.Ref) return Standard.Boolean;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_IntranetZoneCredentialPolicy);
   pragma Import(MSIL,ShouldSendCredential,"ShouldSendCredential");
end Microsoft.Win32.IntranetZoneCredentialPolicy;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,Microsoft.Win32.IntranetZoneCredentialPolicy,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]Microsoft.Win32.IntranetZoneCredentialPolicy");
