-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with MSSyst.Security.Principal.IIdentity;
with type MSSyst.String.Ref is access;
with type MSSyst.Type_k.Ref is access;
package MSSyst.Security.Principal.GenericIdentity is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ
         and MSSyst.Security.Principal.IIdentity.Typ
   with record
      null;
   end record;
   function new_GenericIdentity(
      This : Ref := null;
      name : MSSyst.String.Ref) return Ref;
   function new_GenericIdentity(
      This : Ref := null;
      name : MSSyst.String.Ref;
      type_k : MSSyst.String.Ref) return Ref;
   function get_AuthenticationType(
      This : access Typ) return MSSyst.String.Ref;
   function get_IsAuthenticated(
      This : access Typ) return Standard.Boolean;
   function get_Name(
      This : access Typ) return MSSyst.String.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_GenericIdentity);
   pragma Import(MSIL,get_AuthenticationType,"get_AuthenticationType");
   pragma Import(MSIL,get_IsAuthenticated,"get_IsAuthenticated");
   pragma Import(MSIL,get_Name,"get_Name");
end MSSyst.Security.Principal.GenericIdentity;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Security.Principal.GenericIdentity,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Security.Principal.GenericIdentity");
