-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with MSSyst.Security.Policy.IIdentityPermissionFactory;
with type MSSyst.Security.IPermission.Ref is access;
with type MSSyst.Security.Policy.Evidence.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Security.Permissions.StrongNamePublicKeyBlob.Ref is access;
with type MSSyst.Version.Ref is access;
with type MSSyst.Type_k.Ref is access;
package MSSyst.Security.Policy.StrongName is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ
         and MSSyst.Security.Policy.IIdentityPermissionFactory.Typ
   with record
      null;
   end record;
   function new_StrongName(
      This : Ref := null;
      blob : MSSyst.Security.Permissions.StrongNamePublicKeyBlob.Ref;
      name : MSSyst.String.Ref;
      version : MSSyst.Version.Ref) return Ref;
   function Copy(
      This : access Typ) return MSSyst.Object.Ref;
   function CreateIdentityPermission(
      This : access Typ;
      evidence : MSSyst.Security.Policy.Evidence.Ref) return MSSyst.Security.IPermission.Ref;
   function Equals(
      This : access Typ;
      o : MSSyst.Object.Ref) return Standard.Boolean;
   function get_Name(
      This : access Typ) return MSSyst.String.Ref;
   function get_PublicKey(
      This : access Typ) return MSSyst.Security.Permissions.StrongNamePublicKeyBlob.Ref;
   function get_Version(
      This : access Typ) return MSSyst.Version.Ref;
   function GetHashCode(
      This : access Typ) return Integer;
   function ToString(
      This : access Typ) return MSSyst.String.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_StrongName);
   pragma Import(MSIL,Copy,"Copy");
   pragma Import(MSIL,CreateIdentityPermission,"CreateIdentityPermission");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_Name,"get_Name");
   pragma Import(MSIL,get_PublicKey,"get_PublicKey");
   pragma Import(MSIL,get_Version,"get_Version");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Security.Policy.StrongName;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Security.Policy.StrongName,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Security.Policy.StrongName");
