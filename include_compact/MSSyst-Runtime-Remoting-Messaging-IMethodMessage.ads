-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Runtime.Remoting.Messaging.IMessage;
with type MSSyst.Object.Ref_array is access;
with type MSSyst.Runtime.Remoting.Messaging.LogicalCallContext.Ref is access;
with type MSSyst.Reflection.MethodBase.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Object.Ref is access;
package MSSyst.Runtime.Remoting.Messaging.IMethodMessage is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is interface;
   function get_ArgCount(
      This : access Typ) return Integer is abstract;
   function get_Args(
      This : access Typ) return MSSyst.Object.Ref_array is abstract;
   function get_HasVarArgs(
      This : access Typ) return Standard.Boolean is abstract;
   function get_LogicalCallContext(
      This : access Typ) return MSSyst.Runtime.Remoting.Messaging.LogicalCallContext.Ref is abstract;
   function get_MethodBase(
      This : access Typ) return MSSyst.Reflection.MethodBase.Ref is abstract;
   function get_MethodName(
      This : access Typ) return MSSyst.String.Ref is abstract;
   function get_MethodSignature(
      This : access Typ) return MSSyst.Object.Ref is abstract;
   function get_TypeName(
      This : access Typ) return MSSyst.String.Ref is abstract;
   function get_Uri(
      This : access Typ) return MSSyst.String.Ref is abstract;
   function GetArg(
      This : access Typ;
      argNum : Integer) return MSSyst.Object.Ref is abstract;
   function GetArgName(
      This : access Typ;
      index : Integer) return MSSyst.String.Ref is abstract;
private
   pragma Import(MSIL,get_ArgCount,"get_ArgCount");
   pragma Import(MSIL,get_Args,"get_Args");
   pragma Import(MSIL,get_HasVarArgs,"get_HasVarArgs");
   pragma Import(MSIL,get_LogicalCallContext,"get_LogicalCallContext");
   pragma Import(MSIL,get_MethodBase,"get_MethodBase");
   pragma Import(MSIL,get_MethodName,"get_MethodName");
   pragma Import(MSIL,get_MethodSignature,"get_MethodSignature");
   pragma Import(MSIL,get_TypeName,"get_TypeName");
   pragma Import(MSIL,get_Uri,"get_Uri");
   pragma Import(MSIL,GetArg,"GetArg");
   pragma Import(MSIL,GetArgName,"GetArgName");
end MSSyst.Runtime.Remoting.Messaging.IMethodMessage;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Runtime.Remoting.Messaging.IMethodMessage,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Runtime.Remoting.Messaging.IMethodMessage");
