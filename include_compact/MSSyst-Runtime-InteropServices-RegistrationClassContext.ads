-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.Object.Ref is access;
with type MSSyst.Type_k.Ref is access;
with MSSyst.TypeCode;
with type MSSyst.String.Ref is access;
with type MSSyst.IFormatProvider.Ref is access;
package MSSyst.Runtime.InteropServices.RegistrationClassContext is
   type ValueType is (
      InProcessServer,
      InProcessHandler,
      LocalServer,
      InProcessServer16,
      RemoteServer,
      InProcessHandler16,
      Reserved1,
      Reserved2,
      Reserved3,
      Reserved4,
      NoCodeDownload,
      Reserved5,
      NoCustomMarshal,
      EnableCodeDownload,
      NoFailureLog,
      DisableActivateAsActivator,
      EnableActivateAsActivator,
      FromDefaultContext);
   pragma Convention (MSIL, ValueType);
   for ValueType use (
      InProcessServer =>  0,
      InProcessHandler =>  2,
      LocalServer =>  4,
      InProcessServer16 =>  8,
      RemoteServer =>  16,
      InProcessHandler16 =>  32,
      Reserved1 =>  64,
      Reserved2 =>  128,
      Reserved3 =>  256,
      Reserved4 =>  512,
      NoCodeDownload =>  1024,
      Reserved5 =>  2048,
      NoCustomMarshal =>  4096,
      EnableCodeDownload =>  8192,
      NoFailureLog =>  16384,
      DisableActivateAsActivator =>  32768,
      EnableActivateAsActivator =>  65536,
      FromDefaultContext =>  131072);
   type ValueType_Arr is array (Natural range <>) of ValueType; -- start at 0
   type ValueType_Array is access all ValueType_Arr;
   type ValueType_addrof is access all ValueType;
   type ValueType_array_addrof is access all ValueType_Array;
   function "+" (L,R : Valuetype) return Valuetype;
   pragma Import (MSIL, "+", "+");
   function CompareTo(
      This : Valuetype;
      target : MSSyst.Object.Ref) return Integer;
   function Equals(
      This : Valuetype;
      obj : MSSyst.Object.Ref) return Standard.Boolean;
   function GetHashCode(
      This : Valuetype) return Integer;
   function GetType(
      This : Valuetype) return MSSyst.Type_k.Ref;
   function GetTypeCode(
      This : Valuetype) return MSSyst.TypeCode.Valuetype;
   function ToString(
      This : Valuetype;
      provider : MSSyst.IFormatProvider.Ref) return MSSyst.String.Ref;
   function ToString(
      This : Valuetype) return MSSyst.String.Ref;
   function ToString(
      This : Valuetype;
      format : MSSyst.String.Ref;
      provider : MSSyst.IFormatProvider.Ref) return MSSyst.String.Ref;
   function ToString(
      This : Valuetype;
      format : MSSyst.String.Ref) return MSSyst.String.Ref;
private
   pragma Import(MSIL,CompareTo,"CompareTo");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetType,"GetType");
   pragma Import(MSIL,GetTypeCode,"GetTypeCode");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Runtime.InteropServices.RegistrationClassContext;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Runtime.InteropServices.RegistrationClassContext,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Runtime.InteropServices.RegistrationClassContext");
