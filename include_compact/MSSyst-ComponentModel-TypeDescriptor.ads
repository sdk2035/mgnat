-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with type MSSyst.ComponentModel.RefreshEventHandler.Ref is access;
with type MSSyst.ComponentModel.TypeDescriptionProvider.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Attribute.Ref_array is access;
with type MSSyst.Collections.Hashtable.Ref is access;
with type MSSyst.ComponentModel.Design.IDesigner.Ref is access;
with type MSSyst.ComponentModel.IComponent.Ref is access;
with type MSSyst.ComponentModel.EventDescriptor.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.IServiceProvider.Ref is access;
with type MSSyst.Type_k.Ref_array is access;
with type MSSyst.Object.Ref_array is access;
with type MSSyst.ComponentModel.PropertyDescriptor.Ref is access;
with type MSSyst.ComponentModel.IComNativeDescriptorHandler.Ref is access;
with type MSSyst.ComponentModel.AttributeCollection.Ref is access;
with type MSSyst.ComponentModel.TypeConverter.Ref is access;
with type MSSyst.ComponentModel.EventDescriptorCollection.Ref is access;
with type MSSyst.ComponentModel.PropertyDescriptorCollection.Ref is access;
with type MSSyst.Reflection.Assembly.Ref is access;
with type MSSyst.Reflection.Module.Ref is access;
with type MSSyst.Collections.IList.Ref is access;
package MSSyst.ComponentModel.TypeDescriptor is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   procedure add_Refreshed(
      value : MSSyst.ComponentModel.RefreshEventHandler.Ref);
   function AddAttributes(
      type_k : MSSyst.Type_k.Ref;
      attributes : MSSyst.Attribute.Ref_array) return MSSyst.ComponentModel.TypeDescriptionProvider.Ref;
   function AddAttributes(
      instance : MSSyst.Object.Ref;
      attributes : MSSyst.Attribute.Ref_array) return MSSyst.ComponentModel.TypeDescriptionProvider.Ref;
   procedure AddEditorTable(
      editorBaseType : MSSyst.Type_k.Ref;
      table : MSSyst.Collections.Hashtable.Ref);
   procedure AddProvider(
      provider : MSSyst.ComponentModel.TypeDescriptionProvider.Ref;
      type_k : MSSyst.Type_k.Ref);
   procedure AddProvider(
      provider : MSSyst.ComponentModel.TypeDescriptionProvider.Ref;
      instance : MSSyst.Object.Ref);
   procedure CreateAssociation(
      primary : MSSyst.Object.Ref;
      secondary : MSSyst.Object.Ref);
   function CreateDesigner(
      component : MSSyst.ComponentModel.IComponent.Ref;
      designerBaseType : MSSyst.Type_k.Ref) return MSSyst.ComponentModel.Design.IDesigner.Ref;
   function CreateEvent(
      componentType : MSSyst.Type_k.Ref;
      name : MSSyst.String.Ref;
      type_k : MSSyst.Type_k.Ref;
      attributes : MSSyst.Attribute.Ref_array) return MSSyst.ComponentModel.EventDescriptor.Ref;
   function CreateEvent(
      componentType : MSSyst.Type_k.Ref;
      oldEventDescriptor : MSSyst.ComponentModel.EventDescriptor.Ref;
      attributes : MSSyst.Attribute.Ref_array) return MSSyst.ComponentModel.EventDescriptor.Ref;
   function CreateInstance(
      provider : MSSyst.IServiceProvider.Ref;
      objectType : MSSyst.Type_k.Ref;
      argTypes : MSSyst.Type_k.Ref_array;
      args : MSSyst.Object.Ref_array) return MSSyst.Object.Ref;
   function CreateProperty(
      componentType : MSSyst.Type_k.Ref;
      oldPropertyDescriptor : MSSyst.ComponentModel.PropertyDescriptor.Ref;
      attributes : MSSyst.Attribute.Ref_array) return MSSyst.ComponentModel.PropertyDescriptor.Ref;
   function CreateProperty(
      componentType : MSSyst.Type_k.Ref;
      name : MSSyst.String.Ref;
      type_k : MSSyst.Type_k.Ref;
      attributes : MSSyst.Attribute.Ref_array) return MSSyst.ComponentModel.PropertyDescriptor.Ref;
   function get_ComNativeDescriptorHandler return MSSyst.ComponentModel.IComNativeDescriptorHandler.Ref;
   function get_ComObjectType return MSSyst.Type_k.Ref;
   function GetAssociation(
      type_k : MSSyst.Type_k.Ref;
      primary : MSSyst.Object.Ref) return MSSyst.Object.Ref;
   function GetAttributes(
      component : MSSyst.Object.Ref) return MSSyst.ComponentModel.AttributeCollection.Ref;
   function GetAttributes(
      component : MSSyst.Object.Ref;
      noCustomTypeDesc : Standard.Boolean) return MSSyst.ComponentModel.AttributeCollection.Ref;
   function GetAttributes(
      componentType : MSSyst.Type_k.Ref) return MSSyst.ComponentModel.AttributeCollection.Ref;
   function GetClassName(
      component : MSSyst.Object.Ref;
      noCustomTypeDesc : Standard.Boolean) return MSSyst.String.Ref;
   function GetClassName(
      componentType : MSSyst.Type_k.Ref) return MSSyst.String.Ref;
   function GetClassName(
      component : MSSyst.Object.Ref) return MSSyst.String.Ref;
   function GetComponentName(
      component : MSSyst.Object.Ref;
      noCustomTypeDesc : Standard.Boolean) return MSSyst.String.Ref;
   function GetComponentName(
      component : MSSyst.Object.Ref) return MSSyst.String.Ref;
   function GetConverter(
      component : MSSyst.Object.Ref;
      noCustomTypeDesc : Standard.Boolean) return MSSyst.ComponentModel.TypeConverter.Ref;
   function GetConverter(
      type_k : MSSyst.Type_k.Ref) return MSSyst.ComponentModel.TypeConverter.Ref;
   function GetConverter(
      component : MSSyst.Object.Ref) return MSSyst.ComponentModel.TypeConverter.Ref;
   function GetDefaultEvent(
      component : MSSyst.Object.Ref) return MSSyst.ComponentModel.EventDescriptor.Ref;
   function GetDefaultEvent(
      component : MSSyst.Object.Ref;
      noCustomTypeDesc : Standard.Boolean) return MSSyst.ComponentModel.EventDescriptor.Ref;
   function GetDefaultEvent(
      componentType : MSSyst.Type_k.Ref) return MSSyst.ComponentModel.EventDescriptor.Ref;
   function GetDefaultProperty(
      component : MSSyst.Object.Ref) return MSSyst.ComponentModel.PropertyDescriptor.Ref;
   function GetDefaultProperty(
      component : MSSyst.Object.Ref;
      noCustomTypeDesc : Standard.Boolean) return MSSyst.ComponentModel.PropertyDescriptor.Ref;
   function GetDefaultProperty(
      componentType : MSSyst.Type_k.Ref) return MSSyst.ComponentModel.PropertyDescriptor.Ref;
   function GetEditor(
      component : MSSyst.Object.Ref;
      editorBaseType : MSSyst.Type_k.Ref;
      noCustomTypeDesc : Standard.Boolean) return MSSyst.Object.Ref;
   function GetEditor(
      type_k : MSSyst.Type_k.Ref;
      editorBaseType : MSSyst.Type_k.Ref) return MSSyst.Object.Ref;
   function GetEditor(
      component : MSSyst.Object.Ref;
      editorBaseType : MSSyst.Type_k.Ref) return MSSyst.Object.Ref;
   function GetEvents(
      component : MSSyst.Object.Ref;
      noCustomTypeDesc : Standard.Boolean) return MSSyst.ComponentModel.EventDescriptorCollection.Ref;
   function GetEvents(
      component : MSSyst.Object.Ref;
      attributes : MSSyst.Attribute.Ref_array) return MSSyst.ComponentModel.EventDescriptorCollection.Ref;
   function GetEvents(
      component : MSSyst.Object.Ref;
      attributes : MSSyst.Attribute.Ref_array;
      noCustomTypeDesc : Standard.Boolean) return MSSyst.ComponentModel.EventDescriptorCollection.Ref;
   function GetEvents(
      component : MSSyst.Object.Ref) return MSSyst.ComponentModel.EventDescriptorCollection.Ref;
   function GetEvents(
      componentType : MSSyst.Type_k.Ref) return MSSyst.ComponentModel.EventDescriptorCollection.Ref;
   function GetEvents(
      componentType : MSSyst.Type_k.Ref;
      attributes : MSSyst.Attribute.Ref_array) return MSSyst.ComponentModel.EventDescriptorCollection.Ref;
   function GetFullComponentName(
      component : MSSyst.Object.Ref) return MSSyst.String.Ref;
   function GetProperties(
      component : MSSyst.Object.Ref;
      noCustomTypeDesc : Standard.Boolean) return MSSyst.ComponentModel.PropertyDescriptorCollection.Ref;
   function GetProperties(
      component : MSSyst.Object.Ref;
      attributes : MSSyst.Attribute.Ref_array) return MSSyst.ComponentModel.PropertyDescriptorCollection.Ref;
   function GetProperties(
      component : MSSyst.Object.Ref;
      attributes : MSSyst.Attribute.Ref_array;
      noCustomTypeDesc : Standard.Boolean) return MSSyst.ComponentModel.PropertyDescriptorCollection.Ref;
   function GetProperties(
      componentType : MSSyst.Type_k.Ref) return MSSyst.ComponentModel.PropertyDescriptorCollection.Ref;
   function GetProperties(
      componentType : MSSyst.Type_k.Ref;
      attributes : MSSyst.Attribute.Ref_array) return MSSyst.ComponentModel.PropertyDescriptorCollection.Ref;
   function GetProperties(
      component : MSSyst.Object.Ref) return MSSyst.ComponentModel.PropertyDescriptorCollection.Ref;
   function GetProvider(
      instance : MSSyst.Object.Ref) return MSSyst.ComponentModel.TypeDescriptionProvider.Ref;
   function GetProvider(
      type_k : MSSyst.Type_k.Ref) return MSSyst.ComponentModel.TypeDescriptionProvider.Ref;
   function GetReflectionType(
      instance : MSSyst.Object.Ref) return MSSyst.Type_k.Ref;
   function GetReflectionType(
      type_k : MSSyst.Type_k.Ref) return MSSyst.Type_k.Ref;
   procedure Refresh(
      assembly : MSSyst.Reflection.Assembly.Ref);
   procedure Refresh(
      module : MSSyst.Reflection.Module.Ref);
   procedure Refresh(
      component : MSSyst.Object.Ref);
   procedure Refresh(
      type_k : MSSyst.Type_k.Ref);
   procedure remove_Refreshed(
      value : MSSyst.ComponentModel.RefreshEventHandler.Ref);
   procedure RemoveAssociation(
      primary : MSSyst.Object.Ref;
      secondary : MSSyst.Object.Ref);
   procedure RemoveAssociations(
      primary : MSSyst.Object.Ref);
   procedure RemoveProvider(
      provider : MSSyst.ComponentModel.TypeDescriptionProvider.Ref;
      type_k : MSSyst.Type_k.Ref);
   procedure RemoveProvider(
      provider : MSSyst.ComponentModel.TypeDescriptionProvider.Ref;
      instance : MSSyst.Object.Ref);
   procedure set_ComNativeDescriptorHandler(
      value : MSSyst.ComponentModel.IComNativeDescriptorHandler.Ref);
   procedure SortDescriptorArray(
      infos : MSSyst.Collections.IList.Ref);
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,add_Refreshed,"add_Refreshed");
   pragma Import(MSIL,AddAttributes,"AddAttributes");
   pragma Import(MSIL,AddEditorTable,"AddEditorTable");
   pragma Import(MSIL,AddProvider,"AddProvider");
   pragma Import(MSIL,CreateAssociation,"CreateAssociation");
   pragma Import(MSIL,CreateDesigner,"CreateDesigner");
   pragma Import(MSIL,CreateEvent,"CreateEvent");
   pragma Import(MSIL,CreateInstance,"CreateInstance");
   pragma Import(MSIL,CreateProperty,"CreateProperty");
   pragma Import(MSIL,get_ComNativeDescriptorHandler,"get_ComNativeDescriptorHandler");
   pragma Import(MSIL,get_ComObjectType,"get_ComObjectType");
   pragma Import(MSIL,GetAssociation,"GetAssociation");
   pragma Import(MSIL,GetAttributes,"GetAttributes");
   pragma Import(MSIL,GetClassName,"GetClassName");
   pragma Import(MSIL,GetComponentName,"GetComponentName");
   pragma Import(MSIL,GetConverter,"GetConverter");
   pragma Import(MSIL,GetDefaultEvent,"GetDefaultEvent");
   pragma Import(MSIL,GetDefaultProperty,"GetDefaultProperty");
   pragma Import(MSIL,GetEditor,"GetEditor");
   pragma Import(MSIL,GetEvents,"GetEvents");
   pragma Import(MSIL,GetFullComponentName,"GetFullComponentName");
   pragma Import(MSIL,GetProperties,"GetProperties");
   pragma Import(MSIL,GetProvider,"GetProvider");
   pragma Import(MSIL,GetReflectionType,"GetReflectionType");
   pragma Import(MSIL,Refresh,"Refresh");
   pragma Import(MSIL,remove_Refreshed,"remove_Refreshed");
   pragma Import(MSIL,RemoveAssociation,"RemoveAssociation");
   pragma Import(MSIL,RemoveAssociations,"RemoveAssociations");
   pragma Import(MSIL,RemoveProvider,"RemoveProvider");
   pragma Import(MSIL,set_ComNativeDescriptorHandler,"set_ComNativeDescriptorHandler");
   pragma Import(MSIL,SortDescriptorArray,"SortDescriptorArray");
end MSSyst.ComponentModel.TypeDescriptor;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.ComponentModel.TypeDescriptor,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.ComponentModel.TypeDescriptor");
