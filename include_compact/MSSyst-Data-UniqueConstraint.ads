-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.Object.Ref is access;
with type MSSyst.Data.DataColumn.Ref_array is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Data.PropertyCollection.Ref is access;
with type MSSyst.Data.DataTable.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Data.DataColumn.Ref is access;
with type MSSyst.String.Ref_array is access;
with MSSyst.Data.Constraint;
package MSSyst.Data.UniqueConstraint is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Arr1 is array(Natural range <>) of Ref;
   type Ref_Array is access all Arr1;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Data.Constraint.Typ with record
      null;
   end record;
   function new_UniqueConstraint(
      This : Ref := null;
      name : MSSyst.String.Ref;
      column : MSSyst.Data.DataColumn.Ref) return Ref;
   function new_UniqueConstraint(
      This : Ref := null;
      column : MSSyst.Data.DataColumn.Ref) return Ref;
   function new_UniqueConstraint(
      This : Ref := null;
      name : MSSyst.String.Ref;
      columns : MSSyst.Data.DataColumn.Ref_array) return Ref;
   function new_UniqueConstraint(
      This : Ref := null;
      columns : MSSyst.Data.DataColumn.Ref_array) return Ref;
   function new_UniqueConstraint(
      This : Ref := null;
      name : MSSyst.String.Ref;
      columnNames : MSSyst.String.Ref_array;
      isPrimaryKey : Standard.Boolean) return Ref;
   function Equals(
      This : access Typ;
      key2 : MSSyst.Object.Ref) return Standard.Boolean;
   function get_Columns(
      This : access Typ) return MSSyst.Data.DataColumn.Ref_array;
   function get_IsPrimaryKey(
      This : access Typ) return Standard.Boolean;
   function get_Table(
      This : access Typ) return MSSyst.Data.DataTable.Ref;
   function GetHashCode(
      This : access Typ) return Integer;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_UniqueConstraint);
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_Columns,"get_Columns");
   pragma Import(MSIL,get_IsPrimaryKey,"get_IsPrimaryKey");
   pragma Import(MSIL,get_Table,"get_Table");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
end MSSyst.Data.UniqueConstraint;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Data.UniqueConstraint,
   ".ver 1:0:5000:0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[System.Data]System.Data.UniqueConstraint");
