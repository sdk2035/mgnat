-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.Net.ICredentials.Ref is access;
with type MSSyst.Uri.Ref is access;
package MSSyst.Net.IWebProxy is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is interface;
   function get_Credentials(
      This : access Typ) return MSSyst.Net.ICredentials.Ref is abstract;
   function GetProxy(
      This : access Typ;
      destination : MSSyst.Uri.Ref) return MSSyst.Uri.Ref is abstract;
   function IsBypassed(
      This : access Typ;
      host : MSSyst.Uri.Ref) return Standard.Boolean is abstract;
   procedure set_Credentials(
      This : access Typ;
      value : MSSyst.Net.ICredentials.Ref) is abstract;
private
   pragma Import(MSIL,get_Credentials,"get_Credentials");
   pragma Import(MSIL,GetProxy,"GetProxy");
   pragma Import(MSIL,IsBypassed,"IsBypassed");
   pragma Import(MSIL,set_Credentials,"set_Credentials");
end MSSyst.Net.IWebProxy;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Net.IWebProxy,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Net.IWebProxy");
