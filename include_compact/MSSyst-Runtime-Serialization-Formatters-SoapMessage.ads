-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with MSSyst.Runtime.Serialization.Formatters.ISoapMessage;
with type MSSyst.Runtime.Remoting.Messaging.Header.Ref_array is access;
with type MSSyst.String.Ref is access;
with type MSSyst.String.Ref_array is access;
with type MSSyst.Type_k.Ref_array is access;
with type MSSyst.Object.Ref_array is access;
with type MSSyst.Type_k.Ref is access;
package MSSyst.Runtime.Serialization.Formatters.SoapMessage is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ
         and MSSyst.Runtime.Serialization.Formatters.ISoapMessage.Typ
   with record
      null;
   end record;
   function new_SoapMessage(
      This : Ref := null) return Ref;
   function get_Headers(
      This : access Typ) return MSSyst.Runtime.Remoting.Messaging.Header.Ref_array;
   function get_MethodName(
      This : access Typ) return MSSyst.String.Ref;
   function get_ParamNames(
      This : access Typ) return MSSyst.String.Ref_array;
   function get_ParamTypes(
      This : access Typ) return MSSyst.Type_k.Ref_array;
   function get_ParamValues(
      This : access Typ) return MSSyst.Object.Ref_array;
   function get_XmlNameSpace(
      This : access Typ) return MSSyst.String.Ref;
   procedure set_Headers(
      This : access Typ;
      value : MSSyst.Runtime.Remoting.Messaging.Header.Ref_array);
   procedure set_MethodName(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_ParamNames(
      This : access Typ;
      value : MSSyst.String.Ref_array);
   procedure set_ParamTypes(
      This : access Typ;
      value : MSSyst.Type_k.Ref_array);
   procedure set_ParamValues(
      This : access Typ;
      value : MSSyst.Object.Ref_array);
   procedure set_XmlNameSpace(
      This : access Typ;
      value : MSSyst.String.Ref);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_SoapMessage);
   pragma Import(MSIL,get_Headers,"get_Headers");
   pragma Import(MSIL,get_MethodName,"get_MethodName");
   pragma Import(MSIL,get_ParamNames,"get_ParamNames");
   pragma Import(MSIL,get_ParamTypes,"get_ParamTypes");
   pragma Import(MSIL,get_ParamValues,"get_ParamValues");
   pragma Import(MSIL,get_XmlNameSpace,"get_XmlNameSpace");
   pragma Import(MSIL,set_Headers,"set_Headers");
   pragma Import(MSIL,set_MethodName,"set_MethodName");
   pragma Import(MSIL,set_ParamNames,"set_ParamNames");
   pragma Import(MSIL,set_ParamTypes,"set_ParamTypes");
   pragma Import(MSIL,set_ParamValues,"set_ParamValues");
   pragma Import(MSIL,set_XmlNameSpace,"set_XmlNameSpace");
end MSSyst.Runtime.Serialization.Formatters.SoapMessage;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Runtime.Serialization.Formatters.SoapMessage,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Runtime.Serialization.Formatters.SoapMessage");
