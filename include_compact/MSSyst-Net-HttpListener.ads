-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with type MSSyst.IAsyncResult.Ref is access;
with type MSSyst.AsyncCallback.Ref is access;
with type MSSyst.Net.HttpListenerContext.Ref is access;
with MSSyst.Net.AuthenticationSchemes;
with type MSSyst.Net.AuthenticationSchemeSelector.Ref is access;
with type MSSyst.Net.HttpListenerPrefixCollection.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Type_k.Ref is access;
package MSSyst.Net.HttpListener is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   function new_HttpListener(
      This : Ref := null) return Ref;
   procedure Abort_k(
      This : access Typ);
   function BeginGetContext(
      This : access Typ;
      callback : MSSyst.AsyncCallback.Ref;
      state : MSSyst.Object.Ref) return MSSyst.IAsyncResult.Ref;
   procedure Close(
      This : access Typ);
   function EndGetContext(
      This : access Typ;
      asyncResult : MSSyst.IAsyncResult.Ref) return MSSyst.Net.HttpListenerContext.Ref;
   function get_AuthenticationSchemes(
      This : access Typ) return MSSyst.Net.AuthenticationSchemes.Valuetype;
   function get_AuthenticationSchemeSelectorDelegate(
      This : access Typ) return MSSyst.Net.AuthenticationSchemeSelector.Ref;
   function get_IgnoreWriteExceptions(
      This : access Typ) return Standard.Boolean;
   function get_IsListening(
      This : access Typ) return Standard.Boolean;
   function get_IsSupported return Standard.Boolean;
   function get_Prefixes(
      This : access Typ) return MSSyst.Net.HttpListenerPrefixCollection.Ref;
   function get_Realm(
      This : access Typ) return MSSyst.String.Ref;
   function get_UnsafeConnectionNtlmAuthentication(
      This : access Typ) return Standard.Boolean;
   function GetContext(
      This : access Typ) return MSSyst.Net.HttpListenerContext.Ref;
   procedure set_AuthenticationSchemes(
      This : access Typ;
      value : MSSyst.Net.AuthenticationSchemes.Valuetype);
   procedure set_AuthenticationSchemeSelectorDelegate(
      This : access Typ;
      value : MSSyst.Net.AuthenticationSchemeSelector.Ref);
   procedure set_IgnoreWriteExceptions(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_Realm(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_UnsafeConnectionNtlmAuthentication(
      This : access Typ;
      value : Standard.Boolean);
   procedure Start(
      This : access Typ);
   procedure Stop(
      This : access Typ);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_HttpListener);
   pragma Import(MSIL,Abort_k,"Abort");
   pragma Import(MSIL,BeginGetContext,"BeginGetContext");
   pragma Import(MSIL,Close,"Close");
   pragma Import(MSIL,EndGetContext,"EndGetContext");
   pragma Import(MSIL,get_AuthenticationSchemes,"get_AuthenticationSchemes");
   pragma Import(MSIL,get_AuthenticationSchemeSelectorDelegate,"get_AuthenticationSchemeSelectorDelegate");
   pragma Import(MSIL,get_IgnoreWriteExceptions,"get_IgnoreWriteExceptions");
   pragma Import(MSIL,get_IsListening,"get_IsListening");
   pragma Import(MSIL,get_IsSupported,"get_IsSupported");
   pragma Import(MSIL,get_Prefixes,"get_Prefixes");
   pragma Import(MSIL,get_Realm,"get_Realm");
   pragma Import(MSIL,get_UnsafeConnectionNtlmAuthentication,"get_UnsafeConnectionNtlmAuthentication");
   pragma Import(MSIL,GetContext,"GetContext");
   pragma Import(MSIL,set_AuthenticationSchemes,"set_AuthenticationSchemes");
   pragma Import(MSIL,set_AuthenticationSchemeSelectorDelegate,"set_AuthenticationSchemeSelectorDelegate");
   pragma Import(MSIL,set_IgnoreWriteExceptions,"set_IgnoreWriteExceptions");
   pragma Import(MSIL,set_Realm,"set_Realm");
   pragma Import(MSIL,set_UnsafeConnectionNtlmAuthentication,"set_UnsafeConnectionNtlmAuthentication");
   pragma Import(MSIL,Start,"Start");
   pragma Import(MSIL,Stop,"Stop");
end MSSyst.Net.HttpListener;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Net.HttpListener,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Net.HttpListener");
