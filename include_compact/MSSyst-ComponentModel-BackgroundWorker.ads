-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.ComponentModel.Component;
with MSSyst.ComponentModel.IComponent;
with type MSSyst.EventHandler.Ref is access;
with type MSSyst.ComponentModel.DoWorkEventHandler.Ref is access;
with type MSSyst.ComponentModel.ProgressChangedEventHandler.Ref is access;
with type MSSyst.ComponentModel.RunWorkerCompletedEventHandler.Ref is access;
with type MSSyst.Runtime.Remoting.ObjRef.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Object.Ref is access;
with type MSSyst.ComponentModel.IContainer.Ref is access;
with type MSSyst.ComponentModel.ISite.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.ComponentModel.BackgroundWorker is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.ComponentModel.Component.Typ
         and MSSyst.ComponentModel.IComponent.Typ
   with record
      null;
   end record;
   function new_BackgroundWorker(
      This : Ref := null) return Ref;
   procedure add_DoWork(
      This : access Typ;
      value : MSSyst.ComponentModel.DoWorkEventHandler.Ref);
   procedure add_ProgressChanged(
      This : access Typ;
      value : MSSyst.ComponentModel.ProgressChangedEventHandler.Ref);
   procedure add_RunWorkerCompleted(
      This : access Typ;
      value : MSSyst.ComponentModel.RunWorkerCompletedEventHandler.Ref);
   procedure CancelAsync(
      This : access Typ);
   function get_CancellationPending(
      This : access Typ) return Standard.Boolean;
   function get_IsBusy(
      This : access Typ) return Standard.Boolean;
   function get_WorkerReportsProgress(
      This : access Typ) return Standard.Boolean;
   function get_WorkerSupportsCancellation(
      This : access Typ) return Standard.Boolean;
   procedure remove_DoWork(
      This : access Typ;
      value : MSSyst.ComponentModel.DoWorkEventHandler.Ref);
   procedure remove_ProgressChanged(
      This : access Typ;
      value : MSSyst.ComponentModel.ProgressChangedEventHandler.Ref);
   procedure remove_RunWorkerCompleted(
      This : access Typ;
      value : MSSyst.ComponentModel.RunWorkerCompletedEventHandler.Ref);
   procedure ReportProgress(
      This : access Typ;
      percentProgress : Integer;
      userState : MSSyst.Object.Ref);
   procedure ReportProgress(
      This : access Typ;
      percentProgress : Integer);
   procedure RunWorkerAsync(
      This : access Typ;
      argument : MSSyst.Object.Ref);
   procedure RunWorkerAsync(
      This : access Typ);
   procedure set_WorkerReportsProgress(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_WorkerSupportsCancellation(
      This : access Typ;
      value : Standard.Boolean);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_BackgroundWorker);
   pragma Import(MSIL,add_DoWork,"add_DoWork");
   pragma Import(MSIL,add_ProgressChanged,"add_ProgressChanged");
   pragma Import(MSIL,add_RunWorkerCompleted,"add_RunWorkerCompleted");
   pragma Import(MSIL,CancelAsync,"CancelAsync");
   pragma Import(MSIL,get_CancellationPending,"get_CancellationPending");
   pragma Import(MSIL,get_IsBusy,"get_IsBusy");
   pragma Import(MSIL,get_WorkerReportsProgress,"get_WorkerReportsProgress");
   pragma Import(MSIL,get_WorkerSupportsCancellation,"get_WorkerSupportsCancellation");
   pragma Import(MSIL,remove_DoWork,"remove_DoWork");
   pragma Import(MSIL,remove_ProgressChanged,"remove_ProgressChanged");
   pragma Import(MSIL,remove_RunWorkerCompleted,"remove_RunWorkerCompleted");
   pragma Import(MSIL,ReportProgress,"ReportProgress");
   pragma Import(MSIL,RunWorkerAsync,"RunWorkerAsync");
   pragma Import(MSIL,set_WorkerReportsProgress,"set_WorkerReportsProgress");
   pragma Import(MSIL,set_WorkerSupportsCancellation,"set_WorkerSupportsCancellation");
end MSSyst.ComponentModel.BackgroundWorker;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.ComponentModel.BackgroundWorker,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.ComponentModel.BackgroundWorker");
