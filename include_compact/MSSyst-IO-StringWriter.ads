-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.IO.TextWriter;
with type MSSyst.Runtime.Remoting.ObjRef.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Object.Ref is access;
with type MSSyst.Text.Encoding.Ref is access;
with type MSSyst.IFormatProvider.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Text.StringBuilder.Ref is access;
with type MSSyst.Object.Ref_array is access;
with type MSSyst.Decimal.Valuetype is tagged;
package MSSyst.IO.StringWriter is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.IO.TextWriter.Typ   with record
      null;
   end record;
   function new_StringWriter(
      This : Ref := null;
      sb : MSSyst.Text.StringBuilder.Ref;
      formatProvider : MSSyst.IFormatProvider.Ref) return Ref;
   function new_StringWriter(
      This : Ref := null) return Ref;
   function new_StringWriter(
      This : Ref := null;
      formatProvider : MSSyst.IFormatProvider.Ref) return Ref;
   function new_StringWriter(
      This : Ref := null;
      sb : MSSyst.Text.StringBuilder.Ref) return Ref;
   procedure Close(
      This : access Typ);
   function get_Encoding(
      This : access Typ) return MSSyst.Text.Encoding.Ref;
   function GetStringBuilder(
      This : access Typ) return MSSyst.Text.StringBuilder.Ref;
   function ToString(
      This : access Typ) return MSSyst.String.Ref;
   procedure Write(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure Write(
      This : access Typ;
      buffer : MSIL_Types.Char_Arr;
      index : Integer;
      count : Integer);
   procedure Write(
      This : access Typ;
      value : Wide_Character);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_StringWriter);
   pragma Import(MSIL,Close,"Close");
   pragma Import(MSIL,get_Encoding,"get_Encoding");
   pragma Import(MSIL,GetStringBuilder,"GetStringBuilder");
   pragma Import(MSIL,ToString,"ToString");
   pragma Import(MSIL,Write,"Write");
end MSSyst.IO.StringWriter;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.IO.StringWriter,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.IO.StringWriter");
