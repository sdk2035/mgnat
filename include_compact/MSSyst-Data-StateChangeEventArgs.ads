-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.Object.Ref is access;
with MSSyst.Data.ConnectionState;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
with MSSyst.EventArgs;
package MSSyst.Data.StateChangeEventArgs is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Arr1 is array(Natural range <>) of Ref;
   type Ref_Array is access all Arr1;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.EventArgs.Typ with record
      null;
   end record;
   function new_StateChangeEventArgs(
      This : Ref := null;
      originalState : MSSyst.Data.ConnectionState.Valuetype;
      currentState : MSSyst.Data.ConnectionState.Valuetype) return Ref;
   function get_CurrentState(
      This : access Typ) return MSSyst.Data.ConnectionState.Valuetype;
   function get_OriginalState(
      This : access Typ) return MSSyst.Data.ConnectionState.Valuetype;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_StateChangeEventArgs);
   pragma Import(MSIL,get_CurrentState,"get_CurrentState");
   pragma Import(MSIL,get_OriginalState,"get_OriginalState");
end MSSyst.Data.StateChangeEventArgs;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Data.StateChangeEventArgs,
   ".ver 1:0:5000:0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[System.Data]System.Data.StateChangeEventArgs");
