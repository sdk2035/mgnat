-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with type MSSyst.String.Ref is access;
with type MSSyst.DateTime.Valuetype is tagged;
with type MSSyst.Collections.Stack.Ref is access;
with type MSSyst.Type_k.Ref is access;
package MSSyst.Diagnostics.TraceEventCache is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   function new_TraceEventCache(
      This : Ref := null) return Ref;
   function get_Callstack(
      This : access Typ) return MSSyst.String.Ref;
   function get_DateTime(
      This : access Typ) return MSSyst.DateTime.Valuetype;
   function get_LogicalOperationStack(
      This : access Typ) return MSSyst.Collections.Stack.Ref;
   function get_ProcessId(
      This : access Typ) return Integer;
   function get_ThreadId(
      This : access Typ) return MSSyst.String.Ref;
   function get_Timestamp(
      This : access Typ) return Long_Long_Integer;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_TraceEventCache);
   pragma Import(MSIL,get_Callstack,"get_Callstack");
   pragma Import(MSIL,get_DateTime,"get_DateTime");
   pragma Import(MSIL,get_LogicalOperationStack,"get_LogicalOperationStack");
   pragma Import(MSIL,get_ProcessId,"get_ProcessId");
   pragma Import(MSIL,get_ThreadId,"get_ThreadId");
   pragma Import(MSIL,get_Timestamp,"get_Timestamp");
end MSSyst.Diagnostics.TraceEventCache;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Diagnostics.TraceEventCache,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Diagnostics.TraceEventCache");
