-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Attribute;
with MSSyst.Runtime.CompilerServices.MethodCodeType;
with type MSSyst.Object.Ref is access;
with MSSyst.Runtime.CompilerServices.MethodImplOptions;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.Runtime.CompilerServices.MethodImplAttribute is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Attribute.Typ   with record
      MethodCodeType : MSSyst.Runtime.CompilerServices.MethodCodeType.Valuetype;
      pragma Import(MSIL,MethodCodeType,"MethodCodeType");
   end record;
   function new_MethodImplAttribute(
      This : Ref := null;
      methodImplOptions : MSSyst.Runtime.CompilerServices.MethodImplOptions.Valuetype) return Ref;
   function new_MethodImplAttribute(
      This : Ref := null;
      value : MSIL_Types.int16) return Ref;
   function new_MethodImplAttribute(
      This : Ref := null) return Ref;
   function get_Value(
      This : access Typ) return MSSyst.Runtime.CompilerServices.MethodImplOptions.Valuetype;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_MethodImplAttribute);
   pragma Import(MSIL,get_Value,"get_Value");
end MSSyst.Runtime.CompilerServices.MethodImplAttribute;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Runtime.CompilerServices.MethodImplAttribute,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Runtime.CompilerServices.MethodImplAttribute");
