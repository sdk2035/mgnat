-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.Object.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Data.PropertyCollection.Ref is access;
with type MSSyst.Data.DataTable.Ref is access;
with type MSSyst.Type_k.Ref is access;
with MSSyst.Object;
package MSSyst.Data.Constraint is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Arr1 is array(Natural range <>) of Ref;
   type Ref_Array is access all Arr1;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ with record
      null;
   end record;
   function get_ConstraintName(
      This : access Typ) return MSSyst.String.Ref;
   function get_ExtendedProperties(
      This : access Typ) return MSSyst.Data.PropertyCollection.Ref;
   function get_Table(
      This : access Typ) return MSSyst.Data.DataTable.Ref;
   procedure set_ConstraintName(
      This : access Typ;
      value : MSSyst.String.Ref);
   function ToString(
      This : access Typ) return MSSyst.String.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,get_ConstraintName,"get_ConstraintName");
   pragma Import(MSIL,get_ExtendedProperties,"get_ExtendedProperties");
   pragma Import(MSIL,get_Table,"get_Table");
   pragma Import(MSIL,set_ConstraintName,"set_ConstraintName");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Data.Constraint;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Data.Constraint,
   ".ver 1:0:5000:0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[System.Data]System.Data.Constraint");
