-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with MSSyst.Runtime.Serialization.ISerializable;
with type MSSyst.String.Ref is access;
with MSSyst.IO.DriveType;
with type MSSyst.IO.DirectoryInfo.Ref is access;
with type MSSyst.IO.DriveInfo.Ref_array is access;
with type MSSyst.Type_k.Ref is access;
package MSSyst.IO.DriveInfo is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ
         and MSSyst.Runtime.Serialization.ISerializable.Typ
   with record
      null;
   end record;
   function new_DriveInfo(
      This : Ref := null;
      driveName : MSSyst.String.Ref) return Ref;
   function get_AvailableFreeSpace(
      This : access Typ) return Long_Long_Integer;
   function get_DriveFormat(
      This : access Typ) return MSSyst.String.Ref;
   function get_DriveType(
      This : access Typ) return MSSyst.IO.DriveType.Valuetype;
   function get_IsReady(
      This : access Typ) return Standard.Boolean;
   function get_Name(
      This : access Typ) return MSSyst.String.Ref;
   function get_RootDirectory(
      This : access Typ) return MSSyst.IO.DirectoryInfo.Ref;
   function get_TotalFreeSpace(
      This : access Typ) return Long_Long_Integer;
   function get_TotalSize(
      This : access Typ) return Long_Long_Integer;
   function get_VolumeLabel(
      This : access Typ) return MSSyst.String.Ref;
   function GetDrives return MSSyst.IO.DriveInfo.Ref_array;
   procedure set_VolumeLabel(
      This : access Typ;
      value : MSSyst.String.Ref);
   function ToString(
      This : access Typ) return MSSyst.String.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_DriveInfo);
   pragma Import(MSIL,get_AvailableFreeSpace,"get_AvailableFreeSpace");
   pragma Import(MSIL,get_DriveFormat,"get_DriveFormat");
   pragma Import(MSIL,get_DriveType,"get_DriveType");
   pragma Import(MSIL,get_IsReady,"get_IsReady");
   pragma Import(MSIL,get_Name,"get_Name");
   pragma Import(MSIL,get_RootDirectory,"get_RootDirectory");
   pragma Import(MSIL,get_TotalFreeSpace,"get_TotalFreeSpace");
   pragma Import(MSIL,get_TotalSize,"get_TotalSize");
   pragma Import(MSIL,get_VolumeLabel,"get_VolumeLabel");
   pragma Import(MSIL,GetDrives,"GetDrives");
   pragma Import(MSIL,set_VolumeLabel,"set_VolumeLabel");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.IO.DriveInfo;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.IO.DriveInfo,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.IO.DriveInfo");
