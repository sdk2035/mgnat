-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with MSSyst.Runtime.Serialization.ISerializable;
with type MSSyst.Drawing.Graphics.Ref is access;
with type MSSyst.Drawing.Rectangle.Valuetype is tagged;
with type MSSyst.Drawing.Point.Valuetype is tagged;
with type MSSyst.Drawing.Size.Valuetype is tagged;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.IO.Stream.Ref is access;
package MSSyst.Windows.Forms.Cursor is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ
         and MSSyst.Runtime.Serialization.ISerializable.Typ
   with record
      null;
   end record;
   function new_Cursor(
      This : Ref := null;
      handle : MSIL_Types.native_int) return Ref;
   function new_Cursor(
      This : Ref := null;
      fileName : MSSyst.String.Ref) return Ref;
   function new_Cursor(
      This : Ref := null;
      type_k : MSSyst.Type_k.Ref;
      resource : MSSyst.String.Ref) return Ref;
   function new_Cursor(
      This : Ref := null;
      stream : MSSyst.IO.Stream.Ref) return Ref;
   function CopyHandle(
      This : access Typ) return MSIL_Types.native_int;
   procedure Dispose(
      This : access Typ);
   procedure Draw(
      This : access Typ;
      g : MSSyst.Drawing.Graphics.Ref;
      targetRect : MSSyst.Drawing.Rectangle.Valuetype);
   procedure DrawStretched(
      This : access Typ;
      g : MSSyst.Drawing.Graphics.Ref;
      targetRect : MSSyst.Drawing.Rectangle.Valuetype);
   function Equals(
      This : access Typ;
      obj : MSSyst.Object.Ref) return Standard.Boolean;
   function get_Clip return MSSyst.Drawing.Rectangle.Valuetype;
   function get_Current return MSSyst.Windows.Forms.Cursor.Ref;
   function get_Handle(
      This : access Typ) return MSIL_Types.native_int;
   function get_HotSpot(
      This : access Typ) return MSSyst.Drawing.Point.Valuetype;
   function get_Position return MSSyst.Drawing.Point.Valuetype;
   function get_Size(
      This : access Typ) return MSSyst.Drawing.Size.Valuetype;
   function get_Tag(
      This : access Typ) return MSSyst.Object.Ref;
   function GetHashCode(
      This : access Typ) return Integer;
   procedure Hide;
   function op_Equality(
      left : MSSyst.Windows.Forms.Cursor.Ref;
      right : MSSyst.Windows.Forms.Cursor.Ref) return Standard.Boolean;
   function op_Inequality(
      left : MSSyst.Windows.Forms.Cursor.Ref;
      right : MSSyst.Windows.Forms.Cursor.Ref) return Standard.Boolean;
   procedure set_Clip(
      value : MSSyst.Drawing.Rectangle.Valuetype);
   procedure set_Current(
      value : MSSyst.Windows.Forms.Cursor.Ref);
   procedure set_Position(
      value : MSSyst.Drawing.Point.Valuetype);
   procedure set_Tag(
      This : access Typ;
      value : MSSyst.Object.Ref);
   procedure Show;
   function ToString(
      This : access Typ) return MSSyst.String.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_Cursor);
   pragma Import(MSIL,CopyHandle,"CopyHandle");
   pragma Import(MSIL,Dispose,"Dispose");
   pragma Import(MSIL,Draw,"Draw");
   pragma Import(MSIL,DrawStretched,"DrawStretched");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_Clip,"get_Clip");
   pragma Import(MSIL,get_Current,"get_Current");
   pragma Import(MSIL,get_Handle,"get_Handle");
   pragma Import(MSIL,get_HotSpot,"get_HotSpot");
   pragma Import(MSIL,get_Position,"get_Position");
   pragma Import(MSIL,get_Size,"get_Size");
   pragma Import(MSIL,get_Tag,"get_Tag");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,Hide,"Hide");
   pragma Import(MSIL,op_Equality,"op_Equality");
   pragma Import(MSIL,op_Inequality,"op_Inequality");
   pragma Import(MSIL,set_Clip,"set_Clip");
   pragma Import(MSIL,set_Current,"set_Current");
   pragma Import(MSIL,set_Position,"set_Position");
   pragma Import(MSIL,set_Tag,"set_Tag");
   pragma Import(MSIL,Show,"Show");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Windows.Forms.Cursor;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Windows.Forms.Cursor,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System.Windows.Forms]System.Windows.Forms.Cursor");
