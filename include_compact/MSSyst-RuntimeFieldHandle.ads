-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.ValueType;
with type MSSyst.Object.Ref is access;
with type MSSyst.Runtime.Serialization.SerializationInfo.Ref is access;
with type MSSyst.Runtime.Serialization.StreamingContext.Valuetype is tagged;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.RuntimeFieldHandle is
   type ValueType is new MSSyst.ValueType.Typ with null record;
   type ValueType_Arr is array (Natural range <>) of ValueType; -- start at 0
   type ValueType_Array is access all ValueType_Arr;
   type ValueType_addrof is access all ValueType;
   type ValueType_array_addrof is access all ValueType_Array;
   function Equals(
      This : Valuetype;
      obj : MSSyst.Object.Ref) return Standard.Boolean;
   function Equals(
      This : Valuetype;
      handle : MSSyst.RuntimeFieldHandle.Valuetype) return Standard.Boolean;
   function get_Value(
      This : Valuetype) return MSIL_Types.native_int;
   function GetHashCode(
      This : Valuetype) return Integer;
   procedure GetObjectData(
      This : Valuetype;
      info : MSSyst.Runtime.Serialization.SerializationInfo.Ref;
      context : MSSyst.Runtime.Serialization.StreamingContext.Valuetype);
   function op_Equality(
      left : MSSyst.RuntimeFieldHandle.Valuetype;
      right : MSSyst.RuntimeFieldHandle.Valuetype) return Standard.Boolean;
   function op_Inequality(
      left : MSSyst.RuntimeFieldHandle.Valuetype;
      right : MSSyst.RuntimeFieldHandle.Valuetype) return Standard.Boolean;
private
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_Value,"get_Value");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetObjectData,"GetObjectData");
   pragma Import(MSIL,op_Equality,"op_Equality");
   pragma Import(MSIL,op_Inequality,"op_Inequality");
end MSSyst.RuntimeFieldHandle;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.RuntimeFieldHandle,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.RuntimeFieldHandle");
