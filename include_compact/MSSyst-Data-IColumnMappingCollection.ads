-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.Collections.IList.Ref is access;
with type MSSyst.Collections.ICollection.Ref is access;
with type MSSyst.Collections.IEnumerable.Ref is access;
with type MSSyst.Data.IColumnMapping.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Object.Ref is access;
package MSSyst.Data.IColumnMappingCollection is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Arr1 is array(Natural range <>) of Ref;
   type Ref_Array is access all Arr1;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ (Self : access MSSyst.Object.Typ'Class)
      is abstract new MSSyst.Object.Typ with null record;
   pragma MSIL_Interface(Typ);
   function Add(
      This : access Typ;
      sourceColumnName : MSSyst.String.Ref;
      dataSetColumnName : MSSyst.String.Ref) return MSSyst.Data.IColumnMapping.Ref;
   function Contains(
      This : access Typ;
      sourceColumnName : MSSyst.String.Ref) return Standard.Boolean;
   function get_Item(
      This : access Typ;
      index : MSSyst.String.Ref) return MSSyst.Object.Ref;
   function GetByDataSetColumn(
      This : access Typ;
      dataSetColumnName : MSSyst.String.Ref) return MSSyst.Data.IColumnMapping.Ref;
   function IndexOf(
      This : access Typ;
      sourceColumnName : MSSyst.String.Ref) return Integer;
   procedure RemoveAt(
      This : access Typ;
      sourceColumnName : MSSyst.String.Ref);
   procedure set_Item(
      This : access Typ;
      index : MSSyst.String.Ref;
      value : MSSyst.Object.Ref);
private
   pragma Import(MSIL,Add,"Add");
   pragma Import(MSIL,Contains,"Contains");
   pragma Import(MSIL,get_Item,"get_Item");
   pragma Import(MSIL,GetByDataSetColumn,"GetByDataSetColumn");
   pragma Import(MSIL,IndexOf,"IndexOf");
   pragma Import(MSIL,RemoveAt,"RemoveAt");
   pragma Import(MSIL,set_Item,"set_Item");
end MSSyst.Data.IColumnMappingCollection;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Data.IColumnMappingCollection,
   ".ver 1:0:5000:0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[System.Data]System.Data.IColumnMappingCollection");
