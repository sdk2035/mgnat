-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Security.Permissions.ResourcePermissionBase;
with MSSyst.Security.IPermission;
with MSSyst.Security.ISecurityEncodable;
with MSSyst.Security.IStackWalk;
with MSSyst.Security.Permissions.IUnrestrictedPermission;
with type MSSyst.Object.Ref is access;
with type MSSyst.Security.SecurityElement.Ref is access;
with type MSSyst.Diagnostics.PerformanceCounterPermissionEntryCollection.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
with MSSyst.Security.Permissions.PermissionState;
with MSSyst.Diagnostics.PerformanceCounterPermissionAccess;
with type MSSyst.Diagnostics.PerformanceCounterPermissionEntry.Ref_array is access;
package MSSyst.Diagnostics.PerformanceCounterPermission is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Security.Permissions.ResourcePermissionBase.Typ
         and MSSyst.Security.IPermission.Typ
         and MSSyst.Security.ISecurityEncodable.Typ
         and MSSyst.Security.IStackWalk.Typ
         and MSSyst.Security.Permissions.IUnrestrictedPermission.Typ
   with record
      null;
   end record;
   function new_PerformanceCounterPermission(
      This : Ref := null) return Ref;
   function new_PerformanceCounterPermission(
      This : Ref := null;
      state : MSSyst.Security.Permissions.PermissionState.Valuetype) return Ref;
   function new_PerformanceCounterPermission(
      This : Ref := null;
      permissionAccess : MSSyst.Diagnostics.PerformanceCounterPermissionAccess.Valuetype;
      machineName : MSSyst.String.Ref;
      categoryName : MSSyst.String.Ref) return Ref;
   function new_PerformanceCounterPermission(
      This : Ref := null;
      permissionAccessEntries : MSSyst.Diagnostics.PerformanceCounterPermissionEntry.Ref_array) return Ref;
   function get_PermissionEntries(
      This : access Typ) return MSSyst.Diagnostics.PerformanceCounterPermissionEntryCollection.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_PerformanceCounterPermission);
   pragma Import(MSIL,get_PermissionEntries,"get_PermissionEntries");
end MSSyst.Diagnostics.PerformanceCounterPermission;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Diagnostics.PerformanceCounterPermission,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Diagnostics.PerformanceCounterPermission");
