-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.String.Ref is access;
with type MSSyst.Runtime.InteropServices.ComTypes.ITypeInfo.Ref_addrof is access;
with MSSyst.Runtime.InteropServices.ComTypes.DESCKIND;
with MSSyst.Runtime.InteropServices.ComTypes.BINDPTR;
with type MSSyst.Runtime.InteropServices.ComTypes.ITypeComp.Ref_addrof is access;
package MSSyst.Runtime.InteropServices.ComTypes.ITypeComp is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is interface;
   procedure Bind(
      This : access Typ;
      szName : MSSyst.String.Ref;
      lHashVal : Integer;
      wFlags : MSIL_Types.int16;
      ppTInfo : MSSyst.Runtime.InteropServices.ComTypes.ITypeInfo.Ref_addrof;
      pDescKind : MSSyst.Runtime.InteropServices.ComTypes.DESCKIND.Valuetype_addrof;
      pBindPtr : MSSyst.Runtime.InteropServices.ComTypes.BINDPTR.Valuetype_addrof) is abstract;
   procedure BindType(
      This : access Typ;
      szName : MSSyst.String.Ref;
      lHashVal : Integer;
      ppTInfo : MSSyst.Runtime.InteropServices.ComTypes.ITypeInfo.Ref_addrof;
      ppTComp : MSSyst.Runtime.InteropServices.ComTypes.ITypeComp.Ref_addrof) is abstract;
private
   pragma Import(MSIL,Bind,"Bind");
   pragma Import(MSIL,BindType,"BindType");
end MSSyst.Runtime.InteropServices.ComTypes.ITypeComp;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Runtime.InteropServices.ComTypes.ITypeComp,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Runtime.InteropServices.ComTypes.ITypeComp");
