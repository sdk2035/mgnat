-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.ValueType;
with type MSSyst.Object.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.IFormatProvider.Ref is access;
package MSSyst.Guid is
   type ValueType is new MSSyst.ValueType.Typ with null record;
   type ValueType_Arr is array (Natural range <>) of ValueType; -- start at 0
   type ValueType_Array is access all ValueType_Arr;
   type ValueType_addrof is access all ValueType;
   type ValueType_array_addrof is access all ValueType_Array;
   function new_Guid(
      b : MSIL_Types.unsigned_int8_Arr) return Valuetype;
   function new_Guid(
      a : MSIL_Types.Unsigned_Integer;
      b : MSIL_Types.unsigned_int16;
      c : MSIL_Types.unsigned_int16;
      d : MSIL_Types.unsigned_int8;
      e : MSIL_Types.unsigned_int8;
      f : MSIL_Types.unsigned_int8;
      g : MSIL_Types.unsigned_int8;
      h : MSIL_Types.unsigned_int8;
      i : MSIL_Types.unsigned_int8;
      j : MSIL_Types.unsigned_int8;
      k : MSIL_Types.unsigned_int8) return Valuetype;
   function new_Guid(
      g : MSSyst.String.Ref) return Valuetype;
   function new_Guid(
      a : Integer;
      b : MSIL_Types.int16;
      c : MSIL_Types.int16;
      d : MSIL_Types.unsigned_int8_Arr) return Valuetype;
   function new_Guid(
      a : Integer;
      b : MSIL_Types.int16;
      c : MSIL_Types.int16;
      d : MSIL_Types.unsigned_int8;
      e : MSIL_Types.unsigned_int8;
      f : MSIL_Types.unsigned_int8;
      g : MSIL_Types.unsigned_int8;
      h : MSIL_Types.unsigned_int8;
      i : MSIL_Types.unsigned_int8;
      j : MSIL_Types.unsigned_int8;
      k : MSIL_Types.unsigned_int8) return Valuetype;
   function CompareTo(
      This : Valuetype;
      value : MSSyst.Object.Ref) return Integer;
   function CompareTo(
      This : Valuetype;
      value : MSSyst.Guid.Valuetype) return Integer;
   function Equals(
      This : Valuetype;
      g : MSSyst.Guid.Valuetype) return Standard.Boolean;
   function Equals(
      This : Valuetype;
      o : MSSyst.Object.Ref) return Standard.Boolean;
   function GetHashCode(
      This : Valuetype) return Integer;
   function NewGuid return MSSyst.Guid.Valuetype;
   function op_Equality(
      a : MSSyst.Guid.Valuetype;
      b : MSSyst.Guid.Valuetype) return Standard.Boolean;
   function op_Inequality(
      a : MSSyst.Guid.Valuetype;
      b : MSSyst.Guid.Valuetype) return Standard.Boolean;
   function ToByteArray(
      This : Valuetype) return MSIL_Types.unsigned_int8_Array;
   function ToString(
      This : Valuetype) return MSSyst.String.Ref;
   function ToString(
      This : Valuetype;
      format : MSSyst.String.Ref;
      provider : MSSyst.IFormatProvider.Ref) return MSSyst.String.Ref;
   function ToString(
      This : Valuetype;
      format : MSSyst.String.Ref) return MSSyst.String.Ref;
private
   pragma MSIL_Constructor(new_Guid);
   pragma Import(MSIL,CompareTo,"CompareTo");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,NewGuid,"NewGuid");
   pragma Import(MSIL,op_Equality,"op_Equality");
   pragma Import(MSIL,op_Inequality,"op_Inequality");
   pragma Import(MSIL,ToByteArray,"ToByteArray");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Guid;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Guid,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Guid");
