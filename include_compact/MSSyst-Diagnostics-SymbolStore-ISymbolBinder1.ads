-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.Diagnostics.SymbolStore.ISymbolReader.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.Diagnostics.SymbolStore.ISymbolBinder1 is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is interface;
   function GetReader(
      This : access Typ;
      importer : MSIL_Types.native_int;
      filename : MSSyst.String.Ref;
      searchPath : MSSyst.String.Ref) return MSSyst.Diagnostics.SymbolStore.ISymbolReader.Ref is abstract;
private
   pragma Import(MSIL,GetReader,"GetReader");
end MSSyst.Diagnostics.SymbolStore.ISymbolBinder1;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Diagnostics.SymbolStore.ISymbolBinder1,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Diagnostics.SymbolStore.ISymbolBinder1");
