-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.MarshalByRefObject;
with MSSyst.ICloneable;
with MSSyst.Runtime.Serialization.ISerializable;
with type MSSyst.Object.Ref is access;
with type MSSyst.Runtime.Remoting.ObjRef.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Windows.Forms.TreeView.Ref is access;
with type MSSyst.Drawing.Color.Valuetype is tagged;
with type MSSyst.Drawing.Rectangle.Valuetype is tagged;
with type MSSyst.Windows.Forms.ContextMenu.Ref is access;
with type MSSyst.Windows.Forms.ContextMenuStrip.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Drawing.Font.Ref is access;
with type MSSyst.Windows.Forms.TreeNodeCollection.Ref is access;
with type MSSyst.Windows.Forms.TreeNode.Ref_array is access;
package MSSyst.Windows.Forms.TreeNode is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.MarshalByRefObject.Typ
         and MSSyst.ICloneable.Typ
         and MSSyst.Runtime.Serialization.ISerializable.Typ
   with record
      null;
   end record;
   function new_TreeNode(
      This : Ref := null) return Ref;
   function new_TreeNode(
      This : Ref := null;
      text : MSSyst.String.Ref) return Ref;
   function new_TreeNode(
      This : Ref := null;
      text : MSSyst.String.Ref;
      children : MSSyst.Windows.Forms.TreeNode.Ref_array) return Ref;
   function new_TreeNode(
      This : Ref := null;
      text : MSSyst.String.Ref;
      imageIndex : Integer;
      selectedImageIndex : Integer) return Ref;
   function new_TreeNode(
      This : Ref := null;
      text : MSSyst.String.Ref;
      imageIndex : Integer;
      selectedImageIndex : Integer;
      children : MSSyst.Windows.Forms.TreeNode.Ref_array) return Ref;
   procedure BeginEdit(
      This : access Typ);
   function Clone(
      This : access Typ) return MSSyst.Object.Ref;
   procedure Collapse(
      This : access Typ);
   procedure Collapse(
      This : access Typ;
      ignoreChildren : Standard.Boolean);
   procedure EndEdit(
      This : access Typ;
      cancel : Standard.Boolean);
   procedure EnsureVisible(
      This : access Typ);
   procedure Expand(
      This : access Typ);
   procedure ExpandAll(
      This : access Typ);
   function FromHandle(
      tree : MSSyst.Windows.Forms.TreeView.Ref;
      handle : MSIL_Types.native_int) return MSSyst.Windows.Forms.TreeNode.Ref;
   function get_BackColor(
      This : access Typ) return MSSyst.Drawing.Color.Valuetype;
   function get_Bounds(
      This : access Typ) return MSSyst.Drawing.Rectangle.Valuetype;
   function get_Checked(
      This : access Typ) return Standard.Boolean;
   function get_ContextMenu(
      This : access Typ) return MSSyst.Windows.Forms.ContextMenu.Ref;
   function get_ContextMenuStrip(
      This : access Typ) return MSSyst.Windows.Forms.ContextMenuStrip.Ref;
   function get_FirstNode(
      This : access Typ) return MSSyst.Windows.Forms.TreeNode.Ref;
   function get_ForeColor(
      This : access Typ) return MSSyst.Drawing.Color.Valuetype;
   function get_FullPath(
      This : access Typ) return MSSyst.String.Ref;
   function get_Handle(
      This : access Typ) return MSIL_Types.native_int;
   function get_ImageIndex(
      This : access Typ) return Integer;
   function get_ImageKey(
      This : access Typ) return MSSyst.String.Ref;
   function get_Index(
      This : access Typ) return Integer;
   function get_IsEditing(
      This : access Typ) return Standard.Boolean;
   function get_IsExpanded(
      This : access Typ) return Standard.Boolean;
   function get_IsSelected(
      This : access Typ) return Standard.Boolean;
   function get_IsVisible(
      This : access Typ) return Standard.Boolean;
   function get_LastNode(
      This : access Typ) return MSSyst.Windows.Forms.TreeNode.Ref;
   function get_Level(
      This : access Typ) return Integer;
   function get_Name(
      This : access Typ) return MSSyst.String.Ref;
   function get_NextNode(
      This : access Typ) return MSSyst.Windows.Forms.TreeNode.Ref;
   function get_NextVisibleNode(
      This : access Typ) return MSSyst.Windows.Forms.TreeNode.Ref;
   function get_NodeFont(
      This : access Typ) return MSSyst.Drawing.Font.Ref;
   function get_Nodes(
      This : access Typ) return MSSyst.Windows.Forms.TreeNodeCollection.Ref;
   function get_Parent(
      This : access Typ) return MSSyst.Windows.Forms.TreeNode.Ref;
   function get_PrevNode(
      This : access Typ) return MSSyst.Windows.Forms.TreeNode.Ref;
   function get_PrevVisibleNode(
      This : access Typ) return MSSyst.Windows.Forms.TreeNode.Ref;
   function get_SelectedImageIndex(
      This : access Typ) return Integer;
   function get_SelectedImageKey(
      This : access Typ) return MSSyst.String.Ref;
   function get_StateImageIndex(
      This : access Typ) return Integer;
   function get_StateImageKey(
      This : access Typ) return MSSyst.String.Ref;
   function get_Tag(
      This : access Typ) return MSSyst.Object.Ref;
   function get_Text(
      This : access Typ) return MSSyst.String.Ref;
   function get_ToolTipText(
      This : access Typ) return MSSyst.String.Ref;
   function get_TreeView(
      This : access Typ) return MSSyst.Windows.Forms.TreeView.Ref;
   function GetNodeCount(
      This : access Typ;
      includeSubTrees : Standard.Boolean) return Integer;
   procedure Remove(
      This : access Typ);
   procedure set_BackColor(
      This : access Typ;
      value : MSSyst.Drawing.Color.Valuetype);
   procedure set_Checked(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_ContextMenu(
      This : access Typ;
      value : MSSyst.Windows.Forms.ContextMenu.Ref);
   procedure set_ContextMenuStrip(
      This : access Typ;
      value : MSSyst.Windows.Forms.ContextMenuStrip.Ref);
   procedure set_ForeColor(
      This : access Typ;
      value : MSSyst.Drawing.Color.Valuetype);
   procedure set_ImageIndex(
      This : access Typ;
      value : Integer);
   procedure set_ImageKey(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_Name(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_NodeFont(
      This : access Typ;
      value : MSSyst.Drawing.Font.Ref);
   procedure set_SelectedImageIndex(
      This : access Typ;
      value : Integer);
   procedure set_SelectedImageKey(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_StateImageIndex(
      This : access Typ;
      value : Integer);
   procedure set_StateImageKey(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_Tag(
      This : access Typ;
      value : MSSyst.Object.Ref);
   procedure set_Text(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_ToolTipText(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure Toggle(
      This : access Typ);
   function ToString(
      This : access Typ) return MSSyst.String.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_TreeNode);
   pragma Import(MSIL,BeginEdit,"BeginEdit");
   pragma Import(MSIL,Clone,"Clone");
   pragma Import(MSIL,Collapse,"Collapse");
   pragma Import(MSIL,EndEdit,"EndEdit");
   pragma Import(MSIL,EnsureVisible,"EnsureVisible");
   pragma Import(MSIL,Expand,"Expand");
   pragma Import(MSIL,ExpandAll,"ExpandAll");
   pragma Import(MSIL,FromHandle,"FromHandle");
   pragma Import(MSIL,get_BackColor,"get_BackColor");
   pragma Import(MSIL,get_Bounds,"get_Bounds");
   pragma Import(MSIL,get_Checked,"get_Checked");
   pragma Import(MSIL,get_ContextMenu,"get_ContextMenu");
   pragma Import(MSIL,get_ContextMenuStrip,"get_ContextMenuStrip");
   pragma Import(MSIL,get_FirstNode,"get_FirstNode");
   pragma Import(MSIL,get_ForeColor,"get_ForeColor");
   pragma Import(MSIL,get_FullPath,"get_FullPath");
   pragma Import(MSIL,get_Handle,"get_Handle");
   pragma Import(MSIL,get_ImageIndex,"get_ImageIndex");
   pragma Import(MSIL,get_ImageKey,"get_ImageKey");
   pragma Import(MSIL,get_Index,"get_Index");
   pragma Import(MSIL,get_IsEditing,"get_IsEditing");
   pragma Import(MSIL,get_IsExpanded,"get_IsExpanded");
   pragma Import(MSIL,get_IsSelected,"get_IsSelected");
   pragma Import(MSIL,get_IsVisible,"get_IsVisible");
   pragma Import(MSIL,get_LastNode,"get_LastNode");
   pragma Import(MSIL,get_Level,"get_Level");
   pragma Import(MSIL,get_Name,"get_Name");
   pragma Import(MSIL,get_NextNode,"get_NextNode");
   pragma Import(MSIL,get_NextVisibleNode,"get_NextVisibleNode");
   pragma Import(MSIL,get_NodeFont,"get_NodeFont");
   pragma Import(MSIL,get_Nodes,"get_Nodes");
   pragma Import(MSIL,get_Parent,"get_Parent");
   pragma Import(MSIL,get_PrevNode,"get_PrevNode");
   pragma Import(MSIL,get_PrevVisibleNode,"get_PrevVisibleNode");
   pragma Import(MSIL,get_SelectedImageIndex,"get_SelectedImageIndex");
   pragma Import(MSIL,get_SelectedImageKey,"get_SelectedImageKey");
   pragma Import(MSIL,get_StateImageIndex,"get_StateImageIndex");
   pragma Import(MSIL,get_StateImageKey,"get_StateImageKey");
   pragma Import(MSIL,get_Tag,"get_Tag");
   pragma Import(MSIL,get_Text,"get_Text");
   pragma Import(MSIL,get_ToolTipText,"get_ToolTipText");
   pragma Import(MSIL,get_TreeView,"get_TreeView");
   pragma Import(MSIL,GetNodeCount,"GetNodeCount");
   pragma Import(MSIL,Remove,"Remove");
   pragma Import(MSIL,set_BackColor,"set_BackColor");
   pragma Import(MSIL,set_Checked,"set_Checked");
   pragma Import(MSIL,set_ContextMenu,"set_ContextMenu");
   pragma Import(MSIL,set_ContextMenuStrip,"set_ContextMenuStrip");
   pragma Import(MSIL,set_ForeColor,"set_ForeColor");
   pragma Import(MSIL,set_ImageIndex,"set_ImageIndex");
   pragma Import(MSIL,set_ImageKey,"set_ImageKey");
   pragma Import(MSIL,set_Name,"set_Name");
   pragma Import(MSIL,set_NodeFont,"set_NodeFont");
   pragma Import(MSIL,set_SelectedImageIndex,"set_SelectedImageIndex");
   pragma Import(MSIL,set_SelectedImageKey,"set_SelectedImageKey");
   pragma Import(MSIL,set_StateImageIndex,"set_StateImageIndex");
   pragma Import(MSIL,set_StateImageKey,"set_StateImageKey");
   pragma Import(MSIL,set_Tag,"set_Tag");
   pragma Import(MSIL,set_Text,"set_Text");
   pragma Import(MSIL,set_ToolTipText,"set_ToolTipText");
   pragma Import(MSIL,Toggle,"Toggle");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Windows.Forms.TreeNode;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Windows.Forms.TreeNode,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System.Windows.Forms]System.Windows.Forms.TreeNode");
