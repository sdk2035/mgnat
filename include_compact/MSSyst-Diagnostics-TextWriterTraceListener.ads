-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Diagnostics.TraceListener;
with type MSSyst.Runtime.Remoting.ObjRef.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Object.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Collections.Specialized.StringDictionary.Ref is access;
with type MSSyst.Diagnostics.TraceFilter.Ref is access;
with MSSyst.Diagnostics.TraceOptions;
with type MSSyst.IO.TextWriter.Ref is access;
with type MSSyst.Diagnostics.TraceEventCache.Ref is access;
with MSSyst.Diagnostics.TraceEventType;
with type MSSyst.Object.Ref_array is access;
with type MSSyst.Guid.Valuetype is tagged;
with type MSSyst.IO.Stream.Ref is access;
package MSSyst.Diagnostics.TextWriterTraceListener is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Diagnostics.TraceListener.Typ   with record
      null;
   end record;
   function new_TextWriterTraceListener(
      This : Ref := null) return Ref;
   function new_TextWriterTraceListener(
      This : Ref := null;
      stream : MSSyst.IO.Stream.Ref) return Ref;
   function new_TextWriterTraceListener(
      This : Ref := null;
      stream : MSSyst.IO.Stream.Ref;
      name : MSSyst.String.Ref) return Ref;
   function new_TextWriterTraceListener(
      This : Ref := null;
      writer : MSSyst.IO.TextWriter.Ref) return Ref;
   function new_TextWriterTraceListener(
      This : Ref := null;
      writer : MSSyst.IO.TextWriter.Ref;
      name : MSSyst.String.Ref) return Ref;
   function new_TextWriterTraceListener(
      This : Ref := null;
      fileName : MSSyst.String.Ref) return Ref;
   function new_TextWriterTraceListener(
      This : Ref := null;
      fileName : MSSyst.String.Ref;
      name : MSSyst.String.Ref) return Ref;
   procedure Close(
      This : access Typ);
   procedure Flush(
      This : access Typ);
   function get_Writer(
      This : access Typ) return MSSyst.IO.TextWriter.Ref;
   procedure set_Writer(
      This : access Typ;
      value : MSSyst.IO.TextWriter.Ref);
   procedure Write(
      This : access Typ;
      message : MSSyst.String.Ref);
   procedure WriteLine(
      This : access Typ;
      message : MSSyst.String.Ref);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_TextWriterTraceListener);
   pragma Import(MSIL,Close,"Close");
   pragma Import(MSIL,Flush,"Flush");
   pragma Import(MSIL,get_Writer,"get_Writer");
   pragma Import(MSIL,set_Writer,"set_Writer");
   pragma Import(MSIL,Write,"Write");
   pragma Import(MSIL,WriteLine,"WriteLine");
end MSSyst.Diagnostics.TextWriterTraceListener;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Diagnostics.TextWriterTraceListener,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Diagnostics.TextWriterTraceListener");
