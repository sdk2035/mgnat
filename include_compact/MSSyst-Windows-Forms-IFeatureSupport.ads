-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.Version.Ref is access;
with type MSSyst.Object.Ref is access;
package MSSyst.Windows.Forms.IFeatureSupport is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is interface;
   function GetVersionPresent(
      This : access Typ;
      feature : MSSyst.Object.Ref) return MSSyst.Version.Ref is abstract;
   function IsPresent(
      This : access Typ;
      feature : MSSyst.Object.Ref;
      minimumVersion : MSSyst.Version.Ref) return Standard.Boolean is abstract;
   function IsPresent(
      This : access Typ;
      feature : MSSyst.Object.Ref) return Standard.Boolean is abstract;
private
   pragma Import(MSIL,GetVersionPresent,"GetVersionPresent");
   pragma Import(MSIL,IsPresent,"IsPresent");
end MSSyst.Windows.Forms.IFeatureSupport;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Windows.Forms.IFeatureSupport,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System.Windows.Forms]System.Windows.Forms.IFeatureSupport");
