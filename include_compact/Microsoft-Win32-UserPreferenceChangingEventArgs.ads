-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.EventArgs;
with type MSSyst.Object.Ref is access;
with Microsoft.Win32.UserPreferenceCategory;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
package Microsoft.Win32.UserPreferenceChangingEventArgs is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.EventArgs.Typ   with record
      null;
   end record;
   function new_UserPreferenceChangingEventArgs(
      This : Ref := null;
      category : Microsoft.Win32.UserPreferenceCategory.Valuetype) return Ref;
   function get_Category(
      This : access Typ) return Microsoft.Win32.UserPreferenceCategory.Valuetype;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_UserPreferenceChangingEventArgs);
   pragma Import(MSIL,get_Category,"get_Category");
end Microsoft.Win32.UserPreferenceChangingEventArgs;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,Microsoft.Win32.UserPreferenceChangingEventArgs,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]Microsoft.Win32.UserPreferenceChangingEventArgs");
