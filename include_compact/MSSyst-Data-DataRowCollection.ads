-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.Collections.ICollection.Ref is access;
with type MSSyst.Collections.IEnumerable.Ref is access;
with type MSSyst.Data.DataRow.Ref is access;
with type MSSyst.Object.Ref_array is access;
with type MSSyst.Object.Ref is access;
with type MSSyst.Array_k.Ref is access;
with type MSSyst.Collections.IEnumerator.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
with MSSyst.Data.InternalDataCollectionBase;
package MSSyst.Data.DataRowCollection is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Arr1 is array(Natural range <>) of Ref;
   type Ref_Array is access all Arr1;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ(
         I_ICollection : MSSyst.Collections.ICollection.Ref;
         I_IEnumerable : MSSyst.Collections.IEnumerable.Ref
      ) is new MSSyst.Data.InternalDataCollectionBase.Typ(
         I_ICollection => I_ICollection,
         I_IEnumerable => I_IEnumerable
      ) with record
      null;
   end record;
   procedure Add(
      This : access Typ;
      row : MSSyst.Data.DataRow.Ref);
   function Add(
      This : access Typ;
      values : MSSyst.Object.Ref_array) return MSSyst.Data.DataRow.Ref;
   procedure Clear(
      This : access Typ);
   function Contains(
      This : access Typ;
      key : MSSyst.Object.Ref) return Standard.Boolean;
   function Contains(
      This : access Typ;
      keys : MSSyst.Object.Ref_array) return Standard.Boolean;
   function Find(
      This : access Typ;
      keys : MSSyst.Object.Ref_array) return MSSyst.Data.DataRow.Ref;
   function Find(
      This : access Typ;
      key : MSSyst.Object.Ref) return MSSyst.Data.DataRow.Ref;
   function get_Item(
      This : access Typ;
      index : Integer) return MSSyst.Data.DataRow.Ref;
   procedure InsertAt(
      This : access Typ;
      row : MSSyst.Data.DataRow.Ref;
      pos : Integer);
   procedure Remove(
      This : access Typ;
      row : MSSyst.Data.DataRow.Ref);
   procedure RemoveAt(
      This : access Typ;
      index : Integer);
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,Add,"Add");
   pragma Import(MSIL,Clear,"Clear");
   pragma Import(MSIL,Contains,"Contains");
   pragma Import(MSIL,Find,"Find");
   pragma Import(MSIL,get_Item,"get_Item");
   pragma Import(MSIL,InsertAt,"InsertAt");
   pragma Import(MSIL,Remove,"Remove");
   pragma Import(MSIL,RemoveAt,"RemoveAt");
end MSSyst.Data.DataRowCollection;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Data.DataRowCollection,
   ".ver 1:0:5000:0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[System.Data]System.Data.DataRowCollection");
