-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.ComponentModel.IEditableObject.Ref is access;
with type MSSyst.ComponentModel.IDataErrorInfo.Ref is access;
with type MSSyst.Data.DataView.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Data.DataRelation.Ref is access;
with type MSSyst.Object.Ref is access;
with type MSSyst.Data.DataRow.Ref is access;
with MSSyst.Data.DataRowVersion;
with type MSSyst.Type_k.Ref is access;
with MSSyst.Object;
package MSSyst.Data.DataRowView is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Arr1 is array(Natural range <>) of Ref;
   type Ref_Array is access all Arr1;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ(
         I_IEditableObject : MSSyst.ComponentModel.IEditableObject.Ref;
         I_IDataErrorInfo : MSSyst.ComponentModel.IDataErrorInfo.Ref
      ) is new MSSyst.Object.Typ with record
      null;
   end record;
   procedure BeginEdit(
      This : access Typ);
   procedure CancelEdit(
      This : access Typ);
   function CreateChildView(
      This : access Typ;
      relationName : MSSyst.String.Ref) return MSSyst.Data.DataView.Ref;
   function CreateChildView(
      This : access Typ;
      relation : MSSyst.Data.DataRelation.Ref) return MSSyst.Data.DataView.Ref;
   procedure Delete(
      This : access Typ);
   procedure EndEdit(
      This : access Typ);
   function Equals(
      This : access Typ;
      other : MSSyst.Object.Ref) return Standard.Boolean;
   function get_DataView(
      This : access Typ) return MSSyst.Data.DataView.Ref;
   function get_IsEdit(
      This : access Typ) return Standard.Boolean;
   function get_IsNew(
      This : access Typ) return Standard.Boolean;
   function get_Item(
      This : access Typ;
      property : MSSyst.String.Ref) return MSSyst.Object.Ref;
   function get_Row(
      This : access Typ) return MSSyst.Data.DataRow.Ref;
   function get_RowVersion(
      This : access Typ) return MSSyst.Data.DataRowVersion.Valuetype;
   function GetHashCode(
      This : access Typ) return Integer;
   procedure set_Item(
      This : access Typ;
      property : MSSyst.String.Ref;
      value : MSSyst.Object.Ref);
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,BeginEdit,"BeginEdit");
   pragma Import(MSIL,CancelEdit,"CancelEdit");
   pragma Import(MSIL,CreateChildView,"CreateChildView");
   pragma Import(MSIL,Delete,"Delete");
   pragma Import(MSIL,EndEdit,"EndEdit");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_DataView,"get_DataView");
   pragma Import(MSIL,get_IsEdit,"get_IsEdit");
   pragma Import(MSIL,get_IsNew,"get_IsNew");
   pragma Import(MSIL,get_Item,"get_Item");
   pragma Import(MSIL,get_Row,"get_Row");
   pragma Import(MSIL,get_RowVersion,"get_RowVersion");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,set_Item,"set_Item");
end MSSyst.Data.DataRowView;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Data.DataRowView,
   ".ver 1:0:5000:0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[System.Data]System.Data.DataRowView");
