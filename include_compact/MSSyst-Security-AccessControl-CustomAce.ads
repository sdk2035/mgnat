-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Security.AccessControl.GenericAce;
with type MSSyst.Object.Ref is access;
with MSSyst.Security.AccessControl.AceFlags;
with MSSyst.Security.AccessControl.AceType;
with MSSyst.Security.AccessControl.AuditFlags;
with MSSyst.Security.AccessControl.InheritanceFlags;
with MSSyst.Security.AccessControl.PropagationFlags;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.Security.AccessControl.CustomAce is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Security.AccessControl.GenericAce.Typ   with record
      null;
   end record;
   MaxOpaqueLength : Integer;
   pragma Import(MSIL,MaxOpaqueLength,"MaxOpaqueLength");
   function new_CustomAce(
      This : Ref := null;
      type_k : MSSyst.Security.AccessControl.AceType.Valuetype;
      flags : MSSyst.Security.AccessControl.AceFlags.Valuetype;
      opaque : MSIL_Types.unsigned_int8_Arr) return Ref;
   function get_BinaryLength(
      This : access Typ) return Integer;
   function get_OpaqueLength(
      This : access Typ) return Integer;
   procedure GetBinaryForm(
      This : access Typ;
      binaryForm : MSIL_Types.unsigned_int8_Arr;
      offset : Integer);
   function GetOpaque(
      This : access Typ) return MSIL_Types.unsigned_int8_Array;
   procedure SetOpaque(
      This : access Typ;
      opaque : MSIL_Types.unsigned_int8_Arr);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_CustomAce);
   pragma Import(MSIL,get_BinaryLength,"get_BinaryLength");
   pragma Import(MSIL,get_OpaqueLength,"get_OpaqueLength");
   pragma Import(MSIL,GetBinaryForm,"GetBinaryForm");
   pragma Import(MSIL,GetOpaque,"GetOpaque");
   pragma Import(MSIL,SetOpaque,"SetOpaque");
end MSSyst.Security.AccessControl.CustomAce;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Security.AccessControl.CustomAce,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Security.AccessControl.CustomAce");
