-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Collections.Hashtable;
with MSSyst.Collections.IDictionary;
with MSSyst.Collections.ICollection;
with MSSyst.Runtime.Serialization.ISerializable;
with MSSyst.Runtime.Serialization.IDeserializationCallback;
with MSSyst.ICloneable;
with type MSSyst.Object.Ref is access;
with type MSSyst.Array_k.Ref is access;
with type MSSyst.Collections.IDictionaryEnumerator.Ref is access;
with type MSSyst.Runtime.Serialization.SerializationInfo.Ref is access;
with type MSSyst.Runtime.Serialization.StreamingContext.Valuetype is tagged;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.Configuration.SettingsContext is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Collections.Hashtable.Typ
         and MSSyst.Collections.IDictionary.Typ
         and MSSyst.Collections.ICollection.Typ
         and MSSyst.Runtime.Serialization.ISerializable.Typ
         and MSSyst.Runtime.Serialization.IDeserializationCallback.Typ
         and MSSyst.ICloneable.Typ
   with record
      null;
   end record;
   function new_SettingsContext(
      This : Ref := null) return Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_SettingsContext);
end MSSyst.Configuration.SettingsContext;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Configuration.SettingsContext,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Configuration.SettingsContext");
