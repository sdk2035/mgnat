-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Windows.Forms.CommonDialog;
with MSSyst.ComponentModel.IComponent;
with type MSSyst.EventHandler.Ref is access;
with type MSSyst.Runtime.Remoting.ObjRef.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Object.Ref is access;
with type MSSyst.Drawing.Color.Valuetype is tagged;
with type MSSyst.ComponentModel.IContainer.Ref is access;
with type MSSyst.Drawing.Font.Ref is access;
with type MSSyst.ComponentModel.ISite.Ref is access;
with MSSyst.Windows.Forms.DialogResult;
with type MSSyst.Windows.Forms.IWin32Window.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.Windows.Forms.FontDialog is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Windows.Forms.CommonDialog.Typ
         and MSSyst.ComponentModel.IComponent.Typ
   with record
      null;
   end record;
   function new_FontDialog(
      This : Ref := null) return Ref;
   procedure add_Apply(
      This : access Typ;
      value : MSSyst.EventHandler.Ref);
   function get_AllowScriptChange(
      This : access Typ) return Standard.Boolean;
   function get_AllowSimulations(
      This : access Typ) return Standard.Boolean;
   function get_AllowVectorFonts(
      This : access Typ) return Standard.Boolean;
   function get_AllowVerticalFonts(
      This : access Typ) return Standard.Boolean;
   function get_Color(
      This : access Typ) return MSSyst.Drawing.Color.Valuetype;
   function get_FixedPitchOnly(
      This : access Typ) return Standard.Boolean;
   function get_Font(
      This : access Typ) return MSSyst.Drawing.Font.Ref;
   function get_FontMustExist(
      This : access Typ) return Standard.Boolean;
   function get_MaxSize(
      This : access Typ) return Integer;
   function get_MinSize(
      This : access Typ) return Integer;
   function get_ScriptsOnly(
      This : access Typ) return Standard.Boolean;
   function get_ShowApply(
      This : access Typ) return Standard.Boolean;
   function get_ShowColor(
      This : access Typ) return Standard.Boolean;
   function get_ShowEffects(
      This : access Typ) return Standard.Boolean;
   function get_ShowHelp(
      This : access Typ) return Standard.Boolean;
   procedure remove_Apply(
      This : access Typ;
      value : MSSyst.EventHandler.Ref);
   procedure Reset(
      This : access Typ);
   procedure set_AllowScriptChange(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_AllowSimulations(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_AllowVectorFonts(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_AllowVerticalFonts(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_Color(
      This : access Typ;
      value : MSSyst.Drawing.Color.Valuetype);
   procedure set_FixedPitchOnly(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_Font(
      This : access Typ;
      value : MSSyst.Drawing.Font.Ref);
   procedure set_FontMustExist(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_MaxSize(
      This : access Typ;
      value : Integer);
   procedure set_MinSize(
      This : access Typ;
      value : Integer);
   procedure set_ScriptsOnly(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_ShowApply(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_ShowColor(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_ShowEffects(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_ShowHelp(
      This : access Typ;
      value : Standard.Boolean);
   function ToString(
      This : access Typ) return MSSyst.String.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_FontDialog);
   pragma Import(MSIL,add_Apply,"add_Apply");
   pragma Import(MSIL,get_AllowScriptChange,"get_AllowScriptChange");
   pragma Import(MSIL,get_AllowSimulations,"get_AllowSimulations");
   pragma Import(MSIL,get_AllowVectorFonts,"get_AllowVectorFonts");
   pragma Import(MSIL,get_AllowVerticalFonts,"get_AllowVerticalFonts");
   pragma Import(MSIL,get_Color,"get_Color");
   pragma Import(MSIL,get_FixedPitchOnly,"get_FixedPitchOnly");
   pragma Import(MSIL,get_Font,"get_Font");
   pragma Import(MSIL,get_FontMustExist,"get_FontMustExist");
   pragma Import(MSIL,get_MaxSize,"get_MaxSize");
   pragma Import(MSIL,get_MinSize,"get_MinSize");
   pragma Import(MSIL,get_ScriptsOnly,"get_ScriptsOnly");
   pragma Import(MSIL,get_ShowApply,"get_ShowApply");
   pragma Import(MSIL,get_ShowColor,"get_ShowColor");
   pragma Import(MSIL,get_ShowEffects,"get_ShowEffects");
   pragma Import(MSIL,get_ShowHelp,"get_ShowHelp");
   pragma Import(MSIL,remove_Apply,"remove_Apply");
   pragma Import(MSIL,Reset,"Reset");
   pragma Import(MSIL,set_AllowScriptChange,"set_AllowScriptChange");
   pragma Import(MSIL,set_AllowSimulations,"set_AllowSimulations");
   pragma Import(MSIL,set_AllowVectorFonts,"set_AllowVectorFonts");
   pragma Import(MSIL,set_AllowVerticalFonts,"set_AllowVerticalFonts");
   pragma Import(MSIL,set_Color,"set_Color");
   pragma Import(MSIL,set_FixedPitchOnly,"set_FixedPitchOnly");
   pragma Import(MSIL,set_Font,"set_Font");
   pragma Import(MSIL,set_FontMustExist,"set_FontMustExist");
   pragma Import(MSIL,set_MaxSize,"set_MaxSize");
   pragma Import(MSIL,set_MinSize,"set_MinSize");
   pragma Import(MSIL,set_ScriptsOnly,"set_ScriptsOnly");
   pragma Import(MSIL,set_ShowApply,"set_ShowApply");
   pragma Import(MSIL,set_ShowColor,"set_ShowColor");
   pragma Import(MSIL,set_ShowEffects,"set_ShowEffects");
   pragma Import(MSIL,set_ShowHelp,"set_ShowHelp");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Windows.Forms.FontDialog;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Windows.Forms.FontDialog,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System.Windows.Forms]System.Windows.Forms.FontDialog");
