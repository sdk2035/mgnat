-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.ValueType;
with MSSyst.IComparable;
with MSSyst.IFormattable;
with type MSSyst.Object.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref_array is access;
with MSSyst.TypeCode;
with type MSSyst.Array_k.Ref is access;
with type MSSyst.SByte.Valuetype is tagged;
with type MSSyst.IFormatProvider.Ref is access;
package MSSyst.Enum is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is abstract new MSSyst.ValueType.Typ
         and MSSyst.IComparable.Typ
         and MSSyst.IFormattable.Typ
   with record
      null;
   end record;
   function CompareTo(
      This : access Typ;
      target : MSSyst.Object.Ref) return Integer;
   function Equals(
      This : access Typ;
      obj : MSSyst.Object.Ref) return Standard.Boolean;
   function Format(
      enumType : MSSyst.Type_k.Ref;
      value : MSSyst.Object.Ref;
      format : MSSyst.String.Ref) return MSSyst.String.Ref;
   function GetHashCode(
      This : access Typ) return Integer;
   function GetName(
      enumType : MSSyst.Type_k.Ref;
      value : MSSyst.Object.Ref) return MSSyst.String.Ref;
   function GetNames(
      enumType : MSSyst.Type_k.Ref) return MSSyst.String.Ref_array;
   function GetTypeCode(
      This : access Typ) return MSSyst.TypeCode.Valuetype;
   function GetUnderlyingType(
      enumType : MSSyst.Type_k.Ref) return MSSyst.Type_k.Ref;
   function GetValues(
      enumType : MSSyst.Type_k.Ref) return MSSyst.Array_k.Ref;
   function IsDefined(
      enumType : MSSyst.Type_k.Ref;
      value : MSSyst.Object.Ref) return Standard.Boolean;
   function Parse(
      enumType : MSSyst.Type_k.Ref;
      value : MSSyst.String.Ref) return MSSyst.Object.Ref;
   function Parse(
      enumType : MSSyst.Type_k.Ref;
      value : MSSyst.String.Ref;
      ignoreCase : Standard.Boolean) return MSSyst.Object.Ref;
   function ToObject(
      enumType : MSSyst.Type_k.Ref;
      value : MSIL_Types.int16) return MSSyst.Object.Ref;
   function ToObject(
      enumType : MSSyst.Type_k.Ref;
      value : MSIL_Types.unsigned_int16) return MSSyst.Object.Ref;
   function ToObject(
      enumType : MSSyst.Type_k.Ref;
      value : MSIL_Types.unsigned_int8) return MSSyst.Object.Ref;
   function ToObject(
      enumType : MSSyst.Type_k.Ref;
      value : Integer) return MSSyst.Object.Ref;
   function ToObject(
      enumType : MSSyst.Type_k.Ref;
      value : MSSyst.SByte.Valuetype) return MSSyst.Object.Ref;
   function ToObject(
      enumType : MSSyst.Type_k.Ref;
      value : MSIL_Types.Unsigned_Long_Long_Integer) return MSSyst.Object.Ref;
   function ToObject(
      enumType : MSSyst.Type_k.Ref;
      value : MSSyst.Object.Ref) return MSSyst.Object.Ref;
   function ToObject(
      enumType : MSSyst.Type_k.Ref;
      value : MSIL_Types.Unsigned_Integer) return MSSyst.Object.Ref;
   function ToObject(
      enumType : MSSyst.Type_k.Ref;
      value : Long_Long_Integer) return MSSyst.Object.Ref;
   function ToString(
      This : access Typ;
      format : MSSyst.String.Ref;
      provider : MSSyst.IFormatProvider.Ref) return MSSyst.String.Ref;
   function ToString(
      This : access Typ) return MSSyst.String.Ref;
   function ToString(
      This : access Typ;
      provider : MSSyst.IFormatProvider.Ref) return MSSyst.String.Ref;
   function ToString(
      This : access Typ;
      format : MSSyst.String.Ref) return MSSyst.String.Ref;
private
   pragma Import(MSIL,CompareTo,"CompareTo");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,Format,"Format");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetName,"GetName");
   pragma Import(MSIL,GetNames,"GetNames");
   pragma Import(MSIL,GetTypeCode,"GetTypeCode");
   pragma Import(MSIL,GetUnderlyingType,"GetUnderlyingType");
   pragma Import(MSIL,GetValues,"GetValues");
   pragma Import(MSIL,IsDefined,"IsDefined");
   pragma Import(MSIL,Parse,"Parse");
   pragma Import(MSIL,ToObject,"ToObject");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Enum;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Enum,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Enum");
