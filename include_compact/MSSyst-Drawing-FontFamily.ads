-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.MarshalByRefObject;
with type MSSyst.Runtime.Remoting.ObjRef.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Object.Ref is access;
with type MSSyst.Drawing.FontFamily.Ref_array is access;
with type MSSyst.String.Ref is access;
with MSSyst.Drawing.FontStyle;
with type MSSyst.Drawing.Graphics.Ref is access;
with type MSSyst.Drawing.Text.FontCollection.Ref is access;
with MSSyst.Drawing.Text.GenericFontFamilies;
package MSSyst.Drawing.FontFamily is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.MarshalByRefObject.Typ   with record
      null;
   end record;
   function new_FontFamily(
      This : Ref := null;
      name : MSSyst.String.Ref) return Ref;
   function new_FontFamily(
      This : Ref := null;
      name : MSSyst.String.Ref;
      fontCollection : MSSyst.Drawing.Text.FontCollection.Ref) return Ref;
   function new_FontFamily(
      This : Ref := null;
      genericFamily : MSSyst.Drawing.Text.GenericFontFamilies.Valuetype) return Ref;
   procedure Dispose(
      This : access Typ);
   function Equals(
      This : access Typ;
      obj : MSSyst.Object.Ref) return Standard.Boolean;
   function get_Families return MSSyst.Drawing.FontFamily.Ref_array;
   function get_GenericMonospace return MSSyst.Drawing.FontFamily.Ref;
   function get_GenericSansSerif return MSSyst.Drawing.FontFamily.Ref;
   function get_GenericSerif return MSSyst.Drawing.FontFamily.Ref;
   function get_Name(
      This : access Typ) return MSSyst.String.Ref;
   function GetCellAscent(
      This : access Typ;
      style : MSSyst.Drawing.FontStyle.Valuetype) return Integer;
   function GetCellDescent(
      This : access Typ;
      style : MSSyst.Drawing.FontStyle.Valuetype) return Integer;
   function GetEmHeight(
      This : access Typ;
      style : MSSyst.Drawing.FontStyle.Valuetype) return Integer;
   function GetFamilies(
      graphics : MSSyst.Drawing.Graphics.Ref) return MSSyst.Drawing.FontFamily.Ref_array;
   function GetHashCode(
      This : access Typ) return Integer;
   function GetLineSpacing(
      This : access Typ;
      style : MSSyst.Drawing.FontStyle.Valuetype) return Integer;
   function GetName(
      This : access Typ;
      language : Integer) return MSSyst.String.Ref;
   function IsStyleAvailable(
      This : access Typ;
      style : MSSyst.Drawing.FontStyle.Valuetype) return Standard.Boolean;
   function ToString(
      This : access Typ) return MSSyst.String.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_FontFamily);
   pragma Import(MSIL,Dispose,"Dispose");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_Families,"get_Families");
   pragma Import(MSIL,get_GenericMonospace,"get_GenericMonospace");
   pragma Import(MSIL,get_GenericSansSerif,"get_GenericSansSerif");
   pragma Import(MSIL,get_GenericSerif,"get_GenericSerif");
   pragma Import(MSIL,get_Name,"get_Name");
   pragma Import(MSIL,GetCellAscent,"GetCellAscent");
   pragma Import(MSIL,GetCellDescent,"GetCellDescent");
   pragma Import(MSIL,GetEmHeight,"GetEmHeight");
   pragma Import(MSIL,GetFamilies,"GetFamilies");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetLineSpacing,"GetLineSpacing");
   pragma Import(MSIL,GetName,"GetName");
   pragma Import(MSIL,IsStyleAvailable,"IsStyleAvailable");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Drawing.FontFamily;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Drawing.FontFamily,
   ".ver 2:0:0:0 .publickeytoken=( b0 3f 5f 7f 11 d5 0a 3a )",
   "[System.Drawing]System.Drawing.FontFamily");
