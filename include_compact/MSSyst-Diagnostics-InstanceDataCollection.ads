-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Collections.DictionaryBase;
with MSSyst.Collections.IDictionary;
with MSSyst.Collections.ICollection;
with type MSSyst.String.Ref is access;
with type MSSyst.Diagnostics.InstanceData.Ref_array is access;
with type MSSyst.Array_k.Ref is access;
with type MSSyst.Object.Ref is access;
with type MSSyst.Diagnostics.InstanceData.Ref is access;
with type MSSyst.Collections.IDictionaryEnumerator.Ref is access;
with type MSSyst.Type_k.Ref is access;
package MSSyst.Diagnostics.InstanceDataCollection is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Collections.DictionaryBase.Typ
         and MSSyst.Collections.IDictionary.Typ
         and MSSyst.Collections.ICollection.Typ
   with record
      null;
   end record;
   function new_InstanceDataCollection(
      This : Ref := null;
      counterName : MSSyst.String.Ref) return Ref;
   function Contains(
      This : access Typ;
      instanceName : MSSyst.String.Ref) return Standard.Boolean;
   procedure CopyTo(
      This : access Typ;
      instances : MSSyst.Diagnostics.InstanceData.Ref_array;
      index : Integer);
   function get_CounterName(
      This : access Typ) return MSSyst.String.Ref;
   function get_Item(
      This : access Typ;
      instanceName : MSSyst.String.Ref) return MSSyst.Diagnostics.InstanceData.Ref;
   function get_Keys(
      This : access Typ) return MSSyst.Collections.ICollection.Ref;
   function get_Values(
      This : access Typ) return MSSyst.Collections.ICollection.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_InstanceDataCollection);
   pragma Import(MSIL,Contains,"Contains");
   pragma Import(MSIL,CopyTo,"CopyTo");
   pragma Import(MSIL,get_CounterName,"get_CounterName");
   pragma Import(MSIL,get_Item,"get_Item");
   pragma Import(MSIL,get_Keys,"get_Keys");
   pragma Import(MSIL,get_Values,"get_Values");
end MSSyst.Diagnostics.InstanceDataCollection;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Diagnostics.InstanceDataCollection,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Diagnostics.InstanceDataCollection");
