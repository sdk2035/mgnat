-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.CodeDom.CodeTypeMember;
with type MSSyst.EventHandler.Ref is access;
with type MSSyst.Object.Ref is access;
with MSSyst.CodeDom.MemberAttributes;
with type MSSyst.CodeDom.CodeTypeReferenceCollection.Ref is access;
with type MSSyst.CodeDom.CodeCommentStatementCollection.Ref is access;
with type MSSyst.CodeDom.CodeAttributeDeclarationCollection.Ref is access;
with type MSSyst.CodeDom.CodeDirectiveCollection.Ref is access;
with type MSSyst.CodeDom.CodeLinePragma.Ref is access;
with type MSSyst.CodeDom.CodeTypeMemberCollection.Ref is access;
with type MSSyst.String.Ref is access;
with MSSyst.Reflection.TypeAttributes;
with type MSSyst.CodeDom.CodeTypeParameterCollection.Ref is access;
with type MSSyst.Collections.IDictionary.Ref is access;
with type MSSyst.Type_k.Ref is access;
package MSSyst.CodeDom.CodeTypeDeclaration is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.CodeDom.CodeTypeMember.Typ   with record
      null;
   end record;
   function new_CodeTypeDeclaration(
      This : Ref := null) return Ref;
   function new_CodeTypeDeclaration(
      This : Ref := null;
      name : MSSyst.String.Ref) return Ref;
   procedure add_PopulateBaseTypes(
      This : access Typ;
      value : MSSyst.EventHandler.Ref);
   procedure add_PopulateMembers(
      This : access Typ;
      value : MSSyst.EventHandler.Ref);
   function get_BaseTypes(
      This : access Typ) return MSSyst.CodeDom.CodeTypeReferenceCollection.Ref;
   function get_IsClass(
      This : access Typ) return Standard.Boolean;
   function get_IsEnum(
      This : access Typ) return Standard.Boolean;
   function get_IsInterface(
      This : access Typ) return Standard.Boolean;
   function get_IsPartial(
      This : access Typ) return Standard.Boolean;
   function get_IsStruct(
      This : access Typ) return Standard.Boolean;
   function get_Members(
      This : access Typ) return MSSyst.CodeDom.CodeTypeMemberCollection.Ref;
   function get_TypeAttributes(
      This : access Typ) return MSSyst.Reflection.TypeAttributes.Valuetype;
   function get_TypeParameters(
      This : access Typ) return MSSyst.CodeDom.CodeTypeParameterCollection.Ref;
   procedure remove_PopulateBaseTypes(
      This : access Typ;
      value : MSSyst.EventHandler.Ref);
   procedure remove_PopulateMembers(
      This : access Typ;
      value : MSSyst.EventHandler.Ref);
   procedure set_IsClass(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_IsEnum(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_IsInterface(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_IsPartial(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_IsStruct(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_TypeAttributes(
      This : access Typ;
      value : MSSyst.Reflection.TypeAttributes.Valuetype);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_CodeTypeDeclaration);
   pragma Import(MSIL,add_PopulateBaseTypes,"add_PopulateBaseTypes");
   pragma Import(MSIL,add_PopulateMembers,"add_PopulateMembers");
   pragma Import(MSIL,get_BaseTypes,"get_BaseTypes");
   pragma Import(MSIL,get_IsClass,"get_IsClass");
   pragma Import(MSIL,get_IsEnum,"get_IsEnum");
   pragma Import(MSIL,get_IsInterface,"get_IsInterface");
   pragma Import(MSIL,get_IsPartial,"get_IsPartial");
   pragma Import(MSIL,get_IsStruct,"get_IsStruct");
   pragma Import(MSIL,get_Members,"get_Members");
   pragma Import(MSIL,get_TypeAttributes,"get_TypeAttributes");
   pragma Import(MSIL,get_TypeParameters,"get_TypeParameters");
   pragma Import(MSIL,remove_PopulateBaseTypes,"remove_PopulateBaseTypes");
   pragma Import(MSIL,remove_PopulateMembers,"remove_PopulateMembers");
   pragma Import(MSIL,set_IsClass,"set_IsClass");
   pragma Import(MSIL,set_IsEnum,"set_IsEnum");
   pragma Import(MSIL,set_IsInterface,"set_IsInterface");
   pragma Import(MSIL,set_IsPartial,"set_IsPartial");
   pragma Import(MSIL,set_IsStruct,"set_IsStruct");
   pragma Import(MSIL,set_TypeAttributes,"set_TypeAttributes");
end MSSyst.CodeDom.CodeTypeDeclaration;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.CodeDom.CodeTypeDeclaration,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.CodeDom.CodeTypeDeclaration");
