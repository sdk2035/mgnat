-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.Object.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.Windows.Forms.UnsafeNativeMethods.IExtender is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is interface;
   function get_Align(
      This : access Typ) return Integer is abstract;
   function get_Container(
      This : access Typ) return MSSyst.Object.Ref is abstract;
   function get_Enabled(
      This : access Typ) return Standard.Boolean is abstract;
   function get_Height(
      This : access Typ) return Integer is abstract;
   function get_Hwnd(
      This : access Typ) return MSIL_Types.native_int is abstract;
   function get_Left(
      This : access Typ) return Integer is abstract;
   function get_Name(
      This : access Typ) return MSSyst.String.Ref is abstract;
   function get_Parent(
      This : access Typ) return MSSyst.Object.Ref is abstract;
   function get_TabStop(
      This : access Typ) return Standard.Boolean is abstract;
   function get_Top(
      This : access Typ) return Integer is abstract;
   function get_Visible(
      This : access Typ) return Standard.Boolean is abstract;
   function get_Width(
      This : access Typ) return Integer is abstract;
   procedure Move(
      This : access Typ;
      left : MSSyst.Object.Ref;
      top : MSSyst.Object.Ref;
      width : MSSyst.Object.Ref;
      height : MSSyst.Object.Ref) is abstract;
   procedure set_Align(
      This : access Typ;
      value : Integer) is abstract;
   procedure set_Enabled(
      This : access Typ;
      value : Standard.Boolean) is abstract;
   procedure set_Height(
      This : access Typ;
      value : Integer) is abstract;
   procedure set_Left(
      This : access Typ;
      value : Integer) is abstract;
   procedure set_TabStop(
      This : access Typ;
      value : Standard.Boolean) is abstract;
   procedure set_Top(
      This : access Typ;
      value : Integer) is abstract;
   procedure set_Visible(
      This : access Typ;
      value : Standard.Boolean) is abstract;
   procedure set_Width(
      This : access Typ;
      value : Integer) is abstract;
private
   pragma Import(MSIL,get_Align,"get_Align");
   pragma Import(MSIL,get_Container,"get_Container");
   pragma Import(MSIL,get_Enabled,"get_Enabled");
   pragma Import(MSIL,get_Height,"get_Height");
   pragma Import(MSIL,get_Hwnd,"get_Hwnd");
   pragma Import(MSIL,get_Left,"get_Left");
   pragma Import(MSIL,get_Name,"get_Name");
   pragma Import(MSIL,get_Parent,"get_Parent");
   pragma Import(MSIL,get_TabStop,"get_TabStop");
   pragma Import(MSIL,get_Top,"get_Top");
   pragma Import(MSIL,get_Visible,"get_Visible");
   pragma Import(MSIL,get_Width,"get_Width");
   pragma Import(MSIL,Move,"Move");
   pragma Import(MSIL,set_Align,"set_Align");
   pragma Import(MSIL,set_Enabled,"set_Enabled");
   pragma Import(MSIL,set_Height,"set_Height");
   pragma Import(MSIL,set_Left,"set_Left");
   pragma Import(MSIL,set_TabStop,"set_TabStop");
   pragma Import(MSIL,set_Top,"set_Top");
   pragma Import(MSIL,set_Visible,"set_Visible");
   pragma Import(MSIL,set_Width,"set_Width");
end MSSyst.Windows.Forms.UnsafeNativeMethods.IExtender;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Windows.Forms.UnsafeNativeMethods.IExtender,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System.Windows.Forms]System.Windows.Forms.UnsafeNativeMethods/IExtender");
