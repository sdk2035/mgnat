-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Reflection.MethodBase;
with MSSyst.Reflection.ICustomAttributeProvider;
with MSSyst.Runtime.InteropServices.uMemberInfo;
with MSSyst.Runtime.InteropServices.uMethodBase;
with MSSyst.Runtime.InteropServices.uConstructorInfo;
with type MSSyst.String.Ref is access;
with type MSSyst.Object.Ref is access;
with MSSyst.Reflection.MethodAttributes;
with MSSyst.Reflection.CallingConventions;
with type MSSyst.Type_k.Ref is access;
with MSSyst.Reflection.MemberTypes;
with type MSSyst.RuntimeMethodHandle.Valuetype is tagged;
with type MSSyst.Reflection.Module.Ref is access;
with type MSSyst.Object.Ref_array is access;
with type MSSyst.Type_k.Ref_array is access;
with type MSSyst.Reflection.MethodBody.Ref is access;
with MSSyst.Reflection.MethodImplAttributes;
with type MSSyst.Reflection.ParameterInfo.Ref_array is access;
with MSSyst.Reflection.BindingFlags;
with type MSSyst.Reflection.Binder.Ref is access;
with type MSSyst.Globalization.CultureInfo.Ref is access;
package MSSyst.Reflection.ConstructorInfo is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is abstract new MSSyst.Reflection.MethodBase.Typ
         and MSSyst.Reflection.ICustomAttributeProvider.Typ
         and MSSyst.Runtime.InteropServices.uMemberInfo.Typ
         and MSSyst.Runtime.InteropServices.uMethodBase.Typ
         and MSSyst.Runtime.InteropServices.uConstructorInfo.Typ
   with record
      null;
   end record;
   ConstructorName : MSSyst.String.Ref;
   pragma Import(MSIL,ConstructorName,"ConstructorName");
   TypeConstructorName : MSSyst.String.Ref;
   pragma Import(MSIL,TypeConstructorName,"TypeConstructorName");
   function get_MemberType(
      This : access Typ) return MSSyst.Reflection.MemberTypes.Valuetype;
   function Invoke(
      This : access Typ;
      parameters : MSSyst.Object.Ref_array) return MSSyst.Object.Ref;
   function Invoke(
      This : access Typ;
      invokeAttr : MSSyst.Reflection.BindingFlags.Valuetype;
      binder : MSSyst.Reflection.Binder.Ref;
      parameters : MSSyst.Object.Ref_array;
      culture : MSSyst.Globalization.CultureInfo.Ref) return MSSyst.Object.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,get_MemberType,"get_MemberType");
   pragma Import(MSIL,Invoke,"Invoke");
end MSSyst.Reflection.ConstructorInfo;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Reflection.ConstructorInfo,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Reflection.ConstructorInfo");
