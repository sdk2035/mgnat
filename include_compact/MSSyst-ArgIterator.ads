-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.ValueType;
with type MSSyst.Object.Ref is access;
with type MSSyst.TypedReference.Valuetype is tagged;
with type MSSyst.RuntimeTypeHandle.Valuetype is tagged;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.RuntimeArgumentHandle.Valuetype is tagged;
with MSSyst.Void;
package MSSyst.ArgIterator is
   type ValueType is new MSSyst.ValueType.Typ with null record;
   type ValueType_Arr is array (Natural range <>) of ValueType; -- start at 0
   type ValueType_Array is access all ValueType_Arr;
   type ValueType_addrof is access all ValueType;
   type ValueType_array_addrof is access all ValueType_Array;
   function new_ArgIterator(
      arglist : MSSyst.RuntimeArgumentHandle.Valuetype) return Valuetype;
   function new_ArgIterator(
      arglist : MSSyst.RuntimeArgumentHandle.Valuetype;
      ptr : MSIL_Types.void_addrof) return Valuetype;
   procedure End_k(
      This : Valuetype);
   function Equals(
      This : Valuetype;
      o : MSSyst.Object.Ref) return Standard.Boolean;
   function GetHashCode(
      This : Valuetype) return Integer;
   function GetNextArg(
      This : Valuetype) return MSSyst.TypedReference.Valuetype;
   function GetNextArg(
      This : Valuetype;
      rth : MSSyst.RuntimeTypeHandle.Valuetype) return MSSyst.TypedReference.Valuetype;
   function GetNextArgType(
      This : Valuetype) return MSSyst.RuntimeTypeHandle.Valuetype;
   function GetRemainingCount(
      This : Valuetype) return Integer;
private
   pragma MSIL_Constructor(new_ArgIterator);
   pragma Import(MSIL,End_k,"End");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetNextArg,"GetNextArg");
   pragma Import(MSIL,GetNextArgType,"GetNextArgType");
   pragma Import(MSIL,GetRemainingCount,"GetRemainingCount");
end MSSyst.ArgIterator;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.ArgIterator,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.ArgIterator");
