-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with MSSyst.Runtime.Serialization.ISerializable;
with MSSyst.Runtime.InteropServices.uException;
with type MSSyst.Collections.IDictionary.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Reflection.MethodBase.Ref is access;
with type MSSyst.Runtime.Serialization.SerializationInfo.Ref is access;
with type MSSyst.Runtime.Serialization.StreamingContext.Valuetype is tagged;
with type MSSyst.Type_k.Ref is access;
package MSSyst.Exception_k is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ
         and MSSyst.Runtime.Serialization.ISerializable.Typ
         and MSSyst.Runtime.InteropServices.uException.Typ
   with record
      null;
   end record;
   function new_Exception(
      This : Ref := null) return Ref;
   function new_Exception(
      This : Ref := null;
      message : MSSyst.String.Ref) return Ref;
   function new_Exception(
      This : Ref := null;
      message : MSSyst.String.Ref;
      innerException : MSSyst.Exception_k.Ref) return Ref;
   function get_Data(
      This : access Typ) return MSSyst.Collections.IDictionary.Ref;
   function get_HelpLink(
      This : access Typ) return MSSyst.String.Ref;
   function get_InnerException(
      This : access Typ) return MSSyst.Exception_k.Ref;
   function get_Message(
      This : access Typ) return MSSyst.String.Ref;
   function get_Source(
      This : access Typ) return MSSyst.String.Ref;
   function get_StackTrace(
      This : access Typ) return MSSyst.String.Ref;
   function get_TargetSite(
      This : access Typ) return MSSyst.Reflection.MethodBase.Ref;
   function GetBaseException(
      This : access Typ) return MSSyst.Exception_k.Ref;
   procedure GetObjectData(
      This : access Typ;
      info : MSSyst.Runtime.Serialization.SerializationInfo.Ref;
      context : MSSyst.Runtime.Serialization.StreamingContext.Valuetype);
   function GetType(
      This : access Typ) return MSSyst.Type_k.Ref;
   procedure set_HelpLink(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_Source(
      This : access Typ;
      value : MSSyst.String.Ref);
   function ToString(
      This : access Typ) return MSSyst.String.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_Exception);
   pragma Import(MSIL,get_Data,"get_Data");
   pragma Import(MSIL,get_HelpLink,"get_HelpLink");
   pragma Import(MSIL,get_InnerException,"get_InnerException");
   pragma Import(MSIL,get_Message,"get_Message");
   pragma Import(MSIL,get_Source,"get_Source");
   pragma Import(MSIL,get_StackTrace,"get_StackTrace");
   pragma Import(MSIL,get_TargetSite,"get_TargetSite");
   pragma Import(MSIL,GetBaseException,"GetBaseException");
   pragma Import(MSIL,GetObjectData,"GetObjectData");
   pragma Import(MSIL,GetType,"GetType");
   pragma Import(MSIL,set_HelpLink,"set_HelpLink");
   pragma Import(MSIL,set_Source,"set_Source");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Exception_k;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Exception_k,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Exception");
