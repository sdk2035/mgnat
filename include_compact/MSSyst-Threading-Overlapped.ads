-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with MSSyst.Threading.NativeOverlapped;
with type MSSyst.IAsyncResult.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Threading.IOCompletionCallback.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.Threading.Overlapped is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   function new_Overlapped(
      This : Ref := null) return Ref;
   function new_Overlapped(
      This : Ref := null;
      offsetLo : Integer;
      offsetHi : Integer;
      hEvent : MSIL_Types.native_int;
      ar : MSSyst.IAsyncResult.Ref) return Ref;
   function new_Overlapped(
      This : Ref := null;
      offsetLo : Integer;
      offsetHi : Integer;
      hEvent : Integer;
      ar : MSSyst.IAsyncResult.Ref) return Ref;
   procedure Free(
      nativeOverlappedPtr : MSSyst.Threading.NativeOverlapped.Valuetype_addrof);
   function get_AsyncResult(
      This : access Typ) return MSSyst.IAsyncResult.Ref;
   function get_EventHandle(
      This : access Typ) return Integer;
   function get_EventHandleIntPtr(
      This : access Typ) return MSIL_Types.native_int;
   function get_OffsetHigh(
      This : access Typ) return Integer;
   function get_OffsetLow(
      This : access Typ) return Integer;
   function Pack(
      This : access Typ;
      iocb : MSSyst.Threading.IOCompletionCallback.Ref;
      userData : MSSyst.Object.Ref) return MSSyst.Threading.NativeOverlapped.Valuetype_addrof;
   function Pack(
      This : access Typ;
      iocb : MSSyst.Threading.IOCompletionCallback.Ref) return MSSyst.Threading.NativeOverlapped.Valuetype_addrof;
   procedure set_AsyncResult(
      This : access Typ;
      value : MSSyst.IAsyncResult.Ref);
   procedure set_EventHandle(
      This : access Typ;
      value : Integer);
   procedure set_EventHandleIntPtr(
      This : access Typ;
      value : MSIL_Types.native_int);
   procedure set_OffsetHigh(
      This : access Typ;
      value : Integer);
   procedure set_OffsetLow(
      This : access Typ;
      value : Integer);
   function Unpack(
      nativeOverlappedPtr : MSSyst.Threading.NativeOverlapped.Valuetype_addrof) return MSSyst.Threading.Overlapped.Ref;
   function UnsafePack(
      This : access Typ;
      iocb : MSSyst.Threading.IOCompletionCallback.Ref) return MSSyst.Threading.NativeOverlapped.Valuetype_addrof;
   function UnsafePack(
      This : access Typ;
      iocb : MSSyst.Threading.IOCompletionCallback.Ref;
      userData : MSSyst.Object.Ref) return MSSyst.Threading.NativeOverlapped.Valuetype_addrof;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_Overlapped);
   pragma Import(MSIL,Free,"Free");
   pragma Import(MSIL,get_AsyncResult,"get_AsyncResult");
   pragma Import(MSIL,get_EventHandle,"get_EventHandle");
   pragma Import(MSIL,get_EventHandleIntPtr,"get_EventHandleIntPtr");
   pragma Import(MSIL,get_OffsetHigh,"get_OffsetHigh");
   pragma Import(MSIL,get_OffsetLow,"get_OffsetLow");
   pragma Import(MSIL,Pack,"Pack");
   pragma Import(MSIL,set_AsyncResult,"set_AsyncResult");
   pragma Import(MSIL,set_EventHandle,"set_EventHandle");
   pragma Import(MSIL,set_EventHandleIntPtr,"set_EventHandleIntPtr");
   pragma Import(MSIL,set_OffsetHigh,"set_OffsetHigh");
   pragma Import(MSIL,set_OffsetLow,"set_OffsetLow");
   pragma Import(MSIL,Unpack,"Unpack");
   pragma Import(MSIL,UnsafePack,"UnsafePack");
end MSSyst.Threading.Overlapped;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Threading.Overlapped,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Threading.Overlapped");
