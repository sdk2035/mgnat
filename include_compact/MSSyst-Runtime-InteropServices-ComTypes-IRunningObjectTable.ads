-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.Runtime.InteropServices.ComTypes.IEnumMoniker.Ref_addrof is access;
with type MSSyst.Runtime.InteropServices.ComTypes.IMoniker.Ref is access;
with type MSSyst.Object.Ref_addrof is access;
with MSSyst.Runtime.InteropServices.ComTypes.FILETIME;
with type MSSyst.Object.Ref is access;
package MSSyst.Runtime.InteropServices.ComTypes.IRunningObjectTable is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is interface;
   procedure EnumRunning(
      This : access Typ;
      ppenumMoniker : MSSyst.Runtime.InteropServices.ComTypes.IEnumMoniker.Ref_addrof) is abstract;
   function GetObject(
      This : access Typ;
      pmkObjectName : MSSyst.Runtime.InteropServices.ComTypes.IMoniker.Ref;
      ppunkObject : MSSyst.Object.Ref_addrof) return Integer is abstract;
   function GetTimeOfLastChange(
      This : access Typ;
      pmkObjectName : MSSyst.Runtime.InteropServices.ComTypes.IMoniker.Ref;
      pfiletime : MSSyst.Runtime.InteropServices.ComTypes.FILETIME.Valuetype_addrof) return Integer is abstract;
   function IsRunning(
      This : access Typ;
      pmkObjectName : MSSyst.Runtime.InteropServices.ComTypes.IMoniker.Ref) return Integer is abstract;
   procedure NoteChangeTime(
      This : access Typ;
      dwRegister : Integer;
      pfiletime : MSSyst.Runtime.InteropServices.ComTypes.FILETIME.Valuetype_addrof) is abstract;
   function Register(
      This : access Typ;
      grfFlags : Integer;
      punkObject : MSSyst.Object.Ref;
      pmkObjectName : MSSyst.Runtime.InteropServices.ComTypes.IMoniker.Ref) return Integer is abstract;
   procedure Revoke(
      This : access Typ;
      dwRegister : Integer) is abstract;
private
   pragma Import(MSIL,EnumRunning,"EnumRunning");
   pragma Import(MSIL,GetObject,"GetObject");
   pragma Import(MSIL,GetTimeOfLastChange,"GetTimeOfLastChange");
   pragma Import(MSIL,IsRunning,"IsRunning");
   pragma Import(MSIL,NoteChangeTime,"NoteChangeTime");
   pragma Import(MSIL,Register,"Register");
   pragma Import(MSIL,Revoke,"Revoke");
end MSSyst.Runtime.InteropServices.ComTypes.IRunningObjectTable;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Runtime.InteropServices.ComTypes.IRunningObjectTable,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Runtime.InteropServices.ComTypes.IRunningObjectTable");
