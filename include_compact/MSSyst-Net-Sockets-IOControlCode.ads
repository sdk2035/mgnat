-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.Object.Ref is access;
with type MSSyst.Type_k.Ref is access;
with MSSyst.TypeCode;
with type MSSyst.String.Ref is access;
with type MSSyst.IFormatProvider.Ref is access;
package MSSyst.Net.Sockets.IOControlCode is
   type ValueType is (
      AsyncIO,
      NonBlockingIO,
      AssociateHandle,
      MultipointLoopback,
      MulticastScope,
      SetQos,
      SetGroupQos,
      RoutingInterfaceChange,
      NamespaceChange,
      ReceiveAll,
      ReceiveAllMulticast,
      ReceiveAllIgmpMulticast,
      KeepAliveValues,
      AbsorbRouterAlert,
      UnicastInterface,
      LimitBroadcasts,
      BindToInterface,
      MulticastInterface,
      AddMulticastGroupOnInterface,
      DeleteMulticastGroupFromInterface,
      GetExtensionFunctionPointer,
      GetQos,
      GetGroupQos,
      TranslateHandle,
      RoutingInterfaceQuery,
      AddressListSort,
      EnableCircularQueuing,
      Flush,
      AddressListChange,
      DataToRead,
      OobDataRead,
      GetBroadcastAddress,
      AddressListQuery,
      QueryTargetPnpHandle);
   pragma Convention (MSIL, ValueType);
   for ValueType use (
      AsyncIO => -2147195267,
      NonBlockingIO => -2147195266,
      AssociateHandle => -2013265919,
      MultipointLoopback => -2013265911,
      MulticastScope => -2013265910,
      SetQos => -2013265909,
      SetGroupQos => -2013265908,
      RoutingInterfaceChange => -2013265899,
      NamespaceChange => -2013265895,
      ReceiveAll => -1744830463,
      ReceiveAllMulticast => -1744830462,
      ReceiveAllIgmpMulticast => -1744830461,
      KeepAliveValues => -1744830460,
      AbsorbRouterAlert => -1744830459,
      UnicastInterface => -1744830458,
      LimitBroadcasts => -1744830457,
      BindToInterface => -1744830456,
      MulticastInterface => -1744830455,
      AddMulticastGroupOnInterface => -1744830454,
      DeleteMulticastGroupFromInterface => -1744830453,
      GetExtensionFunctionPointer => -939524090,
      GetQos => -939524089,
      GetGroupQos => -939524088,
      TranslateHandle => -939524083,
      RoutingInterfaceQuery => -939524076,
      AddressListSort => -939524071,
      EnableCircularQueuing =>  0,
      Flush =>  671088644,
      AddressListChange =>  671088663,
      DataToRead =>  1074030207,
      OobDataRead =>  1074033415,
      GetBroadcastAddress =>  1207959557,
      AddressListQuery =>  1207959574,
      QueryTargetPnpHandle =>  1207959576);
   type ValueType_Arr is array (Natural range <>) of ValueType; -- start at 0
   type ValueType_Array is access all ValueType_Arr;
   type ValueType_addrof is access all ValueType;
   type ValueType_array_addrof is access all ValueType_Array;
   function CompareTo(
      This : Valuetype;
      target : MSSyst.Object.Ref) return Integer;
   function Equals(
      This : Valuetype;
      obj : MSSyst.Object.Ref) return Standard.Boolean;
   function GetHashCode(
      This : Valuetype) return Integer;
   function GetType(
      This : Valuetype) return MSSyst.Type_k.Ref;
   function GetTypeCode(
      This : Valuetype) return MSSyst.TypeCode.Valuetype;
   function ToString(
      This : Valuetype;
      provider : MSSyst.IFormatProvider.Ref) return MSSyst.String.Ref;
   function ToString(
      This : Valuetype) return MSSyst.String.Ref;
   function ToString(
      This : Valuetype;
      format : MSSyst.String.Ref;
      provider : MSSyst.IFormatProvider.Ref) return MSSyst.String.Ref;
   function ToString(
      This : Valuetype;
      format : MSSyst.String.Ref) return MSSyst.String.Ref;
private
   pragma Import(MSIL,CompareTo,"CompareTo");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetType,"GetType");
   pragma Import(MSIL,GetTypeCode,"GetTypeCode");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Net.Sockets.IOControlCode;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Net.Sockets.IOControlCode,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Net.Sockets.IOControlCode");
