-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with type MSSyst.IO.DirectoryInfo.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Security.AccessControl.DirectorySecurity.Ref is access;
with MSSyst.Security.AccessControl.AccessControlSections;
with type MSSyst.DateTime.Valuetype is tagged;
with type MSSyst.String.Ref_array is access;
with MSSyst.IO.SearchOption;
with type MSSyst.Type_k.Ref is access;
package MSSyst.IO.Directory is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is abstract new MSSyst.Object.Typ   with record
      null;
   end record;
   function CreateDirectory(
      path : MSSyst.String.Ref) return MSSyst.IO.DirectoryInfo.Ref;
   function CreateDirectory(
      path : MSSyst.String.Ref;
      directorySecurity : MSSyst.Security.AccessControl.DirectorySecurity.Ref) return MSSyst.IO.DirectoryInfo.Ref;
   procedure Delete(
      path : MSSyst.String.Ref;
      recursive : Standard.Boolean);
   procedure Delete(
      path : MSSyst.String.Ref);
   function Exists(
      path : MSSyst.String.Ref) return Standard.Boolean;
   function GetAccessControl(
      path : MSSyst.String.Ref) return MSSyst.Security.AccessControl.DirectorySecurity.Ref;
   function GetAccessControl(
      path : MSSyst.String.Ref;
      includeSections : MSSyst.Security.AccessControl.AccessControlSections.Valuetype) return MSSyst.Security.AccessControl.DirectorySecurity.Ref;
   function GetCreationTime(
      path : MSSyst.String.Ref) return MSSyst.DateTime.Valuetype;
   function GetCreationTimeUtc(
      path : MSSyst.String.Ref) return MSSyst.DateTime.Valuetype;
   function GetCurrentDirectory return MSSyst.String.Ref;
   function GetDirectories(
      path : MSSyst.String.Ref;
      searchPattern : MSSyst.String.Ref) return MSSyst.String.Ref_array;
   function GetDirectories(
      path : MSSyst.String.Ref) return MSSyst.String.Ref_array;
   function GetDirectories(
      path : MSSyst.String.Ref;
      searchPattern : MSSyst.String.Ref;
      searchOption : MSSyst.IO.SearchOption.Valuetype) return MSSyst.String.Ref_array;
   function GetDirectoryRoot(
      path : MSSyst.String.Ref) return MSSyst.String.Ref;
   function GetFiles(
      path : MSSyst.String.Ref;
      searchPattern : MSSyst.String.Ref;
      searchOption : MSSyst.IO.SearchOption.Valuetype) return MSSyst.String.Ref_array;
   function GetFiles(
      path : MSSyst.String.Ref;
      searchPattern : MSSyst.String.Ref) return MSSyst.String.Ref_array;
   function GetFiles(
      path : MSSyst.String.Ref) return MSSyst.String.Ref_array;
   function GetFileSystemEntries(
      path : MSSyst.String.Ref;
      searchPattern : MSSyst.String.Ref) return MSSyst.String.Ref_array;
   function GetFileSystemEntries(
      path : MSSyst.String.Ref) return MSSyst.String.Ref_array;
   function GetLastAccessTime(
      path : MSSyst.String.Ref) return MSSyst.DateTime.Valuetype;
   function GetLastAccessTimeUtc(
      path : MSSyst.String.Ref) return MSSyst.DateTime.Valuetype;
   function GetLastWriteTime(
      path : MSSyst.String.Ref) return MSSyst.DateTime.Valuetype;
   function GetLastWriteTimeUtc(
      path : MSSyst.String.Ref) return MSSyst.DateTime.Valuetype;
   function GetLogicalDrives return MSSyst.String.Ref_array;
   function GetParent(
      path : MSSyst.String.Ref) return MSSyst.IO.DirectoryInfo.Ref;
   procedure Move(
      sourceDirName : MSSyst.String.Ref;
      destDirName : MSSyst.String.Ref);
   procedure SetAccessControl(
      path : MSSyst.String.Ref;
      directorySecurity : MSSyst.Security.AccessControl.DirectorySecurity.Ref);
   procedure SetCreationTime(
      path : MSSyst.String.Ref;
      creationTime : MSSyst.DateTime.Valuetype);
   procedure SetCreationTimeUtc(
      path : MSSyst.String.Ref;
      creationTimeUtc : MSSyst.DateTime.Valuetype);
   procedure SetCurrentDirectory(
      path : MSSyst.String.Ref);
   procedure SetLastAccessTime(
      path : MSSyst.String.Ref;
      lastAccessTime : MSSyst.DateTime.Valuetype);
   procedure SetLastAccessTimeUtc(
      path : MSSyst.String.Ref;
      lastAccessTimeUtc : MSSyst.DateTime.Valuetype);
   procedure SetLastWriteTime(
      path : MSSyst.String.Ref;
      lastWriteTime : MSSyst.DateTime.Valuetype);
   procedure SetLastWriteTimeUtc(
      path : MSSyst.String.Ref;
      lastWriteTimeUtc : MSSyst.DateTime.Valuetype);
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,CreateDirectory,"CreateDirectory");
   pragma Import(MSIL,Delete,"Delete");
   pragma Import(MSIL,Exists,"Exists");
   pragma Import(MSIL,GetAccessControl,"GetAccessControl");
   pragma Import(MSIL,GetCreationTime,"GetCreationTime");
   pragma Import(MSIL,GetCreationTimeUtc,"GetCreationTimeUtc");
   pragma Import(MSIL,GetCurrentDirectory,"GetCurrentDirectory");
   pragma Import(MSIL,GetDirectories,"GetDirectories");
   pragma Import(MSIL,GetDirectoryRoot,"GetDirectoryRoot");
   pragma Import(MSIL,GetFiles,"GetFiles");
   pragma Import(MSIL,GetFileSystemEntries,"GetFileSystemEntries");
   pragma Import(MSIL,GetLastAccessTime,"GetLastAccessTime");
   pragma Import(MSIL,GetLastAccessTimeUtc,"GetLastAccessTimeUtc");
   pragma Import(MSIL,GetLastWriteTime,"GetLastWriteTime");
   pragma Import(MSIL,GetLastWriteTimeUtc,"GetLastWriteTimeUtc");
   pragma Import(MSIL,GetLogicalDrives,"GetLogicalDrives");
   pragma Import(MSIL,GetParent,"GetParent");
   pragma Import(MSIL,Move,"Move");
   pragma Import(MSIL,SetAccessControl,"SetAccessControl");
   pragma Import(MSIL,SetCreationTime,"SetCreationTime");
   pragma Import(MSIL,SetCreationTimeUtc,"SetCreationTimeUtc");
   pragma Import(MSIL,SetCurrentDirectory,"SetCurrentDirectory");
   pragma Import(MSIL,SetLastAccessTime,"SetLastAccessTime");
   pragma Import(MSIL,SetLastAccessTimeUtc,"SetLastAccessTimeUtc");
   pragma Import(MSIL,SetLastWriteTime,"SetLastWriteTime");
   pragma Import(MSIL,SetLastWriteTimeUtc,"SetLastWriteTimeUtc");
end MSSyst.IO.Directory;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.IO.Directory,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.IO.Directory");
