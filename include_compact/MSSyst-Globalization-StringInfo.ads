-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with type MSSyst.String.Ref is access;
with type MSSyst.Globalization.TextElementEnumerator.Ref is access;
with type MSSyst.Type_k.Ref is access;
package MSSyst.Globalization.StringInfo is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   function new_StringInfo(
      This : Ref := null) return Ref;
   function new_StringInfo(
      This : Ref := null;
      value : MSSyst.String.Ref) return Ref;
   function Equals(
      This : access Typ;
      value : MSSyst.Object.Ref) return Standard.Boolean;
   function get_LengthInTextElements(
      This : access Typ) return Integer;
   function get_String(
      This : access Typ) return MSSyst.String.Ref;
   function GetHashCode(
      This : access Typ) return Integer;
   function GetNextTextElement(
      str : MSSyst.String.Ref;
      index : Integer) return MSSyst.String.Ref;
   function GetNextTextElement(
      str : MSSyst.String.Ref) return MSSyst.String.Ref;
   function GetTextElementEnumerator(
      str : MSSyst.String.Ref;
      index : Integer) return MSSyst.Globalization.TextElementEnumerator.Ref;
   function GetTextElementEnumerator(
      str : MSSyst.String.Ref) return MSSyst.Globalization.TextElementEnumerator.Ref;
   function ParseCombiningCharacters(
      str : MSSyst.String.Ref) return MSIL_Types.Int32_Array;
   procedure set_String(
      This : access Typ;
      value : MSSyst.String.Ref);
   function SubstringByTextElements(
      This : access Typ;
      startingTextElement : Integer) return MSSyst.String.Ref;
   function SubstringByTextElements(
      This : access Typ;
      startingTextElement : Integer;
      lengthInTextElements : Integer) return MSSyst.String.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_StringInfo);
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_LengthInTextElements,"get_LengthInTextElements");
   pragma Import(MSIL,get_String,"get_String");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetNextTextElement,"GetNextTextElement");
   pragma Import(MSIL,GetTextElementEnumerator,"GetTextElementEnumerator");
   pragma Import(MSIL,ParseCombiningCharacters,"ParseCombiningCharacters");
   pragma Import(MSIL,set_String,"set_String");
   pragma Import(MSIL,SubstringByTextElements,"SubstringByTextElements");
end MSSyst.Globalization.StringInfo;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Globalization.StringInfo,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Globalization.StringInfo");
