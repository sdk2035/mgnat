-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.Collections.ICollection.Ref is access;
with type MSSyst.Collections.IEnumerable.Ref is access;
with type MSSyst.Data.Constraint.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Data.DataColumn.Ref is access;
with type MSSyst.Data.DataColumn.Ref_array is access;
with type MSSyst.ComponentModel.CollectionChangeEventHandler.Ref is access;
with type MSSyst.Data.Constraint.Ref_array is access;
with type MSSyst.Array_k.Ref is access;
with type MSSyst.Object.Ref is access;
with type MSSyst.Collections.IEnumerator.Ref is access;
with type MSSyst.Type_k.Ref is access;
with MSSyst.Data.InternalDataCollectionBase;
package MSSyst.Data.ConstraintCollection is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Arr1 is array(Natural range <>) of Ref;
   type Ref_Array is access all Arr1;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ(
         I_ICollection : MSSyst.Collections.ICollection.Ref;
         I_IEnumerable : MSSyst.Collections.IEnumerable.Ref
      ) is new MSSyst.Data.InternalDataCollectionBase.Typ(
         I_ICollection => I_ICollection,
         I_IEnumerable => I_IEnumerable
      ) with record
      null;
   end record;
   function Add(
      This : access Typ;
      name : MSSyst.String.Ref;
      column : MSSyst.Data.DataColumn.Ref;
      primaryKey : Standard.Boolean) return MSSyst.Data.Constraint.Ref;
   function Add(
      This : access Typ;
      name : MSSyst.String.Ref;
      columns : MSSyst.Data.DataColumn.Ref_array;
      primaryKey : Standard.Boolean) return MSSyst.Data.Constraint.Ref;
   function Add(
      This : access Typ;
      name : MSSyst.String.Ref;
      primaryKeyColumn : MSSyst.Data.DataColumn.Ref;
      foreignKeyColumn : MSSyst.Data.DataColumn.Ref) return MSSyst.Data.Constraint.Ref;
   procedure Add(
      This : access Typ;
      constraint : MSSyst.Data.Constraint.Ref);
   function Add(
      This : access Typ;
      name : MSSyst.String.Ref;
      primaryKeyColumns : MSSyst.Data.DataColumn.Ref_array;
      foreignKeyColumns : MSSyst.Data.DataColumn.Ref_array) return MSSyst.Data.Constraint.Ref;
   procedure add_CollectionChanged(
      This : access Typ;
      value : MSSyst.ComponentModel.CollectionChangeEventHandler.Ref);
   procedure AddRange(
      This : access Typ;
      constraints : MSSyst.Data.Constraint.Ref_array);
   function CanRemove(
      This : access Typ;
      constraint : MSSyst.Data.Constraint.Ref) return Standard.Boolean;
   procedure Clear(
      This : access Typ);
   function Contains(
      This : access Typ;
      name : MSSyst.String.Ref) return Standard.Boolean;
   function get_Item(
      This : access Typ;
      index : Integer) return MSSyst.Data.Constraint.Ref;
   function get_Item(
      This : access Typ;
      name : MSSyst.String.Ref) return MSSyst.Data.Constraint.Ref;
   function IndexOf(
      This : access Typ;
      constraint : MSSyst.Data.Constraint.Ref) return Integer;
   function IndexOf(
      This : access Typ;
      constraintName : MSSyst.String.Ref) return Integer;
   procedure Remove(
      This : access Typ;
      name : MSSyst.String.Ref);
   procedure Remove(
      This : access Typ;
      constraint : MSSyst.Data.Constraint.Ref);
   procedure remove_CollectionChanged(
      This : access Typ;
      value : MSSyst.ComponentModel.CollectionChangeEventHandler.Ref);
   procedure RemoveAt(
      This : access Typ;
      index : Integer);
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,Add,"Add");
   pragma Import(MSIL,add_CollectionChanged,"add_CollectionChanged");
   pragma Import(MSIL,AddRange,"AddRange");
   pragma Import(MSIL,CanRemove,"CanRemove");
   pragma Import(MSIL,Clear,"Clear");
   pragma Import(MSIL,Contains,"Contains");
   pragma Import(MSIL,get_Item,"get_Item");
   pragma Import(MSIL,IndexOf,"IndexOf");
   pragma Import(MSIL,Remove,"Remove");
   pragma Import(MSIL,remove_CollectionChanged,"remove_CollectionChanged");
   pragma Import(MSIL,RemoveAt,"RemoveAt");
end MSSyst.Data.ConstraintCollection;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Data.ConstraintCollection,
   ".ver 1:0:5000:0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[System.Data]System.Data.ConstraintCollection");
