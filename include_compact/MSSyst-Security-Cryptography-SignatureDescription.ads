-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with type MSSyst.Security.Cryptography.AsymmetricSignatureDeformatter.Ref is access;
with type MSSyst.Security.Cryptography.AsymmetricAlgorithm.Ref is access;
with type MSSyst.Security.Cryptography.HashAlgorithm.Ref is access;
with type MSSyst.Security.Cryptography.AsymmetricSignatureFormatter.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Security.SecurityElement.Ref is access;
package MSSyst.Security.Cryptography.SignatureDescription is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   function new_SignatureDescription(
      This : Ref := null) return Ref;
   function new_SignatureDescription(
      This : Ref := null;
      el : MSSyst.Security.SecurityElement.Ref) return Ref;
   function CreateDeformatter(
      This : access Typ;
      key : MSSyst.Security.Cryptography.AsymmetricAlgorithm.Ref) return MSSyst.Security.Cryptography.AsymmetricSignatureDeformatter.Ref;
   function CreateDigest(
      This : access Typ) return MSSyst.Security.Cryptography.HashAlgorithm.Ref;
   function CreateFormatter(
      This : access Typ;
      key : MSSyst.Security.Cryptography.AsymmetricAlgorithm.Ref) return MSSyst.Security.Cryptography.AsymmetricSignatureFormatter.Ref;
   function get_DeformatterAlgorithm(
      This : access Typ) return MSSyst.String.Ref;
   function get_DigestAlgorithm(
      This : access Typ) return MSSyst.String.Ref;
   function get_FormatterAlgorithm(
      This : access Typ) return MSSyst.String.Ref;
   function get_KeyAlgorithm(
      This : access Typ) return MSSyst.String.Ref;
   procedure set_DeformatterAlgorithm(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_DigestAlgorithm(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_FormatterAlgorithm(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_KeyAlgorithm(
      This : access Typ;
      value : MSSyst.String.Ref);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_SignatureDescription);
   pragma Import(MSIL,CreateDeformatter,"CreateDeformatter");
   pragma Import(MSIL,CreateDigest,"CreateDigest");
   pragma Import(MSIL,CreateFormatter,"CreateFormatter");
   pragma Import(MSIL,get_DeformatterAlgorithm,"get_DeformatterAlgorithm");
   pragma Import(MSIL,get_DigestAlgorithm,"get_DigestAlgorithm");
   pragma Import(MSIL,get_FormatterAlgorithm,"get_FormatterAlgorithm");
   pragma Import(MSIL,get_KeyAlgorithm,"get_KeyAlgorithm");
   pragma Import(MSIL,set_DeformatterAlgorithm,"set_DeformatterAlgorithm");
   pragma Import(MSIL,set_DigestAlgorithm,"set_DigestAlgorithm");
   pragma Import(MSIL,set_FormatterAlgorithm,"set_FormatterAlgorithm");
   pragma Import(MSIL,set_KeyAlgorithm,"set_KeyAlgorithm");
end MSSyst.Security.Cryptography.SignatureDescription;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Security.Cryptography.SignatureDescription,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Security.Cryptography.SignatureDescription");
