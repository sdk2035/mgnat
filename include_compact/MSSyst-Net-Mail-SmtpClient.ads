-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with type MSSyst.Net.Mail.SendCompletedEventHandler.Ref is access;
with type MSSyst.Security.Cryptography.X509Certificates.X509CertificateCollection.Ref is access;
with type MSSyst.Net.ICredentialsByHost.Ref is access;
with MSSyst.Net.Mail.SmtpDeliveryMethod;
with type MSSyst.String.Ref is access;
with type MSSyst.Net.ServicePoint.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Net.Mail.MailMessage.Ref is access;
package MSSyst.Net.Mail.SmtpClient is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   function new_SmtpClient(
      This : Ref := null) return Ref;
   function new_SmtpClient(
      This : Ref := null;
      host : MSSyst.String.Ref) return Ref;
   function new_SmtpClient(
      This : Ref := null;
      host : MSSyst.String.Ref;
      port : Integer) return Ref;
   procedure add_SendCompleted(
      This : access Typ;
      value : MSSyst.Net.Mail.SendCompletedEventHandler.Ref);
   function get_ClientCertificates(
      This : access Typ) return MSSyst.Security.Cryptography.X509Certificates.X509CertificateCollection.Ref;
   function get_Credentials(
      This : access Typ) return MSSyst.Net.ICredentialsByHost.Ref;
   function get_DeliveryMethod(
      This : access Typ) return MSSyst.Net.Mail.SmtpDeliveryMethod.Valuetype;
   function get_EnableSsl(
      This : access Typ) return Standard.Boolean;
   function get_Host(
      This : access Typ) return MSSyst.String.Ref;
   function get_PickupDirectoryLocation(
      This : access Typ) return MSSyst.String.Ref;
   function get_Port(
      This : access Typ) return Integer;
   function get_ServicePoint(
      This : access Typ) return MSSyst.Net.ServicePoint.Ref;
   function get_Timeout(
      This : access Typ) return Integer;
   function get_UseDefaultCredentials(
      This : access Typ) return Standard.Boolean;
   procedure remove_SendCompleted(
      This : access Typ;
      value : MSSyst.Net.Mail.SendCompletedEventHandler.Ref);
   procedure Send(
      This : access Typ;
      from : MSSyst.String.Ref;
      recipients : MSSyst.String.Ref;
      subject : MSSyst.String.Ref;
      body_k : MSSyst.String.Ref);
   procedure Send(
      This : access Typ;
      message : MSSyst.Net.Mail.MailMessage.Ref);
   procedure SendAsync(
      This : access Typ;
      message : MSSyst.Net.Mail.MailMessage.Ref;
      userToken : MSSyst.Object.Ref);
   procedure SendAsync(
      This : access Typ;
      from : MSSyst.String.Ref;
      recipients : MSSyst.String.Ref;
      subject : MSSyst.String.Ref;
      body_k : MSSyst.String.Ref;
      userToken : MSSyst.Object.Ref);
   procedure SendAsyncCancel(
      This : access Typ);
   procedure set_Credentials(
      This : access Typ;
      value : MSSyst.Net.ICredentialsByHost.Ref);
   procedure set_DeliveryMethod(
      This : access Typ;
      value : MSSyst.Net.Mail.SmtpDeliveryMethod.Valuetype);
   procedure set_EnableSsl(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_Host(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_PickupDirectoryLocation(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_Port(
      This : access Typ;
      value : Integer);
   procedure set_Timeout(
      This : access Typ;
      value : Integer);
   procedure set_UseDefaultCredentials(
      This : access Typ;
      value : Standard.Boolean);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_SmtpClient);
   pragma Import(MSIL,add_SendCompleted,"add_SendCompleted");
   pragma Import(MSIL,get_ClientCertificates,"get_ClientCertificates");
   pragma Import(MSIL,get_Credentials,"get_Credentials");
   pragma Import(MSIL,get_DeliveryMethod,"get_DeliveryMethod");
   pragma Import(MSIL,get_EnableSsl,"get_EnableSsl");
   pragma Import(MSIL,get_Host,"get_Host");
   pragma Import(MSIL,get_PickupDirectoryLocation,"get_PickupDirectoryLocation");
   pragma Import(MSIL,get_Port,"get_Port");
   pragma Import(MSIL,get_ServicePoint,"get_ServicePoint");
   pragma Import(MSIL,get_Timeout,"get_Timeout");
   pragma Import(MSIL,get_UseDefaultCredentials,"get_UseDefaultCredentials");
   pragma Import(MSIL,remove_SendCompleted,"remove_SendCompleted");
   pragma Import(MSIL,Send,"Send");
   pragma Import(MSIL,SendAsync,"SendAsync");
   pragma Import(MSIL,SendAsyncCancel,"SendAsyncCancel");
   pragma Import(MSIL,set_Credentials,"set_Credentials");
   pragma Import(MSIL,set_DeliveryMethod,"set_DeliveryMethod");
   pragma Import(MSIL,set_EnableSsl,"set_EnableSsl");
   pragma Import(MSIL,set_Host,"set_Host");
   pragma Import(MSIL,set_PickupDirectoryLocation,"set_PickupDirectoryLocation");
   pragma Import(MSIL,set_Port,"set_Port");
   pragma Import(MSIL,set_Timeout,"set_Timeout");
   pragma Import(MSIL,set_UseDefaultCredentials,"set_UseDefaultCredentials");
end MSSyst.Net.Mail.SmtpClient;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Net.Mail.SmtpClient,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Net.Mail.SmtpClient");
