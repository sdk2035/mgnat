-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.MarshalByRefObject;
with type MSSyst.AppDomain.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Security.Policy.Evidence.Ref is access;
with type MSSyst.AppDomainSetup.Ref is access;
with type MSSyst.Runtime.Remoting.ObjRef.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Object.Ref is access;
with type MSSyst.Runtime.Hosting.ApplicationActivator.Ref is access;
with type MSSyst.Reflection.Assembly.Ref is access;
with type MSSyst.Threading.HostExecutionContextManager.Ref is access;
with type MSSyst.Security.HostSecurityManager.Ref is access;
with MSSyst.AppDomainManagerInitializationOptions;
package MSSyst.AppDomainManager is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.MarshalByRefObject.Typ   with record
      null;
   end record;
   function new_AppDomainManager(
      This : Ref := null) return Ref;
   function CreateDomain(
      This : access Typ;
      friendlyName : MSSyst.String.Ref;
      securityInfo : MSSyst.Security.Policy.Evidence.Ref;
      appDomainInfo : MSSyst.AppDomainSetup.Ref) return MSSyst.AppDomain.Ref;
   function get_ApplicationActivator(
      This : access Typ) return MSSyst.Runtime.Hosting.ApplicationActivator.Ref;
   function get_EntryAssembly(
      This : access Typ) return MSSyst.Reflection.Assembly.Ref;
   function get_HostExecutionContextManager(
      This : access Typ) return MSSyst.Threading.HostExecutionContextManager.Ref;
   function get_HostSecurityManager(
      This : access Typ) return MSSyst.Security.HostSecurityManager.Ref;
   function get_InitializationFlags(
      This : access Typ) return MSSyst.AppDomainManagerInitializationOptions.Valuetype;
   procedure InitializeNewDomain(
      This : access Typ;
      appDomainInfo : MSSyst.AppDomainSetup.Ref);
   procedure set_InitializationFlags(
      This : access Typ;
      value : MSSyst.AppDomainManagerInitializationOptions.Valuetype);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_AppDomainManager);
   pragma Import(MSIL,CreateDomain,"CreateDomain");
   pragma Import(MSIL,get_ApplicationActivator,"get_ApplicationActivator");
   pragma Import(MSIL,get_EntryAssembly,"get_EntryAssembly");
   pragma Import(MSIL,get_HostExecutionContextManager,"get_HostExecutionContextManager");
   pragma Import(MSIL,get_HostSecurityManager,"get_HostSecurityManager");
   pragma Import(MSIL,get_InitializationFlags,"get_InitializationFlags");
   pragma Import(MSIL,InitializeNewDomain,"InitializeNewDomain");
   pragma Import(MSIL,set_InitializationFlags,"set_InitializationFlags");
end MSSyst.AppDomainManager;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.AppDomainManager,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.AppDomainManager");
