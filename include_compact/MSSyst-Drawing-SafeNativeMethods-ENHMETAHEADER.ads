-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.Drawing.SafeNativeMethods.ENHMETAHEADER is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ   with record
      iType : Integer;
      pragma Import(MSIL,iType,"iType");
      nSize : Integer;
      pragma Import(MSIL,nSize,"nSize");
      rclBounds_left : Integer;
      pragma Import(MSIL,rclBounds_left,"rclBounds_left");
      rclBounds_top : Integer;
      pragma Import(MSIL,rclBounds_top,"rclBounds_top");
      rclBounds_right : Integer;
      pragma Import(MSIL,rclBounds_right,"rclBounds_right");
      rclBounds_bottom : Integer;
      pragma Import(MSIL,rclBounds_bottom,"rclBounds_bottom");
      rclFrame_left : Integer;
      pragma Import(MSIL,rclFrame_left,"rclFrame_left");
      rclFrame_top : Integer;
      pragma Import(MSIL,rclFrame_top,"rclFrame_top");
      rclFrame_right : Integer;
      pragma Import(MSIL,rclFrame_right,"rclFrame_right");
      rclFrame_bottom : Integer;
      pragma Import(MSIL,rclFrame_bottom,"rclFrame_bottom");
      dSignature : Integer;
      pragma Import(MSIL,dSignature,"dSignature");
      nVersion : Integer;
      pragma Import(MSIL,nVersion,"nVersion");
      nBytes : Integer;
      pragma Import(MSIL,nBytes,"nBytes");
      nRecords : Integer;
      pragma Import(MSIL,nRecords,"nRecords");
      nHandles : MSIL_Types.int16;
      pragma Import(MSIL,nHandles,"nHandles");
      sReserved : MSIL_Types.int16;
      pragma Import(MSIL,sReserved,"sReserved");
      nDescription : Integer;
      pragma Import(MSIL,nDescription,"nDescription");
      offDescription : Integer;
      pragma Import(MSIL,offDescription,"offDescription");
      nPalEntries : Integer;
      pragma Import(MSIL,nPalEntries,"nPalEntries");
      szlDevice_cx : Integer;
      pragma Import(MSIL,szlDevice_cx,"szlDevice_cx");
      szlDevice_cy : Integer;
      pragma Import(MSIL,szlDevice_cy,"szlDevice_cy");
      szlMillimeters_cx : Integer;
      pragma Import(MSIL,szlMillimeters_cx,"szlMillimeters_cx");
      szlMillimeters_cy : Integer;
      pragma Import(MSIL,szlMillimeters_cy,"szlMillimeters_cy");
      cbPixelFormat : Integer;
      pragma Import(MSIL,cbPixelFormat,"cbPixelFormat");
      offPixelFormat : Integer;
      pragma Import(MSIL,offPixelFormat,"offPixelFormat");
      bOpenGL : Integer;
      pragma Import(MSIL,bOpenGL,"bOpenGL");
   end record;
   function new_ENHMETAHEADER(
      This : Ref := null) return Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_ENHMETAHEADER);
end MSSyst.Drawing.SafeNativeMethods.ENHMETAHEADER;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Drawing.SafeNativeMethods.ENHMETAHEADER,
   ".ver 2:0:0:0 .publickeytoken=( b0 3f 5f 7f 11 d5 0a 3a )",
   "[System.Drawing]System.Drawing.SafeNativeMethods/ENHMETAHEADER");
