-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with type MSSyst.String.Ref is access;
with type MSSyst.Type_k.Ref is access;
package MSSyst.IO.Path is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is abstract new MSSyst.Object.Typ   with record
      null;
   end record;
   DirectorySeparatorChar : Wide_Character;
   pragma Import(MSIL,DirectorySeparatorChar,"DirectorySeparatorChar");
   AltDirectorySeparatorChar : Wide_Character;
   pragma Import(MSIL,AltDirectorySeparatorChar,"AltDirectorySeparatorChar");
   VolumeSeparatorChar : Wide_Character;
   pragma Import(MSIL,VolumeSeparatorChar,"VolumeSeparatorChar");
   InvalidPathChars : MSIL_Types.Char_Array;
   pragma Import(MSIL,InvalidPathChars,"InvalidPathChars");
   PathSeparator : Wide_Character;
   pragma Import(MSIL,PathSeparator,"PathSeparator");
   function ChangeExtension(
      path : MSSyst.String.Ref;
      extension : MSSyst.String.Ref) return MSSyst.String.Ref;
   function Combine(
      path1 : MSSyst.String.Ref;
      path2 : MSSyst.String.Ref) return MSSyst.String.Ref;
   function GetDirectoryName(
      path : MSSyst.String.Ref) return MSSyst.String.Ref;
   function GetExtension(
      path : MSSyst.String.Ref) return MSSyst.String.Ref;
   function GetFileName(
      path : MSSyst.String.Ref) return MSSyst.String.Ref;
   function GetFileNameWithoutExtension(
      path : MSSyst.String.Ref) return MSSyst.String.Ref;
   function GetFullPath(
      path : MSSyst.String.Ref) return MSSyst.String.Ref;
   function GetInvalidFileNameChars return MSIL_Types.Char_Array;
   function GetInvalidPathChars return MSIL_Types.Char_Array;
   function GetPathRoot(
      path : MSSyst.String.Ref) return MSSyst.String.Ref;
   function GetRandomFileName return MSSyst.String.Ref;
   function GetTempFileName return MSSyst.String.Ref;
   function GetTempPath return MSSyst.String.Ref;
   function HasExtension(
      path : MSSyst.String.Ref) return Standard.Boolean;
   function IsPathRooted(
      path : MSSyst.String.Ref) return Standard.Boolean;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,ChangeExtension,"ChangeExtension");
   pragma Import(MSIL,Combine,"Combine");
   pragma Import(MSIL,GetDirectoryName,"GetDirectoryName");
   pragma Import(MSIL,GetExtension,"GetExtension");
   pragma Import(MSIL,GetFileName,"GetFileName");
   pragma Import(MSIL,GetFileNameWithoutExtension,"GetFileNameWithoutExtension");
   pragma Import(MSIL,GetFullPath,"GetFullPath");
   pragma Import(MSIL,GetInvalidFileNameChars,"GetInvalidFileNameChars");
   pragma Import(MSIL,GetInvalidPathChars,"GetInvalidPathChars");
   pragma Import(MSIL,GetPathRoot,"GetPathRoot");
   pragma Import(MSIL,GetRandomFileName,"GetRandomFileName");
   pragma Import(MSIL,GetTempFileName,"GetTempFileName");
   pragma Import(MSIL,GetTempPath,"GetTempPath");
   pragma Import(MSIL,HasExtension,"HasExtension");
   pragma Import(MSIL,IsPathRooted,"IsPathRooted");
end MSSyst.IO.Path;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.IO.Path,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.IO.Path");
