-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.MarshalByRefObject;
with MSSyst.Runtime.Remoting.Lifetime.ISponsor;
with type MSSyst.Runtime.Remoting.ObjRef.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Object.Ref is access;
with type MSSyst.TimeSpan.Valuetype is tagged;
with type MSSyst.Runtime.Remoting.Lifetime.ILease.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.Runtime.Remoting.Lifetime.ClientSponsor is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.MarshalByRefObject.Typ
         and MSSyst.Runtime.Remoting.Lifetime.ISponsor.Typ
   with record
      null;
   end record;
   function new_ClientSponsor(
      This : Ref := null) return Ref;
   function new_ClientSponsor(
      This : Ref := null;
      renewalTime : MSSyst.TimeSpan.Valuetype) return Ref;
   procedure Close(
      This : access Typ);
   function get_RenewalTime(
      This : access Typ) return MSSyst.TimeSpan.Valuetype;
   function InitializeLifetimeService(
      This : access Typ) return MSSyst.Object.Ref;
   function Register(
      This : access Typ;
      obj : MSSyst.MarshalByRefObject.Ref) return Standard.Boolean;
   function Renewal(
      This : access Typ;
      lease : MSSyst.Runtime.Remoting.Lifetime.ILease.Ref) return MSSyst.TimeSpan.Valuetype;
   procedure set_RenewalTime(
      This : access Typ;
      value : MSSyst.TimeSpan.Valuetype);
   procedure Unregister(
      This : access Typ;
      obj : MSSyst.MarshalByRefObject.Ref);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_ClientSponsor);
   pragma Import(MSIL,Close,"Close");
   pragma Import(MSIL,get_RenewalTime,"get_RenewalTime");
   pragma Import(MSIL,InitializeLifetimeService,"InitializeLifetimeService");
   pragma Import(MSIL,Register,"Register");
   pragma Import(MSIL,Renewal,"Renewal");
   pragma Import(MSIL,set_RenewalTime,"set_RenewalTime");
   pragma Import(MSIL,Unregister,"Unregister");
end MSSyst.Runtime.Remoting.Lifetime.ClientSponsor;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Runtime.Remoting.Lifetime.ClientSponsor,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Runtime.Remoting.Lifetime.ClientSponsor");
