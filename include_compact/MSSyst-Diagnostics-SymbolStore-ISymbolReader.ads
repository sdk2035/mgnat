-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.Diagnostics.SymbolStore.SymbolToken.Valuetype is tagged;
with type MSSyst.Diagnostics.SymbolStore.ISymbolDocument.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Guid.Valuetype is tagged;
with type MSSyst.Diagnostics.SymbolStore.ISymbolDocument.Ref_array is access;
with type MSSyst.Diagnostics.SymbolStore.ISymbolVariable.Ref_array is access;
with type MSSyst.Diagnostics.SymbolStore.ISymbolMethod.Ref is access;
with type MSSyst.Diagnostics.SymbolStore.ISymbolNamespace.Ref_array is access;
package MSSyst.Diagnostics.SymbolStore.ISymbolReader is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is interface;
   function get_UserEntryPoint(
      This : access Typ) return MSSyst.Diagnostics.SymbolStore.SymbolToken.Valuetype is abstract;
   function GetDocument(
      This : access Typ;
      url : MSSyst.String.Ref;
      language : MSSyst.Guid.Valuetype;
      languageVendor : MSSyst.Guid.Valuetype;
      documentType : MSSyst.Guid.Valuetype) return MSSyst.Diagnostics.SymbolStore.ISymbolDocument.Ref is abstract;
   function GetDocuments(
      This : access Typ) return MSSyst.Diagnostics.SymbolStore.ISymbolDocument.Ref_array is abstract;
   function GetGlobalVariables(
      This : access Typ) return MSSyst.Diagnostics.SymbolStore.ISymbolVariable.Ref_array is abstract;
   function GetMethod(
      This : access Typ;
      method : MSSyst.Diagnostics.SymbolStore.SymbolToken.Valuetype;
      version : Integer) return MSSyst.Diagnostics.SymbolStore.ISymbolMethod.Ref is abstract;
   function GetMethod(
      This : access Typ;
      method : MSSyst.Diagnostics.SymbolStore.SymbolToken.Valuetype) return MSSyst.Diagnostics.SymbolStore.ISymbolMethod.Ref is abstract;
   function GetMethodFromDocumentPosition(
      This : access Typ;
      document : MSSyst.Diagnostics.SymbolStore.ISymbolDocument.Ref;
      line : Integer;
      column : Integer) return MSSyst.Diagnostics.SymbolStore.ISymbolMethod.Ref is abstract;
   function GetNamespaces(
      This : access Typ) return MSSyst.Diagnostics.SymbolStore.ISymbolNamespace.Ref_array is abstract;
   function GetSymAttribute(
      This : access Typ;
      parent : MSSyst.Diagnostics.SymbolStore.SymbolToken.Valuetype;
      name : MSSyst.String.Ref) return MSIL_Types.unsigned_int8_Array is abstract;
   function GetVariables(
      This : access Typ;
      parent : MSSyst.Diagnostics.SymbolStore.SymbolToken.Valuetype) return MSSyst.Diagnostics.SymbolStore.ISymbolVariable.Ref_array is abstract;
private
   pragma Import(MSIL,get_UserEntryPoint,"get_UserEntryPoint");
   pragma Import(MSIL,GetDocument,"GetDocument");
   pragma Import(MSIL,GetDocuments,"GetDocuments");
   pragma Import(MSIL,GetGlobalVariables,"GetGlobalVariables");
   pragma Import(MSIL,GetMethod,"GetMethod");
   pragma Import(MSIL,GetMethodFromDocumentPosition,"GetMethodFromDocumentPosition");
   pragma Import(MSIL,GetNamespaces,"GetNamespaces");
   pragma Import(MSIL,GetSymAttribute,"GetSymAttribute");
   pragma Import(MSIL,GetVariables,"GetVariables");
end MSSyst.Diagnostics.SymbolStore.ISymbolReader;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Diagnostics.SymbolStore.ISymbolReader,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Diagnostics.SymbolStore.ISymbolReader");
