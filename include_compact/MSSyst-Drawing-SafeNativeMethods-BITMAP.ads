-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.Drawing.SafeNativeMethods.BITMAP is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ   with record
      bmType : Integer;
      pragma Import(MSIL,bmType,"bmType");
      bmWidth : Integer;
      pragma Import(MSIL,bmWidth,"bmWidth");
      bmHeight : Integer;
      pragma Import(MSIL,bmHeight,"bmHeight");
      bmWidthBytes : Integer;
      pragma Import(MSIL,bmWidthBytes,"bmWidthBytes");
      bmPlanes : MSIL_Types.int16;
      pragma Import(MSIL,bmPlanes,"bmPlanes");
      bmBitsPixel : MSIL_Types.int16;
      pragma Import(MSIL,bmBitsPixel,"bmBitsPixel");
      bmBits : MSIL_Types.native_int;
      pragma Import(MSIL,bmBits,"bmBits");
   end record;
   function new_BITMAP(
      This : Ref := null) return Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_BITMAP);
end MSSyst.Drawing.SafeNativeMethods.BITMAP;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Drawing.SafeNativeMethods.BITMAP,
   ".ver 2:0:0:0 .publickeytoken=( b0 3f 5f 7f 11 d5 0a 3a )",
   "[System.Drawing]System.Drawing.SafeNativeMethods/BITMAP");
