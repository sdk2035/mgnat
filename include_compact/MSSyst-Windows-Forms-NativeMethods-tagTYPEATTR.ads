-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with type MSSyst.Guid.Valuetype is tagged;
with type MSSyst.Windows.Forms.NativeMethods.tagIDLDESC.Valuetype is tagged;
with type MSSyst.Windows.Forms.NativeMethods.tagTYPEDESC.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.Windows.Forms.NativeMethods.tagTYPEATTR is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ   with record
      guid : MSSyst.Guid.Valuetype;
      pragma Import(MSIL,guid,"guid");
      lcid : Integer;
      pragma Import(MSIL,lcid,"lcid");
      dwReserved : Integer;
      pragma Import(MSIL,dwReserved,"dwReserved");
      memidConstructor : Integer;
      pragma Import(MSIL,memidConstructor,"memidConstructor");
      memidDestructor : Integer;
      pragma Import(MSIL,memidDestructor,"memidDestructor");
      lpstrSchema : MSIL_Types.native_int;
      pragma Import(MSIL,lpstrSchema,"lpstrSchema");
      cbSizeInstance : Integer;
      pragma Import(MSIL,cbSizeInstance,"cbSizeInstance");
      typekind : Integer;
      pragma Import(MSIL,typekind,"typekind");
      cFuncs : MSIL_Types.int16;
      pragma Import(MSIL,cFuncs,"cFuncs");
      cVars : MSIL_Types.int16;
      pragma Import(MSIL,cVars,"cVars");
      cImplTypes : MSIL_Types.int16;
      pragma Import(MSIL,cImplTypes,"cImplTypes");
      cbSizeVft : MSIL_Types.int16;
      pragma Import(MSIL,cbSizeVft,"cbSizeVft");
      cbAlignment : MSIL_Types.int16;
      pragma Import(MSIL,cbAlignment,"cbAlignment");
      wTypeFlags : MSIL_Types.int16;
      pragma Import(MSIL,wTypeFlags,"wTypeFlags");
      wMajorVerNum : MSIL_Types.int16;
      pragma Import(MSIL,wMajorVerNum,"wMajorVerNum");
      wMinorVerNum : MSIL_Types.int16;
      pragma Import(MSIL,wMinorVerNum,"wMinorVerNum");
      tdescAlias_unionMember : Integer;
      pragma Import(MSIL,tdescAlias_unionMember,"tdescAlias_unionMember");
      tdescAlias_vt : MSIL_Types.int16;
      pragma Import(MSIL,tdescAlias_vt,"tdescAlias_vt");
      idldescType_dwReserved : Integer;
      pragma Import(MSIL,idldescType_dwReserved,"idldescType_dwReserved");
      idldescType_wIDLFlags : MSIL_Types.int16;
      pragma Import(MSIL,idldescType_wIDLFlags,"idldescType_wIDLFlags");
   end record;
   function new_tagTYPEATTR(
      This : Ref := null) return Ref;
   function Get_idldescType(
      This : access Typ) return MSSyst.Windows.Forms.NativeMethods.tagIDLDESC.Valuetype;
   function Get_tdescAlias(
      This : access Typ) return MSSyst.Windows.Forms.NativeMethods.tagTYPEDESC.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_tagTYPEATTR);
   pragma Import(MSIL,Get_idldescType,"Get_idldescType");
   pragma Import(MSIL,Get_tdescAlias,"Get_tdescAlias");
end MSSyst.Windows.Forms.NativeMethods.tagTYPEATTR;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Windows.Forms.NativeMethods.tagTYPEATTR,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System.Windows.Forms]System.Windows.Forms.NativeMethods/tagTYPEATTR");
