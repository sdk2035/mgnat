-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with type MSSyst.String.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.Globalization.CultureInfo.Ref is access;
with type MSSyst.Resources.ResourceSet.Ref is access;
with type MSSyst.IO.UnmanagedMemoryStream.Ref is access;
with type MSSyst.Reflection.Assembly.Ref is access;
package MSSyst.Resources.ResourceManager is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   MagicNumber : Integer;
   pragma Import(MSIL,MagicNumber,"MagicNumber");
   HeaderVersionNumber : Integer;
   pragma Import(MSIL,HeaderVersionNumber,"HeaderVersionNumber");
   function new_ResourceManager(
      This : Ref := null;
      baseName : MSSyst.String.Ref;
      assembly : MSSyst.Reflection.Assembly.Ref) return Ref;
   function new_ResourceManager(
      This : Ref := null;
      baseName : MSSyst.String.Ref;
      assembly : MSSyst.Reflection.Assembly.Ref;
      usingResourceSet : MSSyst.Type_k.Ref) return Ref;
   function new_ResourceManager(
      This : Ref := null;
      resourceSource : MSSyst.Type_k.Ref) return Ref;
   function CreateFileBasedResourceManager(
      baseName : MSSyst.String.Ref;
      resourceDir : MSSyst.String.Ref;
      usingResourceSet : MSSyst.Type_k.Ref) return MSSyst.Resources.ResourceManager.Ref;
   function get_BaseName(
      This : access Typ) return MSSyst.String.Ref;
   function get_IgnoreCase(
      This : access Typ) return Standard.Boolean;
   function get_ResourceSetType(
      This : access Typ) return MSSyst.Type_k.Ref;
   function GetObject(
      This : access Typ;
      name : MSSyst.String.Ref) return MSSyst.Object.Ref;
   function GetObject(
      This : access Typ;
      name : MSSyst.String.Ref;
      culture : MSSyst.Globalization.CultureInfo.Ref) return MSSyst.Object.Ref;
   function GetResourceSet(
      This : access Typ;
      culture : MSSyst.Globalization.CultureInfo.Ref;
      createIfNotExists : Standard.Boolean;
      tryParents : Standard.Boolean) return MSSyst.Resources.ResourceSet.Ref;
   function GetStream(
      This : access Typ;
      name : MSSyst.String.Ref;
      culture : MSSyst.Globalization.CultureInfo.Ref) return MSSyst.IO.UnmanagedMemoryStream.Ref;
   function GetStream(
      This : access Typ;
      name : MSSyst.String.Ref) return MSSyst.IO.UnmanagedMemoryStream.Ref;
   function GetString(
      This : access Typ;
      name : MSSyst.String.Ref;
      culture : MSSyst.Globalization.CultureInfo.Ref) return MSSyst.String.Ref;
   function GetString(
      This : access Typ;
      name : MSSyst.String.Ref) return MSSyst.String.Ref;
   procedure ReleaseAllResources(
      This : access Typ);
   procedure set_IgnoreCase(
      This : access Typ;
      value : Standard.Boolean);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_ResourceManager);
   pragma Import(MSIL,CreateFileBasedResourceManager,"CreateFileBasedResourceManager");
   pragma Import(MSIL,get_BaseName,"get_BaseName");
   pragma Import(MSIL,get_IgnoreCase,"get_IgnoreCase");
   pragma Import(MSIL,get_ResourceSetType,"get_ResourceSetType");
   pragma Import(MSIL,GetObject,"GetObject");
   pragma Import(MSIL,GetResourceSet,"GetResourceSet");
   pragma Import(MSIL,GetStream,"GetStream");
   pragma Import(MSIL,GetString,"GetString");
   pragma Import(MSIL,ReleaseAllResources,"ReleaseAllResources");
   pragma Import(MSIL,set_IgnoreCase,"set_IgnoreCase");
end MSSyst.Resources.ResourceManager;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Resources.ResourceManager,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Resources.ResourceManager");
