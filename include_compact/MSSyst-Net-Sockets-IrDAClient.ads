-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with type MSSyst.String.Ref is access;
with type MSSyst.Net.IrDAEndPoint.Ref is access;
with type MSSyst.Net.Sockets.IrDADeviceInfo.Ref_array is access;
with type MSSyst.Net.Sockets.Socket.Ref is access;
with type MSSyst.IO.Stream.Ref is access;
with type MSSyst.Type_k.Ref is access;
package MSSyst.Net.Sockets.IrDAClient is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   function new_IrDAClient(
      This : Ref := null) return Ref;
   function new_IrDAClient(
      This : Ref := null;
      service : MSSyst.String.Ref) return Ref;
   function new_IrDAClient(
      This : Ref := null;
      remoteEP : MSSyst.Net.IrDAEndPoint.Ref) return Ref;
   procedure Close(
      This : access Typ);
   procedure Connect(
      This : access Typ;
      service : MSSyst.String.Ref);
   procedure Connect(
      This : access Typ;
      remoteEP : MSSyst.Net.IrDAEndPoint.Ref);
   function DiscoverDevices(
      This : access Typ;
      maxDevices : Integer) return MSSyst.Net.Sockets.IrDADeviceInfo.Ref_array;
   function DiscoverDevices(
      maxDevices : Integer;
      irdaSocket : MSSyst.Net.Sockets.Socket.Ref) return MSSyst.Net.Sockets.IrDADeviceInfo.Ref_array;
   function get_RemoteMachineName(
      This : access Typ) return MSSyst.String.Ref;
   function GetRemoteMachineName(
      s : MSSyst.Net.Sockets.Socket.Ref) return MSSyst.String.Ref;
   function GetStream(
      This : access Typ) return MSSyst.IO.Stream.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_IrDAClient);
   pragma Import(MSIL,Close,"Close");
   pragma Import(MSIL,Connect,"Connect");
   pragma Import(MSIL,DiscoverDevices,"DiscoverDevices");
   pragma Import(MSIL,get_RemoteMachineName,"get_RemoteMachineName");
   pragma Import(MSIL,GetRemoteMachineName,"GetRemoteMachineName");
   pragma Import(MSIL,GetStream,"GetStream");
end MSSyst.Net.Sockets.IrDAClient;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Net.Sockets.IrDAClient,
   ".ver 2:0:0:0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[System.Net.IrDA]System.Net.Sockets.IrDAClient");
