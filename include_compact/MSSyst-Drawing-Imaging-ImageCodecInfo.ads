-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with type MSSyst.Guid.Valuetype is tagged;
with type MSSyst.String.Ref is access;
with MSSyst.Drawing.Imaging.ImageCodecFlags;
with type MSSyst.Drawing.Imaging.ImageCodecInfo.Ref_array is access;
with type MSSyst.Type_k.Ref is access;
package MSSyst.Drawing.Imaging.ImageCodecInfo is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   function get_Clsid(
      This : access Typ) return MSSyst.Guid.Valuetype;
   function get_CodecName(
      This : access Typ) return MSSyst.String.Ref;
   function get_DllName(
      This : access Typ) return MSSyst.String.Ref;
   function get_FilenameExtension(
      This : access Typ) return MSSyst.String.Ref;
   function get_Flags(
      This : access Typ) return MSSyst.Drawing.Imaging.ImageCodecFlags.Valuetype;
   function get_FormatDescription(
      This : access Typ) return MSSyst.String.Ref;
   function get_FormatID(
      This : access Typ) return MSSyst.Guid.Valuetype;
   function get_MimeType(
      This : access Typ) return MSSyst.String.Ref;
   function get_SignatureMasks(
      This : access Typ) return MSIL_Types.unsigned_int8_Array_Array;
   function get_SignaturePatterns(
      This : access Typ) return MSIL_Types.unsigned_int8_Array_Array;
   function get_Version(
      This : access Typ) return Integer;
   function GetImageDecoders return MSSyst.Drawing.Imaging.ImageCodecInfo.Ref_array;
   function GetImageEncoders return MSSyst.Drawing.Imaging.ImageCodecInfo.Ref_array;
   procedure set_Clsid(
      This : access Typ;
      value : MSSyst.Guid.Valuetype);
   procedure set_CodecName(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_DllName(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_FilenameExtension(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_Flags(
      This : access Typ;
      value : MSSyst.Drawing.Imaging.ImageCodecFlags.Valuetype);
   procedure set_FormatDescription(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_FormatID(
      This : access Typ;
      value : MSSyst.Guid.Valuetype);
   procedure set_MimeType(
      This : access Typ;
      value : MSSyst.String.Ref);
   procedure set_SignatureMasks(
      This : access Typ;
      value : MSIL_Types.unsigned_int8_Array_Array);
   procedure set_SignaturePatterns(
      This : access Typ;
      value : MSIL_Types.unsigned_int8_Array_Array);
   procedure set_Version(
      This : access Typ;
      value : Integer);
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,get_Clsid,"get_Clsid");
   pragma Import(MSIL,get_CodecName,"get_CodecName");
   pragma Import(MSIL,get_DllName,"get_DllName");
   pragma Import(MSIL,get_FilenameExtension,"get_FilenameExtension");
   pragma Import(MSIL,get_Flags,"get_Flags");
   pragma Import(MSIL,get_FormatDescription,"get_FormatDescription");
   pragma Import(MSIL,get_FormatID,"get_FormatID");
   pragma Import(MSIL,get_MimeType,"get_MimeType");
   pragma Import(MSIL,get_SignatureMasks,"get_SignatureMasks");
   pragma Import(MSIL,get_SignaturePatterns,"get_SignaturePatterns");
   pragma Import(MSIL,get_Version,"get_Version");
   pragma Import(MSIL,GetImageDecoders,"GetImageDecoders");
   pragma Import(MSIL,GetImageEncoders,"GetImageEncoders");
   pragma Import(MSIL,set_Clsid,"set_Clsid");
   pragma Import(MSIL,set_CodecName,"set_CodecName");
   pragma Import(MSIL,set_DllName,"set_DllName");
   pragma Import(MSIL,set_FilenameExtension,"set_FilenameExtension");
   pragma Import(MSIL,set_Flags,"set_Flags");
   pragma Import(MSIL,set_FormatDescription,"set_FormatDescription");
   pragma Import(MSIL,set_FormatID,"set_FormatID");
   pragma Import(MSIL,set_MimeType,"set_MimeType");
   pragma Import(MSIL,set_SignatureMasks,"set_SignatureMasks");
   pragma Import(MSIL,set_SignaturePatterns,"set_SignaturePatterns");
   pragma Import(MSIL,set_Version,"set_Version");
end MSSyst.Drawing.Imaging.ImageCodecInfo;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Drawing.Imaging.ImageCodecInfo,
   ".ver 2:0:0:0 .publickeytoken=( b0 3f 5f 7f 11 d5 0a 3a )",
   "[System.Drawing]System.Drawing.Imaging.ImageCodecInfo");
