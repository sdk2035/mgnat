-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.Object.Ref is access;
with type MSSyst.Type_k.Ref is access;
with MSSyst.TypeCode;
with type MSSyst.String.Ref is access;
with type MSSyst.IFormatProvider.Ref is access;
package MSSyst.Drawing.RotateFlipType is
   type ValueType is (
      RotateNoneFlipNone,
      Rotate270FlipXY,
      RotateNoneFlipXY,
      Rotate90FlipXY,
      Rotate180FlipY,
      Rotate270FlipY,
      RotateNoneFlipY,
      Rotate90FlipY);
   pragma Convention (MSIL, ValueType);
   for ValueType use (
      RotateNoneFlipNone =>  0,
      Rotate270FlipXY =>  1,
      RotateNoneFlipXY =>  2,
      Rotate90FlipXY =>  3,
      Rotate180FlipY =>  4,
      Rotate270FlipY =>  5,
      RotateNoneFlipY =>  6,
      Rotate90FlipY =>  7);
   type ValueType_Arr is array (Natural range <>) of ValueType; -- start at 0
   type ValueType_Array is access all ValueType_Arr;
   type ValueType_addrof is access all ValueType;
   type ValueType_array_addrof is access all ValueType_Array;
   Rotate180FlipXY : constant Valuetype := RotateNoneFlipNone;
   Rotate90FlipNone : constant Valuetype := Rotate270FlipXY;
   Rotate180FlipNone : constant Valuetype := RotateNoneFlipXY;
   Rotate270FlipNone : constant Valuetype := Rotate90FlipXY;
   RotateNoneFlipX : constant Valuetype := Rotate180FlipY;
   Rotate90FlipX : constant Valuetype := Rotate270FlipY;
   Rotate180FlipX : constant Valuetype := RotateNoneFlipY;
   Rotate270FlipX : constant Valuetype := Rotate90FlipY;
   function CompareTo(
      This : Valuetype;
      target : MSSyst.Object.Ref) return Integer;
   function Equals(
      This : Valuetype;
      obj : MSSyst.Object.Ref) return Standard.Boolean;
   function GetHashCode(
      This : Valuetype) return Integer;
   function GetType(
      This : Valuetype) return MSSyst.Type_k.Ref;
   function GetTypeCode(
      This : Valuetype) return MSSyst.TypeCode.Valuetype;
   function ToString(
      This : Valuetype;
      provider : MSSyst.IFormatProvider.Ref) return MSSyst.String.Ref;
   function ToString(
      This : Valuetype) return MSSyst.String.Ref;
   function ToString(
      This : Valuetype;
      format : MSSyst.String.Ref;
      provider : MSSyst.IFormatProvider.Ref) return MSSyst.String.Ref;
   function ToString(
      This : Valuetype;
      format : MSSyst.String.Ref) return MSSyst.String.Ref;
private
   pragma Import(MSIL,CompareTo,"CompareTo");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetType,"GetType");
   pragma Import(MSIL,GetTypeCode,"GetTypeCode");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Drawing.RotateFlipType;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Drawing.RotateFlipType,
   ".ver 2:0:0:0 .publickeytoken=( b0 3f 5f 7f 11 d5 0a 3a )",
   "[System.Drawing]System.Drawing.RotateFlipType");
