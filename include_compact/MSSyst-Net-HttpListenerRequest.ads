-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Object;
with type MSSyst.IAsyncResult.Ref is access;
with type MSSyst.AsyncCallback.Ref is access;
with type MSSyst.Security.Cryptography.X509Certificates.X509Certificate2.Ref is access;
with type MSSyst.String.Ref_array is access;
with type MSSyst.Text.Encoding.Ref is access;
with type MSSyst.String.Ref is access;
with type MSSyst.Net.CookieCollection.Ref is access;
with type MSSyst.Collections.Specialized.NameValueCollection.Ref is access;
with type MSSyst.IO.Stream.Ref is access;
with type MSSyst.Net.IPEndPoint.Ref is access;
with type MSSyst.Version.Ref is access;
with type MSSyst.Guid.Valuetype is tagged;
with type MSSyst.Uri.Ref is access;
with type MSSyst.Type_k.Ref is access;
package MSSyst.Net.HttpListenerRequest is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   function BeginGetClientCertificate(
      This : access Typ;
      requestCallback : MSSyst.AsyncCallback.Ref;
      state : MSSyst.Object.Ref) return MSSyst.IAsyncResult.Ref;
   function EndGetClientCertificate(
      This : access Typ;
      asyncResult : MSSyst.IAsyncResult.Ref) return MSSyst.Security.Cryptography.X509Certificates.X509Certificate2.Ref;
   function get_AcceptTypes(
      This : access Typ) return MSSyst.String.Ref_array;
   function get_ClientCertificateError(
      This : access Typ) return Integer;
   function get_ContentEncoding(
      This : access Typ) return MSSyst.Text.Encoding.Ref;
   function get_ContentLength64(
      This : access Typ) return Long_Long_Integer;
   function get_ContentType(
      This : access Typ) return MSSyst.String.Ref;
   function get_Cookies(
      This : access Typ) return MSSyst.Net.CookieCollection.Ref;
   function get_HasEntityBody(
      This : access Typ) return Standard.Boolean;
   function get_Headers(
      This : access Typ) return MSSyst.Collections.Specialized.NameValueCollection.Ref;
   function get_HttpMethod(
      This : access Typ) return MSSyst.String.Ref;
   function get_InputStream(
      This : access Typ) return MSSyst.IO.Stream.Ref;
   function get_IsAuthenticated(
      This : access Typ) return Standard.Boolean;
   function get_IsLocal(
      This : access Typ) return Standard.Boolean;
   function get_IsSecureConnection(
      This : access Typ) return Standard.Boolean;
   function get_KeepAlive(
      This : access Typ) return Standard.Boolean;
   function get_LocalEndPoint(
      This : access Typ) return MSSyst.Net.IPEndPoint.Ref;
   function get_ProtocolVersion(
      This : access Typ) return MSSyst.Version.Ref;
   function get_QueryString(
      This : access Typ) return MSSyst.Collections.Specialized.NameValueCollection.Ref;
   function get_RawUrl(
      This : access Typ) return MSSyst.String.Ref;
   function get_RemoteEndPoint(
      This : access Typ) return MSSyst.Net.IPEndPoint.Ref;
   function get_RequestTraceIdentifier(
      This : access Typ) return MSSyst.Guid.Valuetype;
   function get_Url(
      This : access Typ) return MSSyst.Uri.Ref;
   function get_UrlReferrer(
      This : access Typ) return MSSyst.Uri.Ref;
   function get_UserAgent(
      This : access Typ) return MSSyst.String.Ref;
   function get_UserHostAddress(
      This : access Typ) return MSSyst.String.Ref;
   function get_UserHostName(
      This : access Typ) return MSSyst.String.Ref;
   function get_UserLanguages(
      This : access Typ) return MSSyst.String.Ref_array;
   function GetClientCertificate(
      This : access Typ) return MSSyst.Security.Cryptography.X509Certificates.X509Certificate2.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,BeginGetClientCertificate,"BeginGetClientCertificate");
   pragma Import(MSIL,EndGetClientCertificate,"EndGetClientCertificate");
   pragma Import(MSIL,get_AcceptTypes,"get_AcceptTypes");
   pragma Import(MSIL,get_ClientCertificateError,"get_ClientCertificateError");
   pragma Import(MSIL,get_ContentEncoding,"get_ContentEncoding");
   pragma Import(MSIL,get_ContentLength64,"get_ContentLength64");
   pragma Import(MSIL,get_ContentType,"get_ContentType");
   pragma Import(MSIL,get_Cookies,"get_Cookies");
   pragma Import(MSIL,get_HasEntityBody,"get_HasEntityBody");
   pragma Import(MSIL,get_Headers,"get_Headers");
   pragma Import(MSIL,get_HttpMethod,"get_HttpMethod");
   pragma Import(MSIL,get_InputStream,"get_InputStream");
   pragma Import(MSIL,get_IsAuthenticated,"get_IsAuthenticated");
   pragma Import(MSIL,get_IsLocal,"get_IsLocal");
   pragma Import(MSIL,get_IsSecureConnection,"get_IsSecureConnection");
   pragma Import(MSIL,get_KeepAlive,"get_KeepAlive");
   pragma Import(MSIL,get_LocalEndPoint,"get_LocalEndPoint");
   pragma Import(MSIL,get_ProtocolVersion,"get_ProtocolVersion");
   pragma Import(MSIL,get_QueryString,"get_QueryString");
   pragma Import(MSIL,get_RawUrl,"get_RawUrl");
   pragma Import(MSIL,get_RemoteEndPoint,"get_RemoteEndPoint");
   pragma Import(MSIL,get_RequestTraceIdentifier,"get_RequestTraceIdentifier");
   pragma Import(MSIL,get_Url,"get_Url");
   pragma Import(MSIL,get_UrlReferrer,"get_UrlReferrer");
   pragma Import(MSIL,get_UserAgent,"get_UserAgent");
   pragma Import(MSIL,get_UserHostAddress,"get_UserHostAddress");
   pragma Import(MSIL,get_UserHostName,"get_UserHostName");
   pragma Import(MSIL,get_UserLanguages,"get_UserLanguages");
   pragma Import(MSIL,GetClientCertificate,"GetClientCertificate");
end MSSyst.Net.HttpListenerRequest;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Net.HttpListenerRequest,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Net.HttpListenerRequest");
