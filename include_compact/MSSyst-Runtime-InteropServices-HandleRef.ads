-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.ValueType;
with type MSSyst.Object.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.Runtime.InteropServices.HandleRef is
   type ValueType is new MSSyst.ValueType.Typ with null record;
   type ValueType_Arr is array (Natural range <>) of ValueType; -- start at 0
   type ValueType_Array is access all ValueType_Arr;
   type ValueType_addrof is access all ValueType;
   type ValueType_array_addrof is access all ValueType_Array;
   function new_HandleRef(
      wrapper : MSSyst.Object.Ref;
      handle : MSIL_Types.native_int) return Valuetype;
   function get_Handle(
      This : Valuetype) return MSIL_Types.native_int;
   function get_Wrapper(
      This : Valuetype) return MSSyst.Object.Ref;
   function op_Explicit(
      value : MSSyst.Runtime.InteropServices.HandleRef.Valuetype) return MSIL_Types.native_int;
   function ToIntPtr(
      value : MSSyst.Runtime.InteropServices.HandleRef.Valuetype) return MSIL_Types.native_int;
private
   pragma MSIL_Constructor(new_HandleRef);
   pragma Import(MSIL,get_Handle,"get_Handle");
   pragma Import(MSIL,get_Wrapper,"get_Wrapper");
   pragma Import(MSIL,op_Explicit,"op_Explicit");
   pragma Import(MSIL,ToIntPtr,"ToIntPtr");
end MSSyst.Runtime.InteropServices.HandleRef;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Runtime.InteropServices.HandleRef,
   ".ver 2.0.0.0 .publickeytoken=( 96 9d b8 05 3d 33 22 ac )",
   "[mscorlib]System.Runtime.InteropServices.HandleRef");
