-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Runtime.InteropServices.uMethodRental;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Reflection.Emit.MethodRental is
   type Typ is new MSSyst.Object.Typ
         and MSSyst.Runtime.InteropServices.uMethodRental.Typ
   with record
      null;
   end record;
   JitOnDemand : Integer;
   pragma Import(MSIL,JitOnDemand,"JitOnDemand");
   JitImmediate : Integer;
   pragma Import(MSIL,JitImmediate,"JitImmediate");
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure SwapMethodBody(
      cls : access MSSyst.Type_k.Typ'Class;
      methodtoken : Integer;
      rgIL : MSIL_Types.native_int;
      methodSize : Integer;
      flags : Integer);
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,SwapMethodBody,"SwapMethodBody");
end MSSyst.Reflection.Emit.MethodRental;
pragma Import(MSIL,MSSyst.Reflection.Emit.MethodRental,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Reflection.Emit.MethodRental");
