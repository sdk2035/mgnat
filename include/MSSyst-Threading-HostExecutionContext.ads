-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Threading.HostExecutionContext is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_HostExecutionContext(
      This : Ref := null) return Ref;
   function new_HostExecutionContext(
      This : Ref := null;
      state : access MSSyst.Object.Typ'Class) return Ref;
   function CreateCopy(
      This : access Typ) return access MSSyst.Threading.HostExecutionContext.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_HostExecutionContext);
   pragma Import(MSIL,CreateCopy,"CreateCopy");
end MSSyst.Threading.HostExecutionContext;
pragma Import(MSIL,MSSyst.Threading.HostExecutionContext,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Threading.HostExecutionContext");
