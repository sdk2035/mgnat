-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with Microsoft.Win32.RegistryHive;
limited with Microsoft.Win32.RegistryKeyPermissionCheck;
limited with Microsoft.Win32.RegistryValueKind;
limited with Microsoft.Win32.RegistryValueOptions;
with MSSyst.IDisposable;
with MSSyst.MarshalByRefObject;
limited with MSSyst.Runtime.Remoting.ObjRef;
limited with MSSyst.Security.AccessControl.AccessControlSections;
limited with MSSyst.Security.AccessControl.RegistryRights;
limited with MSSyst.Security.AccessControl.RegistrySecurity;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package Microsoft.Win32.RegistryKey is
   type Typ is new MSSyst.MarshalByRefObject.Typ
         and MSSyst.IDisposable.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure Close(
      This : access Typ);
   function CreateSubKey(
      This : access Typ;
      subkey : access MSSyst.String.Typ'Class) return access Microsoft.Win32.RegistryKey.Typ'Class;
   function CreateSubKey(
      This : access Typ;
      subkey : access MSSyst.String.Typ'Class;
      permissionCheck : Microsoft.Win32.RegistryKeyPermissionCheck.Valuetype) return access Microsoft.Win32.RegistryKey.Typ'Class;
   function CreateSubKey(
      This : access Typ;
      subkey : access MSSyst.String.Typ'Class;
      permissionCheck : Microsoft.Win32.RegistryKeyPermissionCheck.Valuetype;
      registrySecurity : access MSSyst.Security.AccessControl.RegistrySecurity.Typ'Class) return access Microsoft.Win32.RegistryKey.Typ'Class;
   procedure DeleteSubKey(
      This : access Typ;
      subkey : access MSSyst.String.Typ'Class);
   procedure DeleteSubKey(
      This : access Typ;
      subkey : access MSSyst.String.Typ'Class;
      throwOnMissingSubKey : Standard.Boolean);
   procedure DeleteSubKeyTree(
      This : access Typ;
      subkey : access MSSyst.String.Typ'Class);
   procedure DeleteValue(
      This : access Typ;
      name : access MSSyst.String.Typ'Class);
   procedure DeleteValue(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      throwOnMissingValue : Standard.Boolean);
   procedure Flush(
      This : access Typ);
   function get_Name(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_SubKeyCount(
      This : access Typ) return Integer;
   function get_ValueCount(
      This : access Typ) return Integer;
   function GetAccessControl(
      This : access Typ) return access MSSyst.Security.AccessControl.RegistrySecurity.Typ'Class;
   function GetAccessControl(
      This : access Typ;
      includeSections : MSSyst.Security.AccessControl.AccessControlSections.Valuetype) return access MSSyst.Security.AccessControl.RegistrySecurity.Typ'Class;
   function GetSubKeyNames(
      This : access Typ) return access MSSyst.String.Ref_arr;
   function GetValue(
      This : access Typ;
      name : access MSSyst.String.Typ'Class) return access MSSyst.Object.Typ'Class;
   function GetValue(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      defaultValue : access MSSyst.Object.Typ'Class) return access MSSyst.Object.Typ'Class;
   function GetValue(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      defaultValue : access MSSyst.Object.Typ'Class;
      options : Microsoft.Win32.RegistryValueOptions.Valuetype) return access MSSyst.Object.Typ'Class;
   function GetValueKind(
      This : access Typ;
      name : access MSSyst.String.Typ'Class) return Microsoft.Win32.RegistryValueKind.Valuetype;
   function GetValueNames(
      This : access Typ) return access MSSyst.String.Ref_arr;
   function OpenRemoteBaseKey(
      hKey : Microsoft.Win32.RegistryHive.Valuetype;
      machineName : access MSSyst.String.Typ'Class) return access Microsoft.Win32.RegistryKey.Typ'Class;
   function OpenSubKey(
      This : access Typ;
      name : access MSSyst.String.Typ'Class) return access Microsoft.Win32.RegistryKey.Typ'Class;
   function OpenSubKey(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      permissionCheck : Microsoft.Win32.RegistryKeyPermissionCheck.Valuetype;
      rights : MSSyst.Security.AccessControl.RegistryRights.Valuetype) return access Microsoft.Win32.RegistryKey.Typ'Class;
   function OpenSubKey(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      writable : Standard.Boolean) return access Microsoft.Win32.RegistryKey.Typ'Class;
   function OpenSubKey(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      permissionCheck : Microsoft.Win32.RegistryKeyPermissionCheck.Valuetype) return access Microsoft.Win32.RegistryKey.Typ'Class;
   procedure SetAccessControl(
      This : access Typ;
      registrySecurity : access MSSyst.Security.AccessControl.RegistrySecurity.Typ'Class);
   procedure SetValue(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      value : access MSSyst.Object.Typ'Class);
   procedure SetValue(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      value : access MSSyst.Object.Typ'Class;
      valueKind : Microsoft.Win32.RegistryValueKind.Valuetype);
   function ToString(
      This : access Typ) return access MSSyst.String.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,Close,"Close");
   pragma Import(MSIL,CreateSubKey,"CreateSubKey");
   pragma Import(MSIL,DeleteSubKey,"DeleteSubKey");
   pragma Import(MSIL,DeleteSubKeyTree,"DeleteSubKeyTree");
   pragma Import(MSIL,DeleteValue,"DeleteValue");
   pragma Import(MSIL,Flush,"Flush");
   pragma Import(MSIL,get_Name,"get_Name");
   pragma Import(MSIL,get_SubKeyCount,"get_SubKeyCount");
   pragma Import(MSIL,get_ValueCount,"get_ValueCount");
   pragma Import(MSIL,GetAccessControl,"GetAccessControl");
   pragma Import(MSIL,GetSubKeyNames,"GetSubKeyNames");
   pragma Import(MSIL,GetValue,"GetValue");
   pragma Import(MSIL,GetValueKind,"GetValueKind");
   pragma Import(MSIL,GetValueNames,"GetValueNames");
   pragma Import(MSIL,OpenRemoteBaseKey,"OpenRemoteBaseKey");
   pragma Import(MSIL,OpenSubKey,"OpenSubKey");
   pragma Import(MSIL,SetAccessControl,"SetAccessControl");
   pragma Import(MSIL,SetValue,"SetValue");
   pragma Import(MSIL,ToString,"ToString");
end Microsoft.Win32.RegistryKey;
pragma Import(MSIL,Microsoft.Win32.RegistryKey,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]Microsoft.Win32.RegistryKey");
