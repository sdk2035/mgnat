-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.String;
limited with MSSyst.TimeSpan;
limited with MSSyst.Type_k;
package MSSyst.Diagnostics.Stopwatch is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   Frequency : Long_Long_Integer;
   pragma Import(MSIL,Frequency,"Frequency");
   IsHighResolution : Standard.Boolean;
   pragma Import(MSIL,IsHighResolution,"IsHighResolution");
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_Stopwatch(
      This : Ref := null) return Ref;
   function get_Elapsed(
      This : access Typ) return MSSyst.TimeSpan.Valuetype;
   function get_ElapsedMilliseconds(
      This : access Typ) return Long_Long_Integer;
   function get_ElapsedTicks(
      This : access Typ) return Long_Long_Integer;
   function get_IsRunning(
      This : access Typ) return Standard.Boolean;
   function GetTimestamp return Long_Long_Integer;
   procedure Reset(
      This : access Typ);
   procedure Start(
      This : access Typ);
   function StartNew return access MSSyst.Diagnostics.Stopwatch.Typ'Class;
   procedure Stop(
      This : access Typ);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_Stopwatch);
   pragma Import(MSIL,get_Elapsed,"get_Elapsed");
   pragma Import(MSIL,get_ElapsedMilliseconds,"get_ElapsedMilliseconds");
   pragma Import(MSIL,get_ElapsedTicks,"get_ElapsedTicks");
   pragma Import(MSIL,get_IsRunning,"get_IsRunning");
   pragma Import(MSIL,GetTimestamp,"GetTimestamp");
   pragma Import(MSIL,Reset,"Reset");
   pragma Import(MSIL,Start,"Start");
   pragma Import(MSIL,StartNew,"StartNew");
   pragma Import(MSIL,Stop,"Stop");
end MSSyst.Diagnostics.Stopwatch;
pragma Import(MSIL,MSSyst.Diagnostics.Stopwatch,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Diagnostics.Stopwatch");
