-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Collections.Specialized.StringDictionary;
limited with MSSyst.Diagnostics.SourceLevels;
limited with MSSyst.Diagnostics.SourceSwitch;
limited with MSSyst.Diagnostics.TraceEventType;
limited with MSSyst.Diagnostics.TraceListenerCollection;
limited with MSSyst.Guid;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Diagnostics.TraceSource is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_TraceSource(
      This : Ref := null;
      name : access MSSyst.String.Typ'Class) return Ref;
   function new_TraceSource(
      This : Ref := null;
      name : access MSSyst.String.Typ'Class;
      defaultLevel : MSSyst.Diagnostics.SourceLevels.Valuetype) return Ref;
   procedure Close(
      This : access Typ);
   procedure Flush(
      This : access Typ);
   function get_Attributes(
      This : access Typ) return access MSSyst.Collections.Specialized.StringDictionary.Typ'Class;
   function get_Listeners(
      This : access Typ) return access MSSyst.Diagnostics.TraceListenerCollection.Typ'Class;
   function get_Name(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_Switch(
      This : access Typ) return access MSSyst.Diagnostics.SourceSwitch.Typ'Class;
   procedure set_Switch(
      This : access Typ;
      value : access MSSyst.Diagnostics.SourceSwitch.Typ'Class);
   procedure TraceData(
      This : access Typ;
      eventType : MSSyst.Diagnostics.TraceEventType.Valuetype;
      id : Integer;
      data : access MSSyst.Object.Typ'Class);
   procedure TraceData(
      This : access Typ;
      eventType : MSSyst.Diagnostics.TraceEventType.Valuetype;
      id : Integer;
      data : access MSSyst.Object.Ref_arr);
   procedure TraceEvent(
      This : access Typ;
      eventType : MSSyst.Diagnostics.TraceEventType.Valuetype;
      id : Integer);
   procedure TraceEvent(
      This : access Typ;
      eventType : MSSyst.Diagnostics.TraceEventType.Valuetype;
      id : Integer;
      message : access MSSyst.String.Typ'Class);
   procedure TraceEvent(
      This : access Typ;
      eventType : MSSyst.Diagnostics.TraceEventType.Valuetype;
      id : Integer;
      format : access MSSyst.String.Typ'Class;
      args : access MSSyst.Object.Ref_arr);
   procedure TraceInformation(
      This : access Typ;
      message : access MSSyst.String.Typ'Class);
   procedure TraceInformation(
      This : access Typ;
      format : access MSSyst.String.Typ'Class;
      args : access MSSyst.Object.Ref_arr);
   procedure TraceTransfer(
      This : access Typ;
      id : Integer;
      message : access MSSyst.String.Typ'Class;
      relatedActivityId : MSSyst.Guid.Valuetype);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_TraceSource);
   pragma Import(MSIL,Close,"Close");
   pragma Import(MSIL,Flush,"Flush");
   pragma Import(MSIL,get_Attributes,"get_Attributes");
   pragma Import(MSIL,get_Listeners,"get_Listeners");
   pragma Import(MSIL,get_Name,"get_Name");
   pragma Import(MSIL,get_Switch,"get_Switch");
   pragma Import(MSIL,set_Switch,"set_Switch");
   pragma Import(MSIL,TraceData,"TraceData");
   pragma Import(MSIL,TraceEvent,"TraceEvent");
   pragma Import(MSIL,TraceInformation,"TraceInformation");
   pragma Import(MSIL,TraceTransfer,"TraceTransfer");
end MSSyst.Diagnostics.TraceSource;
pragma Import(MSIL,MSSyst.Diagnostics.TraceSource,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Diagnostics.TraceSource");
