-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Drawing.CharacterRange;
limited with MSSyst.Drawing.StringAlignment;
limited with MSSyst.Drawing.StringDigitSubstitute;
limited with MSSyst.Drawing.StringFormatFlags;
limited with MSSyst.Drawing.StringTrimming;
limited with MSSyst.Drawing.Text.HotkeyPrefix;
with MSSyst.ICloneable;
with MSSyst.IDisposable;
with MSSyst.MarshalByRefObject;
limited with MSSyst.Runtime.Remoting.ObjRef;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Drawing.StringFormat is
   type Typ is new MSSyst.MarshalByRefObject.Typ
         and MSSyst.ICloneable.Typ
         and MSSyst.IDisposable.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_StringFormat(
      This : Ref := null) return Ref;
   function new_StringFormat(
      This : Ref := null;
      options : MSSyst.Drawing.StringFormatFlags.Valuetype) return Ref;
   function new_StringFormat(
      This : Ref := null;
      options : MSSyst.Drawing.StringFormatFlags.Valuetype;
      language : Integer) return Ref;
   function new_StringFormat(
      This : Ref := null;
      format : access MSSyst.Drawing.StringFormat.Typ'Class) return Ref;
   function Clone(
      This : access Typ) return access MSSyst.Object.Typ'Class;
   procedure Dispose(
      This : access Typ);
   function get_Alignment(
      This : access Typ) return MSSyst.Drawing.StringAlignment.Valuetype;
   function get_DigitSubstitutionLanguage(
      This : access Typ) return Integer;
   function get_DigitSubstitutionMethod(
      This : access Typ) return MSSyst.Drawing.StringDigitSubstitute.Valuetype;
   function get_FormatFlags(
      This : access Typ) return MSSyst.Drawing.StringFormatFlags.Valuetype;
   function get_GenericDefault return access MSSyst.Drawing.StringFormat.Typ'Class;
   function get_GenericTypographic return access MSSyst.Drawing.StringFormat.Typ'Class;
   function get_HotkeyPrefix(
      This : access Typ) return MSSyst.Drawing.Text.HotkeyPrefix.Valuetype;
   function get_LineAlignment(
      This : access Typ) return MSSyst.Drawing.StringAlignment.Valuetype;
   function get_Trimming(
      This : access Typ) return MSSyst.Drawing.StringTrimming.Valuetype;
   function GetTabStops(
      This : access Typ;
      firstTabOffset : MSIL_Types.Float32_addrof) return MSIL_Types.Float32_Array;
   procedure set_Alignment(
      This : access Typ;
      value : MSSyst.Drawing.StringAlignment.Valuetype);
   procedure set_FormatFlags(
      This : access Typ;
      value : MSSyst.Drawing.StringFormatFlags.Valuetype);
   procedure set_HotkeyPrefix(
      This : access Typ;
      value : MSSyst.Drawing.Text.HotkeyPrefix.Valuetype);
   procedure set_LineAlignment(
      This : access Typ;
      value : MSSyst.Drawing.StringAlignment.Valuetype);
   procedure set_Trimming(
      This : access Typ;
      value : MSSyst.Drawing.StringTrimming.Valuetype);
   procedure SetDigitSubstitution(
      This : access Typ;
      language : Integer;
      substitute : MSSyst.Drawing.StringDigitSubstitute.Valuetype);
   procedure SetMeasurableCharacterRanges(
      This : access Typ;
      ranges : access MSSyst.Drawing.CharacterRange.Valuetype_arr);
   procedure SetTabStops(
      This : access Typ;
      firstTabOffset : Float;
      tabStops : MSIL_Types.Float32_Arr);
   function ToString(
      This : access Typ) return access MSSyst.String.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_StringFormat);
   pragma Import(MSIL,Clone,"Clone");
   pragma Import(MSIL,Dispose,"Dispose");
   pragma Import(MSIL,get_Alignment,"get_Alignment");
   pragma Import(MSIL,get_DigitSubstitutionLanguage,"get_DigitSubstitutionLanguage");
   pragma Import(MSIL,get_DigitSubstitutionMethod,"get_DigitSubstitutionMethod");
   pragma Import(MSIL,get_FormatFlags,"get_FormatFlags");
   pragma Import(MSIL,get_GenericDefault,"get_GenericDefault");
   pragma Import(MSIL,get_GenericTypographic,"get_GenericTypographic");
   pragma Import(MSIL,get_HotkeyPrefix,"get_HotkeyPrefix");
   pragma Import(MSIL,get_LineAlignment,"get_LineAlignment");
   pragma Import(MSIL,get_Trimming,"get_Trimming");
   pragma Import(MSIL,GetTabStops,"GetTabStops");
   pragma Import(MSIL,set_Alignment,"set_Alignment");
   pragma Import(MSIL,set_FormatFlags,"set_FormatFlags");
   pragma Import(MSIL,set_HotkeyPrefix,"set_HotkeyPrefix");
   pragma Import(MSIL,set_LineAlignment,"set_LineAlignment");
   pragma Import(MSIL,set_Trimming,"set_Trimming");
   pragma Import(MSIL,SetDigitSubstitution,"SetDigitSubstitution");
   pragma Import(MSIL,SetMeasurableCharacterRanges,"SetMeasurableCharacterRanges");
   pragma Import(MSIL,SetTabStops,"SetTabStops");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Drawing.StringFormat;
pragma Import(MSIL,MSSyst.Drawing.StringFormat,
   ".ver 2:0:0:0 .publickeytoken=( b0 3f 5f 7f 11 d5 0a 3a )",
   "[System.Drawing]System.Drawing.StringFormat");
