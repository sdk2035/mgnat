-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.DateTime;
limited with MSSyst.Security.Cryptography.OidCollection;
limited with MSSyst.Security.Cryptography.X509Certificates.X509Certificate2Collection;
limited with MSSyst.Security.Cryptography.X509Certificates.X509RevocationFlag;
limited with MSSyst.Security.Cryptography.X509Certificates.X509RevocationMode;
limited with MSSyst.Security.Cryptography.X509Certificates.X509VerificationFlags;
limited with MSSyst.String;
limited with MSSyst.TimeSpan;
limited with MSSyst.Type_k;
package MSSyst.Security.Cryptography.X509Certificates.X509ChainPolicy is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_X509ChainPolicy(
      This : Ref := null) return Ref;
   function get_ApplicationPolicy(
      This : access Typ) return access MSSyst.Security.Cryptography.OidCollection.Typ'Class;
   function get_CertificatePolicy(
      This : access Typ) return access MSSyst.Security.Cryptography.OidCollection.Typ'Class;
   function get_ExtraStore(
      This : access Typ) return access MSSyst.Security.Cryptography.X509Certificates.X509Certificate2Collection.Typ'Class;
   function get_RevocationFlag(
      This : access Typ) return MSSyst.Security.Cryptography.X509Certificates.X509RevocationFlag.Valuetype;
   function get_RevocationMode(
      This : access Typ) return MSSyst.Security.Cryptography.X509Certificates.X509RevocationMode.Valuetype;
   function get_UrlRetrievalTimeout(
      This : access Typ) return MSSyst.TimeSpan.Valuetype;
   function get_VerificationFlags(
      This : access Typ) return MSSyst.Security.Cryptography.X509Certificates.X509VerificationFlags.Valuetype;
   function get_VerificationTime(
      This : access Typ) return MSSyst.DateTime.Valuetype;
   procedure Reset(
      This : access Typ);
   procedure set_RevocationFlag(
      This : access Typ;
      value : MSSyst.Security.Cryptography.X509Certificates.X509RevocationFlag.Valuetype);
   procedure set_RevocationMode(
      This : access Typ;
      value : MSSyst.Security.Cryptography.X509Certificates.X509RevocationMode.Valuetype);
   procedure set_UrlRetrievalTimeout(
      This : access Typ;
      value : MSSyst.TimeSpan.Valuetype);
   procedure set_VerificationFlags(
      This : access Typ;
      value : MSSyst.Security.Cryptography.X509Certificates.X509VerificationFlags.Valuetype);
   procedure set_VerificationTime(
      This : access Typ;
      value : MSSyst.DateTime.Valuetype);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_X509ChainPolicy);
   pragma Import(MSIL,get_ApplicationPolicy,"get_ApplicationPolicy");
   pragma Import(MSIL,get_CertificatePolicy,"get_CertificatePolicy");
   pragma Import(MSIL,get_ExtraStore,"get_ExtraStore");
   pragma Import(MSIL,get_RevocationFlag,"get_RevocationFlag");
   pragma Import(MSIL,get_RevocationMode,"get_RevocationMode");
   pragma Import(MSIL,get_UrlRetrievalTimeout,"get_UrlRetrievalTimeout");
   pragma Import(MSIL,get_VerificationFlags,"get_VerificationFlags");
   pragma Import(MSIL,get_VerificationTime,"get_VerificationTime");
   pragma Import(MSIL,Reset,"Reset");
   pragma Import(MSIL,set_RevocationFlag,"set_RevocationFlag");
   pragma Import(MSIL,set_RevocationMode,"set_RevocationMode");
   pragma Import(MSIL,set_UrlRetrievalTimeout,"set_UrlRetrievalTimeout");
   pragma Import(MSIL,set_VerificationFlags,"set_VerificationFlags");
   pragma Import(MSIL,set_VerificationTime,"set_VerificationTime");
end MSSyst.Security.Cryptography.X509Certificates.X509ChainPolicy;
pragma Import(MSIL,MSSyst.Security.Cryptography.X509Certificates.X509ChainPolicy,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Security.Cryptography.X509Certificates.X509ChainPolicy");
