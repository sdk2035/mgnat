-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.IDisposable;
limited with MSSyst.IO.Stream;
with MSSyst.Security.Cryptography.HashAlgorithm;
with MSSyst.Security.Cryptography.ICryptoTransform;
with MSSyst.Security.Cryptography.SHA1;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.Cryptography.SHA1Managed is
   type Typ is new MSSyst.Security.Cryptography.SHA1.Typ
         and MSSyst.Security.Cryptography.ICryptoTransform.Typ
         and MSSyst.IDisposable.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_SHA1Managed(
      This : Ref := null) return Ref;
   procedure Initialize(
      This : access Typ);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_SHA1Managed);
   pragma Import(MSIL,Initialize,"Initialize");
end MSSyst.Security.Cryptography.SHA1Managed;
pragma Import(MSIL,MSSyst.Security.Cryptography.SHA1Managed,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.Cryptography.SHA1Managed");
