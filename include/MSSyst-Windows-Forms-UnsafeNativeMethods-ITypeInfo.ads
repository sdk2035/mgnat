-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Guid;
limited with MSSyst.String;
limited with MSSyst.Windows.Forms.NativeMethods.tagINVOKEKIND;
with MSSyst.Windows.Forms.UnsafeNativeMethods;
limited with MSSyst.Windows.Forms.UnsafeNativeMethods.ITypeComp;
limited with MSSyst.Windows.Forms.UnsafeNativeMethods.ITypeLib;
package MSSyst.Windows.Forms.UnsafeNativeMethods.ITypeInfo is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function AddressOfMember(
      This : access Typ) return Integer is abstract;
   function CreateInstance(
      This : access Typ;
      riid : access MSSyst.Guid.Valuetype;
      ppvObj : access MSSyst.Object.Ref_arr) return Integer is abstract;
   function GetContainingTypeLib(
      This : access Typ;
      ppTLib : access MSSyst.Windows.Forms.UnsafeNativeMethods.ITypeLib.Ref_arr;
      pIndex : MSIL_Types.Int32_Arr) return Integer is abstract;
   function GetDllEntry(
      This : access Typ;
      memid : Integer;
      invkind : MSSyst.Windows.Forms.NativeMethods.tagINVOKEKIND.Valuetype;
      pBstrDllName : access MSSyst.String.Ref_arr;
      pBstrName : access MSSyst.String.Ref_arr;
      pwOrdinal : MSIL_Types.Int16_Arr) return Integer is abstract;
   function GetDocumentation(
      This : access Typ;
      memid : Integer;
      pBstrName : access MSSyst.String.Ref;
      pBstrDocString : access MSSyst.String.Ref;
      pdwHelpContext : MSIL_Types.Int32_Arr;
      pBstrHelpFile : access MSSyst.String.Ref_arr) return Integer is abstract;
   function GetFuncDesc(
      This : access Typ;
      index : Integer;
      pFuncDesc : MSIL_Types.native_int_addrof) return Integer is abstract;
   function GetIDsOfNames(
      This : access Typ;
      rgszNames : MSIL_Types.native_int;
      cNames : Integer;
      pMemId : MSIL_Types.native_int) return Integer is abstract;
   function GetImplTypeFlags(
      This : access Typ;
      index : Integer;
      pImplTypeFlags : MSIL_Types.Int32_Arr) return Integer is abstract;
   function GetMops(
      This : access Typ;
      memid : Integer;
      pBstrMops : access MSSyst.String.Ref_arr) return Integer is abstract;
   function GetNames(
      This : access Typ;
      memid : Integer;
      rgBstrNames : access MSSyst.String.Ref_arr;
      cMaxNames : Integer;
      pcNames : MSIL_Types.Int32_Arr) return Integer is abstract;
   function GetRefTypeInfo(
      This : access Typ;
      hreftype : MSIL_Types.native_int;
      pTypeInfo : access MSSyst.Windows.Forms.UnsafeNativeMethods.ITypeInfo.Ref) return Integer is abstract;
   function GetRefTypeOfImplType(
      This : access Typ;
      index : Integer;
      pRefType : MSIL_Types.Int32_Arr) return Integer is abstract;
   function GetTypeAttr(
      This : access Typ;
      pTypeAttr : MSIL_Types.native_int_addrof) return Integer is abstract;
   function GetTypeComp(
      This : access Typ;
      ppTComp : access MSSyst.Windows.Forms.UnsafeNativeMethods.ITypeComp.Ref_arr) return Integer is abstract;
   function GetVarDesc(
      This : access Typ;
      index : Integer;
      pVarDesc : MSIL_Types.native_int_addrof) return Integer is abstract;
   function Invoke(
      This : access Typ) return Integer is abstract;
   procedure ReleaseFuncDesc(
      This : access Typ;
      funcDesc : MSIL_Types.native_int) is abstract;
   procedure ReleaseTypeAttr(
      This : access Typ;
      typeAttr : MSIL_Types.native_int) is abstract;
   procedure ReleaseVarDesc(
      This : access Typ;
      varDesc : MSIL_Types.native_int) is abstract;
private
   pragma Import(MSIL,AddressOfMember,"AddressOfMember");
   pragma Import(MSIL,CreateInstance,"CreateInstance");
   pragma Import(MSIL,GetContainingTypeLib,"GetContainingTypeLib");
   pragma Import(MSIL,GetDllEntry,"GetDllEntry");
   pragma Import(MSIL,GetDocumentation,"GetDocumentation");
   pragma Import(MSIL,GetFuncDesc,"GetFuncDesc");
   pragma Import(MSIL,GetIDsOfNames,"GetIDsOfNames");
   pragma Import(MSIL,GetImplTypeFlags,"GetImplTypeFlags");
   pragma Import(MSIL,GetMops,"GetMops");
   pragma Import(MSIL,GetNames,"GetNames");
   pragma Import(MSIL,GetRefTypeInfo,"GetRefTypeInfo");
   pragma Import(MSIL,GetRefTypeOfImplType,"GetRefTypeOfImplType");
   pragma Import(MSIL,GetTypeAttr,"GetTypeAttr");
   pragma Import(MSIL,GetTypeComp,"GetTypeComp");
   pragma Import(MSIL,GetVarDesc,"GetVarDesc");
   pragma Import(MSIL,Invoke,"Invoke");
   pragma Import(MSIL,ReleaseFuncDesc,"ReleaseFuncDesc");
   pragma Import(MSIL,ReleaseTypeAttr,"ReleaseTypeAttr");
   pragma Import(MSIL,ReleaseVarDesc,"ReleaseVarDesc");
end MSSyst.Windows.Forms.UnsafeNativeMethods.ITypeInfo;
pragma Import(MSIL,MSSyst.Windows.Forms.UnsafeNativeMethods.ITypeInfo,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System.Windows.Forms]System.Windows.Forms.UnsafeNativeMethods/ITypeInfo");
