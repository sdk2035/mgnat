-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Security.AccessControl.CryptoKeySecurity;
limited with MSSyst.Security.Cryptography.CspParameters;
limited with MSSyst.Security.Cryptography.KeyNumber;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.Cryptography.CspKeyContainerInfo is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_CspKeyContainerInfo(
      This : Ref := null;
      parameters : access MSSyst.Security.Cryptography.CspParameters.Typ'Class) return Ref;
   function get_Accessible(
      This : access Typ) return Standard.Boolean;
   function get_CryptoKeySecurity(
      This : access Typ) return access MSSyst.Security.AccessControl.CryptoKeySecurity.Typ'Class;
   function get_Exportable(
      This : access Typ) return Standard.Boolean;
   function get_HardwareDevice(
      This : access Typ) return Standard.Boolean;
   function get_KeyContainerName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_KeyNumber(
      This : access Typ) return MSSyst.Security.Cryptography.KeyNumber.Valuetype;
   function get_MachineKeyStore(
      This : access Typ) return Standard.Boolean;
   function get_Protected(
      This : access Typ) return Standard.Boolean;
   function get_ProviderName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_ProviderType(
      This : access Typ) return Integer;
   function get_RandomlyGenerated(
      This : access Typ) return Standard.Boolean;
   function get_Removable(
      This : access Typ) return Standard.Boolean;
   function get_UniqueKeyContainerName(
      This : access Typ) return access MSSyst.String.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_CspKeyContainerInfo);
   pragma Import(MSIL,get_Accessible,"get_Accessible");
   pragma Import(MSIL,get_CryptoKeySecurity,"get_CryptoKeySecurity");
   pragma Import(MSIL,get_Exportable,"get_Exportable");
   pragma Import(MSIL,get_HardwareDevice,"get_HardwareDevice");
   pragma Import(MSIL,get_KeyContainerName,"get_KeyContainerName");
   pragma Import(MSIL,get_KeyNumber,"get_KeyNumber");
   pragma Import(MSIL,get_MachineKeyStore,"get_MachineKeyStore");
   pragma Import(MSIL,get_Protected,"get_Protected");
   pragma Import(MSIL,get_ProviderName,"get_ProviderName");
   pragma Import(MSIL,get_ProviderType,"get_ProviderType");
   pragma Import(MSIL,get_RandomlyGenerated,"get_RandomlyGenerated");
   pragma Import(MSIL,get_Removable,"get_Removable");
   pragma Import(MSIL,get_UniqueKeyContainerName,"get_UniqueKeyContainerName");
end MSSyst.Security.Cryptography.CspKeyContainerInfo;
pragma Import(MSIL,MSSyst.Security.Cryptography.CspKeyContainerInfo,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.Cryptography.CspKeyContainerInfo");
