-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.IAsyncResult;
limited with MSSyst.String;
limited with MSSyst.Threading.IOCompletionCallback;
with MSSyst.Threading.NativeOverlapped;
limited with MSSyst.Type_k;
package MSSyst.Threading.Overlapped is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_Overlapped(
      This : Ref := null) return Ref;
   function new_Overlapped(
      This : Ref := null;
      offsetLo : Integer;
      offsetHi : Integer;
      hEvent : MSIL_Types.native_int;
      ar : access MSSyst.IAsyncResult.Typ'Class) return Ref;
   function new_Overlapped(
      This : Ref := null;
      offsetLo : Integer;
      offsetHi : Integer;
      hEvent : Integer;
      ar : access MSSyst.IAsyncResult.Typ'Class) return Ref;
   procedure Free(
      nativeOverlappedPtr : access MSSyst.Threading.NativeOverlapped.Valuetype);
   function get_AsyncResult(
      This : access Typ) return access MSSyst.IAsyncResult.Typ'Class;
   function get_EventHandle(
      This : access Typ) return Integer;
   function get_EventHandleIntPtr(
      This : access Typ) return MSIL_Types.native_int;
   function get_OffsetHigh(
      This : access Typ) return Integer;
   function get_OffsetLow(
      This : access Typ) return Integer;
   function Pack(
      This : access Typ;
      iocb : access MSSyst.Threading.IOCompletionCallback.Typ'Class;
      userData : access MSSyst.Object.Typ'Class) return access MSSyst.Threading.NativeOverlapped.Valuetype;
   function Pack(
      This : access Typ;
      iocb : access MSSyst.Threading.IOCompletionCallback.Typ'Class) return access MSSyst.Threading.NativeOverlapped.Valuetype;
   procedure set_AsyncResult(
      This : access Typ;
      value : access MSSyst.IAsyncResult.Typ'Class);
   procedure set_EventHandle(
      This : access Typ;
      value : Integer);
   procedure set_EventHandleIntPtr(
      This : access Typ;
      value : MSIL_Types.native_int);
   procedure set_OffsetHigh(
      This : access Typ;
      value : Integer);
   procedure set_OffsetLow(
      This : access Typ;
      value : Integer);
   function Unpack(
      nativeOverlappedPtr : access MSSyst.Threading.NativeOverlapped.Valuetype) return access MSSyst.Threading.Overlapped.Typ'Class;
   function UnsafePack(
      This : access Typ;
      iocb : access MSSyst.Threading.IOCompletionCallback.Typ'Class) return access MSSyst.Threading.NativeOverlapped.Valuetype;
   function UnsafePack(
      This : access Typ;
      iocb : access MSSyst.Threading.IOCompletionCallback.Typ'Class;
      userData : access MSSyst.Object.Typ'Class) return access MSSyst.Threading.NativeOverlapped.Valuetype;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_Overlapped);
   pragma Import(MSIL,Free,"Free");
   pragma Import(MSIL,get_AsyncResult,"get_AsyncResult");
   pragma Import(MSIL,get_EventHandle,"get_EventHandle");
   pragma Import(MSIL,get_EventHandleIntPtr,"get_EventHandleIntPtr");
   pragma Import(MSIL,get_OffsetHigh,"get_OffsetHigh");
   pragma Import(MSIL,get_OffsetLow,"get_OffsetLow");
   pragma Import(MSIL,Pack,"Pack");
   pragma Import(MSIL,set_AsyncResult,"set_AsyncResult");
   pragma Import(MSIL,set_EventHandle,"set_EventHandle");
   pragma Import(MSIL,set_EventHandleIntPtr,"set_EventHandleIntPtr");
   pragma Import(MSIL,set_OffsetHigh,"set_OffsetHigh");
   pragma Import(MSIL,set_OffsetLow,"set_OffsetLow");
   pragma Import(MSIL,Unpack,"Unpack");
   pragma Import(MSIL,UnsafePack,"UnsafePack");
end MSSyst.Threading.Overlapped;
pragma Import(MSIL,MSSyst.Threading.Overlapped,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Threading.Overlapped");
