-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.MarshalByRefObject;
limited with MSSyst.Runtime.Remoting.ObjRef;
limited with MSSyst.String;
limited with MSSyst.Threading.WaitHandle;
limited with MSSyst.Type_k;
package MSSyst.Threading.RegisteredWaitHandle is
   type Typ is new MSSyst.MarshalByRefObject.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function Unregister(
      This : access Typ;
      waitObject : access MSSyst.Threading.WaitHandle.Typ'Class) return Standard.Boolean;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,Unregister,"Unregister");
end MSSyst.Threading.RegisteredWaitHandle;
pragma Import(MSIL,MSSyst.Threading.RegisteredWaitHandle,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Threading.RegisteredWaitHandle");
