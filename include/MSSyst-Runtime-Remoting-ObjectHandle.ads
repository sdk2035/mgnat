-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.MarshalByRefObject;
with MSSyst.Runtime.Remoting.IObjectHandle;
limited with MSSyst.Runtime.Remoting.ObjRef;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Runtime.Remoting.ObjectHandle is
   type Typ is new MSSyst.MarshalByRefObject.Typ
         and MSSyst.Runtime.Remoting.IObjectHandle.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_ObjectHandle(
      This : Ref := null;
      o : access MSSyst.Object.Typ'Class) return Ref;
   function InitializeLifetimeService(
      This : access Typ) return access MSSyst.Object.Typ'Class;
   function Unwrap(
      This : access Typ) return access MSSyst.Object.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_ObjectHandle);
   pragma Import(MSIL,InitializeLifetimeService,"InitializeLifetimeService");
   pragma Import(MSIL,Unwrap,"Unwrap");
end MSSyst.Runtime.Remoting.ObjectHandle;
pragma Import(MSIL,MSSyst.Runtime.Remoting.ObjectHandle,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Runtime.Remoting.ObjectHandle");
