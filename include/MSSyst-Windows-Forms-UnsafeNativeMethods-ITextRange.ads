-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.String;
with MSSyst.Windows.Forms.UnsafeNativeMethods;
package MSSyst.Windows.Forms.UnsafeNativeMethods.ITextRange is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function CanEdit(
      This : access Typ) return Integer is abstract;
   function CanPaste(
      This : access Typ;
      pVar : access MSSyst.Object.Typ'Class;
      format : Integer) return Integer is abstract;
   procedure ChangeCase(
      This : access Typ;
      type_k : Integer) is abstract;
   procedure Collapse(
      This : access Typ;
      start : Integer) is abstract;
   procedure Copy(
      This : access Typ;
      pVar : access MSSyst.Object.Ref) is abstract;
   procedure Cut(
      This : access Typ;
      pVar : access MSSyst.Object.Ref) is abstract;
   function Delete(
      This : access Typ;
      unit : Integer;
      count : Integer) return Integer is abstract;
   function EndOf(
      This : access Typ;
      unit : Integer;
      extend : Integer) return Integer is abstract;
   function Expand(
      This : access Typ;
      unit : Integer) return Integer is abstract;
   function FindText(
      This : access Typ;
      text : access MSSyst.String.Typ'Class;
      cch : Integer;
      flags : Integer) return Integer is abstract;
   function FindTextEnd(
      This : access Typ;
      text : access MSSyst.String.Typ'Class;
      cch : Integer;
      flags : Integer) return Integer is abstract;
   function FindTextStart(
      This : access Typ;
      text : access MSSyst.String.Typ'Class;
      cch : Integer;
      flags : Integer) return Integer is abstract;
   function GetChar(
      This : access Typ) return access MSSyst.Object.Typ'Class is abstract;
   function GetDuplicate(
      This : access Typ) return access MSSyst.Windows.Forms.UnsafeNativeMethods.ITextRange.Typ'Class is abstract;
   function GetEmbeddedObject(
      This : access Typ) return access MSSyst.Object.Typ'Class is abstract;
   function GetEnd(
      This : access Typ) return Integer is abstract;
   function GetFont(
      This : access Typ) return access MSSyst.Object.Typ'Class is abstract;
   function GetFormattedText(
      This : access Typ) return access MSSyst.Windows.Forms.UnsafeNativeMethods.ITextRange.Typ'Class is abstract;
   function GetIndex(
      This : access Typ;
      unit : Integer) return Integer is abstract;
   function GetPara(
      This : access Typ) return access MSSyst.Object.Typ'Class is abstract;
   procedure GetPoint(
      This : access Typ;
      type_k : Integer;
      x : MSIL_Types.Int32_addrof;
      y : MSIL_Types.Int32_addrof) is abstract;
   function GetStart(
      This : access Typ) return Integer is abstract;
   function GetStoryLength(
      This : access Typ) return Integer is abstract;
   function GetStoryType(
      This : access Typ) return Integer is abstract;
   function GetText(
      This : access Typ) return access MSSyst.String.Typ'Class is abstract;
   function InRange(
      This : access Typ;
      range_k : access MSSyst.Windows.Forms.UnsafeNativeMethods.ITextRange.Typ'Class) return Integer is abstract;
   function InStory(
      This : access Typ;
      range_k : access MSSyst.Windows.Forms.UnsafeNativeMethods.ITextRange.Typ'Class) return Integer is abstract;
   function IsEqual(
      This : access Typ;
      range_k : access MSSyst.Windows.Forms.UnsafeNativeMethods.ITextRange.Typ'Class) return Integer is abstract;
   function Move(
      This : access Typ;
      unit : Integer;
      count : Integer) return Integer is abstract;
   function MoveEnd(
      This : access Typ;
      unit : Integer;
      count : Integer) return Integer is abstract;
   function MoveEndUntil(
      This : access Typ;
      cset : access MSSyst.Object.Typ'Class;
      count : Integer) return Integer is abstract;
   function MoveEndWhile(
      This : access Typ;
      cset : access MSSyst.Object.Typ'Class;
      count : Integer) return Integer is abstract;
   function MoveStart(
      This : access Typ;
      unit : Integer;
      count : Integer) return Integer is abstract;
   function MoveStartUntil(
      This : access Typ;
      cset : access MSSyst.Object.Typ'Class;
      count : Integer) return Integer is abstract;
   function MoveStartWhile(
      This : access Typ;
      cset : access MSSyst.Object.Typ'Class;
      count : Integer) return Integer is abstract;
   function MoveUntil(
      This : access Typ;
      cset : access MSSyst.Object.Typ'Class;
      count : Integer) return Integer is abstract;
   function MoveWhile(
      This : access Typ;
      cset : access MSSyst.Object.Typ'Class;
      count : Integer) return Integer is abstract;
   procedure Paste(
      This : access Typ;
      pVar : access MSSyst.Object.Typ'Class;
      format : Integer) is abstract;
   procedure ScrollIntoView(
      This : access Typ;
      value : Integer) is abstract;
   procedure Select_k(
      This : access Typ) is abstract;
   procedure SetChar(
      This : access Typ;
      ch : access MSSyst.Object.Typ'Class) is abstract;
   procedure SetEnd(
      This : access Typ;
      cpLim : Integer) is abstract;
   procedure SetFont(
      This : access Typ;
      font : access MSSyst.Object.Typ'Class) is abstract;
   procedure SetFormattedText(
      This : access Typ;
      range_k : access MSSyst.Windows.Forms.UnsafeNativeMethods.ITextRange.Typ'Class) is abstract;
   procedure SetIndex(
      This : access Typ;
      unit : Integer;
      index : Integer;
      extend : Integer) is abstract;
   procedure SetPara(
      This : access Typ;
      para : access MSSyst.Object.Typ'Class) is abstract;
   procedure SetPoint(
      This : access Typ;
      x : Integer;
      y : Integer;
      type_k : Integer;
      extend : Integer) is abstract;
   procedure SetRange(
      This : access Typ;
      cpActive : Integer;
      cpOther : Integer) is abstract;
   procedure SetStart(
      This : access Typ;
      cpFirst : Integer) is abstract;
   procedure SetText(
      This : access Typ;
      text : access MSSyst.String.Typ'Class) is abstract;
   function StartOf(
      This : access Typ;
      unit : Integer;
      extend : Integer) return Integer is abstract;
private
   pragma Import(MSIL,CanEdit,"CanEdit");
   pragma Import(MSIL,CanPaste,"CanPaste");
   pragma Import(MSIL,ChangeCase,"ChangeCase");
   pragma Import(MSIL,Collapse,"Collapse");
   pragma Import(MSIL,Copy,"Copy");
   pragma Import(MSIL,Cut,"Cut");
   pragma Import(MSIL,Delete,"Delete");
   pragma Import(MSIL,EndOf,"EndOf");
   pragma Import(MSIL,Expand,"Expand");
   pragma Import(MSIL,FindText,"FindText");
   pragma Import(MSIL,FindTextEnd,"FindTextEnd");
   pragma Import(MSIL,FindTextStart,"FindTextStart");
   pragma Import(MSIL,GetChar,"GetChar");
   pragma Import(MSIL,GetDuplicate,"GetDuplicate");
   pragma Import(MSIL,GetEmbeddedObject,"GetEmbeddedObject");
   pragma Import(MSIL,GetEnd,"GetEnd");
   pragma Import(MSIL,GetFont,"GetFont");
   pragma Import(MSIL,GetFormattedText,"GetFormattedText");
   pragma Import(MSIL,GetIndex,"GetIndex");
   pragma Import(MSIL,GetPara,"GetPara");
   pragma Import(MSIL,GetPoint,"GetPoint");
   pragma Import(MSIL,GetStart,"GetStart");
   pragma Import(MSIL,GetStoryLength,"GetStoryLength");
   pragma Import(MSIL,GetStoryType,"GetStoryType");
   pragma Import(MSIL,GetText,"GetText");
   pragma Import(MSIL,InRange,"InRange");
   pragma Import(MSIL,InStory,"InStory");
   pragma Import(MSIL,IsEqual,"IsEqual");
   pragma Import(MSIL,Move,"Move");
   pragma Import(MSIL,MoveEnd,"MoveEnd");
   pragma Import(MSIL,MoveEndUntil,"MoveEndUntil");
   pragma Import(MSIL,MoveEndWhile,"MoveEndWhile");
   pragma Import(MSIL,MoveStart,"MoveStart");
   pragma Import(MSIL,MoveStartUntil,"MoveStartUntil");
   pragma Import(MSIL,MoveStartWhile,"MoveStartWhile");
   pragma Import(MSIL,MoveUntil,"MoveUntil");
   pragma Import(MSIL,MoveWhile,"MoveWhile");
   pragma Import(MSIL,Paste,"Paste");
   pragma Import(MSIL,ScrollIntoView,"ScrollIntoView");
   pragma Import(MSIL,Select_k,"Select");
   pragma Import(MSIL,SetChar,"SetChar");
   pragma Import(MSIL,SetEnd,"SetEnd");
   pragma Import(MSIL,SetFont,"SetFont");
   pragma Import(MSIL,SetFormattedText,"SetFormattedText");
   pragma Import(MSIL,SetIndex,"SetIndex");
   pragma Import(MSIL,SetPara,"SetPara");
   pragma Import(MSIL,SetPoint,"SetPoint");
   pragma Import(MSIL,SetRange,"SetRange");
   pragma Import(MSIL,SetStart,"SetStart");
   pragma Import(MSIL,SetText,"SetText");
   pragma Import(MSIL,StartOf,"StartOf");
end MSSyst.Windows.Forms.UnsafeNativeMethods.ITextRange;
pragma Import(MSIL,MSSyst.Windows.Forms.UnsafeNativeMethods.ITextRange,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System.Windows.Forms]System.Windows.Forms.UnsafeNativeMethods/ITextRange");
