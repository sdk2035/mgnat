-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.CodeDom.Compiler.TempFileCollection;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.CodeDom.Compiler.Executor is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure ExecWait(
      cmd : access MSSyst.String.Typ'Class;
      tempFiles : access MSSyst.CodeDom.Compiler.TempFileCollection.Typ'Class);
   function ExecWaitWithCapture(
      userToken : MSIL_Types.native_int;
      cmd : access MSSyst.String.Typ'Class;
      currentDir : access MSSyst.String.Typ'Class;
      tempFiles : access MSSyst.CodeDom.Compiler.TempFileCollection.Typ'Class;
      outputName : access MSSyst.String.Ref;
      errorName : access MSSyst.String.Ref) return Integer;
   function ExecWaitWithCapture(
      userToken : MSIL_Types.native_int;
      cmd : access MSSyst.String.Typ'Class;
      tempFiles : access MSSyst.CodeDom.Compiler.TempFileCollection.Typ'Class;
      outputName : access MSSyst.String.Ref;
      errorName : access MSSyst.String.Ref) return Integer;
   function ExecWaitWithCapture(
      cmd : access MSSyst.String.Typ'Class;
      tempFiles : access MSSyst.CodeDom.Compiler.TempFileCollection.Typ'Class;
      outputName : access MSSyst.String.Ref;
      errorName : access MSSyst.String.Ref) return Integer;
   function ExecWaitWithCapture(
      cmd : access MSSyst.String.Typ'Class;
      currentDir : access MSSyst.String.Typ'Class;
      tempFiles : access MSSyst.CodeDom.Compiler.TempFileCollection.Typ'Class;
      outputName : access MSSyst.String.Ref;
      errorName : access MSSyst.String.Ref) return Integer;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,ExecWait,"ExecWait");
   pragma Import(MSIL,ExecWaitWithCapture,"ExecWaitWithCapture");
end MSSyst.CodeDom.Compiler.Executor;
pragma Import(MSIL,MSSyst.CodeDom.Compiler.Executor,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.CodeDom.Compiler.Executor");
