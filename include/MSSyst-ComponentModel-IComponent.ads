-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.ComponentModel.ISite;
limited with MSSyst.EventHandler;
with MSSyst.IDisposable;
package MSSyst.ComponentModel.IComponent is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure add_Disposed(
      This : access Typ;
      value : access MSSyst.EventHandler.Typ'Class) is abstract;
   function get_Site(
      This : access Typ) return access MSSyst.ComponentModel.ISite.Typ'Class is abstract;
   procedure remove_Disposed(
      This : access Typ;
      value : access MSSyst.EventHandler.Typ'Class) is abstract;
   procedure set_Site(
      This : access Typ;
      value : access MSSyst.ComponentModel.ISite.Typ'Class) is abstract;
private
   pragma Import(MSIL,add_Disposed,"add_Disposed");
   pragma Import(MSIL,get_Site,"get_Site");
   pragma Import(MSIL,remove_Disposed,"remove_Disposed");
   pragma Import(MSIL,set_Site,"set_Site");
end MSSyst.ComponentModel.IComponent;
pragma Import(MSIL,MSSyst.ComponentModel.IComponent,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.ComponentModel.IComponent");
