-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Security.Cryptography.AsymmetricAlgorithm;
limited with MSSyst.Security.Cryptography.AsymmetricSignatureDeformatter;
limited with MSSyst.Security.Cryptography.AsymmetricSignatureFormatter;
limited with MSSyst.Security.Cryptography.HashAlgorithm;
limited with MSSyst.Security.SecurityElement;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.Cryptography.SignatureDescription is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_SignatureDescription(
      This : Ref := null) return Ref;
   function new_SignatureDescription(
      This : Ref := null;
      el : access MSSyst.Security.SecurityElement.Typ'Class) return Ref;
   function CreateDeformatter(
      This : access Typ;
      key : access MSSyst.Security.Cryptography.AsymmetricAlgorithm.Typ'Class) return access MSSyst.Security.Cryptography.AsymmetricSignatureDeformatter.Typ'Class;
   function CreateDigest(
      This : access Typ) return access MSSyst.Security.Cryptography.HashAlgorithm.Typ'Class;
   function CreateFormatter(
      This : access Typ;
      key : access MSSyst.Security.Cryptography.AsymmetricAlgorithm.Typ'Class) return access MSSyst.Security.Cryptography.AsymmetricSignatureFormatter.Typ'Class;
   function get_DeformatterAlgorithm(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_DigestAlgorithm(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_FormatterAlgorithm(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_KeyAlgorithm(
      This : access Typ) return access MSSyst.String.Typ'Class;
   procedure set_DeformatterAlgorithm(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_DigestAlgorithm(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_FormatterAlgorithm(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_KeyAlgorithm(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_SignatureDescription);
   pragma Import(MSIL,CreateDeformatter,"CreateDeformatter");
   pragma Import(MSIL,CreateDigest,"CreateDigest");
   pragma Import(MSIL,CreateFormatter,"CreateFormatter");
   pragma Import(MSIL,get_DeformatterAlgorithm,"get_DeformatterAlgorithm");
   pragma Import(MSIL,get_DigestAlgorithm,"get_DigestAlgorithm");
   pragma Import(MSIL,get_FormatterAlgorithm,"get_FormatterAlgorithm");
   pragma Import(MSIL,get_KeyAlgorithm,"get_KeyAlgorithm");
   pragma Import(MSIL,set_DeformatterAlgorithm,"set_DeformatterAlgorithm");
   pragma Import(MSIL,set_DigestAlgorithm,"set_DigestAlgorithm");
   pragma Import(MSIL,set_FormatterAlgorithm,"set_FormatterAlgorithm");
   pragma Import(MSIL,set_KeyAlgorithm,"set_KeyAlgorithm");
end MSSyst.Security.Cryptography.SignatureDescription;
pragma Import(MSIL,MSSyst.Security.Cryptography.SignatureDescription,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.Cryptography.SignatureDescription");
