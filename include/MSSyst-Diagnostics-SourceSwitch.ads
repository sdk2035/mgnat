-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Collections.Specialized.StringDictionary;
limited with MSSyst.Diagnostics.SourceLevels;
with MSSyst.Diagnostics.Switch;
limited with MSSyst.Diagnostics.TraceEventType;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Diagnostics.SourceSwitch is
   type Typ is new MSSyst.Diagnostics.Switch.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_SourceSwitch(
      This : Ref := null;
      name : access MSSyst.String.Typ'Class) return Ref;
   function new_SourceSwitch(
      This : Ref := null;
      displayName : access MSSyst.String.Typ'Class;
      defaultSwitchValue : access MSSyst.String.Typ'Class) return Ref;
   function get_Level(
      This : access Typ) return MSSyst.Diagnostics.SourceLevels.Valuetype;
   procedure set_Level(
      This : access Typ;
      value : MSSyst.Diagnostics.SourceLevels.Valuetype);
   function ShouldTrace(
      This : access Typ;
      eventType : MSSyst.Diagnostics.TraceEventType.Valuetype) return Standard.Boolean;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_SourceSwitch);
   pragma Import(MSIL,get_Level,"get_Level");
   pragma Import(MSIL,set_Level,"set_Level");
   pragma Import(MSIL,ShouldTrace,"ShouldTrace");
end MSSyst.Diagnostics.SourceSwitch;
pragma Import(MSIL,MSSyst.Diagnostics.SourceSwitch,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Diagnostics.SourceSwitch");
