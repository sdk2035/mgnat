-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Runtime.Remoting.Activation.ActivatorLevel;
limited with MSSyst.Runtime.Remoting.Activation.IConstructionCallMessage;
limited with MSSyst.Runtime.Remoting.Activation.IConstructionReturnMessage;
package MSSyst.Runtime.Remoting.Activation.IActivator is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function Activate(
      This : access Typ;
      msg : access MSSyst.Runtime.Remoting.Activation.IConstructionCallMessage.Typ'Class) return access MSSyst.Runtime.Remoting.Activation.IConstructionReturnMessage.Typ'Class is abstract;
   function get_Level(
      This : access Typ) return MSSyst.Runtime.Remoting.Activation.ActivatorLevel.Valuetype is abstract;
   function get_NextActivator(
      This : access Typ) return access MSSyst.Runtime.Remoting.Activation.IActivator.Typ'Class is abstract;
   procedure set_NextActivator(
      This : access Typ;
      value : access MSSyst.Runtime.Remoting.Activation.IActivator.Typ'Class) is abstract;
private
   pragma Import(MSIL,Activate,"Activate");
   pragma Import(MSIL,get_Level,"get_Level");
   pragma Import(MSIL,get_NextActivator,"get_NextActivator");
   pragma Import(MSIL,set_NextActivator,"set_NextActivator");
end MSSyst.Runtime.Remoting.Activation.IActivator;
pragma Import(MSIL,MSSyst.Runtime.Remoting.Activation.IActivator,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Runtime.Remoting.Activation.IActivator");
