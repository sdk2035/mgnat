-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.IDisposable;
with MSSyst.Security.Cryptography.AsymmetricAlgorithm;
limited with MSSyst.Security.Cryptography.KeySizes;
limited with MSSyst.Security.Cryptography.RSAParameters;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.Cryptography.RSA is
   type Typ is abstract new MSSyst.Security.Cryptography.AsymmetricAlgorithm.Typ
         and MSSyst.IDisposable.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function Create return access MSSyst.Security.Cryptography.RSA.Typ'Class;
   function Create(
      algName : access MSSyst.String.Typ'Class) return access MSSyst.Security.Cryptography.RSA.Typ'Class;
   function DecryptValue(
      This : access Typ;
      rgb : MSIL_Types.unsigned_int8_Arr) return MSIL_Types.unsigned_int8_Array;
   function EncryptValue(
      This : access Typ;
      rgb : MSIL_Types.unsigned_int8_Arr) return MSIL_Types.unsigned_int8_Array;
   function ExportParameters(
      This : access Typ;
      includePrivateParameters : Standard.Boolean) return MSSyst.Security.Cryptography.RSAParameters.Valuetype;
   procedure FromXmlString(
      This : access Typ;
      xmlString : access MSSyst.String.Typ'Class);
   procedure ImportParameters(
      This : access Typ;
      parameters : MSSyst.Security.Cryptography.RSAParameters.Valuetype);
   function ToXmlString(
      This : access Typ;
      includePrivateParameters : Standard.Boolean) return access MSSyst.String.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,Create,"Create");
   pragma Import(MSIL,DecryptValue,"DecryptValue");
   pragma Import(MSIL,EncryptValue,"EncryptValue");
   pragma Import(MSIL,ExportParameters,"ExportParameters");
   pragma Import(MSIL,FromXmlString,"FromXmlString");
   pragma Import(MSIL,ImportParameters,"ImportParameters");
   pragma Import(MSIL,ToXmlString,"ToXmlString");
end MSSyst.Security.Cryptography.RSA;
pragma Import(MSIL,MSSyst.Security.Cryptography.RSA,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.Cryptography.RSA");
