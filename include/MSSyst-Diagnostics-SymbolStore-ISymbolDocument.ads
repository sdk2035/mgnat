-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Guid;
limited with MSSyst.String;
package MSSyst.Diagnostics.SymbolStore.ISymbolDocument is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function FindClosestLine(
      This : access Typ;
      line : Integer) return Integer is abstract;
   function get_CheckSumAlgorithmId(
      This : access Typ) return MSSyst.Guid.Valuetype is abstract;
   function get_DocumentType(
      This : access Typ) return MSSyst.Guid.Valuetype is abstract;
   function get_HasEmbeddedSource(
      This : access Typ) return Standard.Boolean is abstract;
   function get_Language(
      This : access Typ) return MSSyst.Guid.Valuetype is abstract;
   function get_LanguageVendor(
      This : access Typ) return MSSyst.Guid.Valuetype is abstract;
   function get_SourceLength(
      This : access Typ) return Integer is abstract;
   function get_URL(
      This : access Typ) return access MSSyst.String.Typ'Class is abstract;
   function GetCheckSum(
      This : access Typ) return MSIL_Types.unsigned_int8_Array is abstract;
   function GetSourceRange(
      This : access Typ;
      startLine : Integer;
      startColumn : Integer;
      endLine : Integer;
      endColumn : Integer) return MSIL_Types.unsigned_int8_Array is abstract;
private
   pragma Import(MSIL,FindClosestLine,"FindClosestLine");
   pragma Import(MSIL,get_CheckSumAlgorithmId,"get_CheckSumAlgorithmId");
   pragma Import(MSIL,get_DocumentType,"get_DocumentType");
   pragma Import(MSIL,get_HasEmbeddedSource,"get_HasEmbeddedSource");
   pragma Import(MSIL,get_Language,"get_Language");
   pragma Import(MSIL,get_LanguageVendor,"get_LanguageVendor");
   pragma Import(MSIL,get_SourceLength,"get_SourceLength");
   pragma Import(MSIL,get_URL,"get_URL");
   pragma Import(MSIL,GetCheckSum,"GetCheckSum");
   pragma Import(MSIL,GetSourceRange,"GetSourceRange");
end MSSyst.Diagnostics.SymbolStore.ISymbolDocument;
pragma Import(MSIL,MSSyst.Diagnostics.SymbolStore.ISymbolDocument,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Diagnostics.SymbolStore.ISymbolDocument");
