-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Net.IPAddress;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Net.Sockets.IPv6MulticastOption is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_IPv6MulticastOption(
      This : Ref := null;
      group : access MSSyst.Net.IPAddress.Typ'Class;
      ifindex : Long_Long_Integer) return Ref;
   function new_IPv6MulticastOption(
      This : Ref := null;
      group : access MSSyst.Net.IPAddress.Typ'Class) return Ref;
   function get_Group(
      This : access Typ) return access MSSyst.Net.IPAddress.Typ'Class;
   function get_InterfaceIndex(
      This : access Typ) return Long_Long_Integer;
   procedure set_Group(
      This : access Typ;
      value : access MSSyst.Net.IPAddress.Typ'Class);
   procedure set_InterfaceIndex(
      This : access Typ;
      value : Long_Long_Integer);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_IPv6MulticastOption);
   pragma Import(MSIL,get_Group,"get_Group");
   pragma Import(MSIL,get_InterfaceIndex,"get_InterfaceIndex");
   pragma Import(MSIL,set_Group,"set_Group");
   pragma Import(MSIL,set_InterfaceIndex,"set_InterfaceIndex");
end MSSyst.Net.Sockets.IPv6MulticastOption;
pragma Import(MSIL,MSSyst.Net.Sockets.IPv6MulticastOption,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Net.Sockets.IPv6MulticastOption");
