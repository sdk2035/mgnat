-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Globalization.CompareOptions;
limited with MSSyst.Globalization.SortKey;
limited with MSSyst.Reflection.Assembly;
with MSSyst.Runtime.Serialization.IDeserializationCallback;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Globalization.CompareInfo is
   type Typ is new MSSyst.Object.Typ
         and MSSyst.Runtime.Serialization.IDeserializationCallback.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function Compare(
      This : access Typ;
      string1 : access MSSyst.String.Typ'Class;
      offset1 : Integer;
      length1 : Integer;
      string2 : access MSSyst.String.Typ'Class;
      offset2 : Integer;
      length2 : Integer) return Integer;
   function Compare(
      This : access Typ;
      string1 : access MSSyst.String.Typ'Class;
      string2 : access MSSyst.String.Typ'Class;
      options : MSSyst.Globalization.CompareOptions.Valuetype) return Integer;
   function Compare(
      This : access Typ;
      string1 : access MSSyst.String.Typ'Class;
      string2 : access MSSyst.String.Typ'Class) return Integer;
   function Compare(
      This : access Typ;
      string1 : access MSSyst.String.Typ'Class;
      offset1 : Integer;
      length1 : Integer;
      string2 : access MSSyst.String.Typ'Class;
      offset2 : Integer;
      length2 : Integer;
      options : MSSyst.Globalization.CompareOptions.Valuetype) return Integer;
   function Compare(
      This : access Typ;
      string1 : access MSSyst.String.Typ'Class;
      offset1 : Integer;
      string2 : access MSSyst.String.Typ'Class;
      offset2 : Integer) return Integer;
   function Compare(
      This : access Typ;
      string1 : access MSSyst.String.Typ'Class;
      offset1 : Integer;
      string2 : access MSSyst.String.Typ'Class;
      offset2 : Integer;
      options : MSSyst.Globalization.CompareOptions.Valuetype) return Integer;
   function Equals(
      This : access Typ;
      value : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function get_LCID(
      This : access Typ) return Integer;
   function get_Name(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function GetCompareInfo(
      name : access MSSyst.String.Typ'Class;
      assembly : access MSSyst.Reflection.Assembly.Typ'Class) return access MSSyst.Globalization.CompareInfo.Typ'Class;
   function GetCompareInfo(
      culture : Integer;
      assembly : access MSSyst.Reflection.Assembly.Typ'Class) return access MSSyst.Globalization.CompareInfo.Typ'Class;
   function GetCompareInfo(
      name : access MSSyst.String.Typ'Class) return access MSSyst.Globalization.CompareInfo.Typ'Class;
   function GetCompareInfo(
      culture : Integer) return access MSSyst.Globalization.CompareInfo.Typ'Class;
   function GetHashCode(
      This : access Typ) return Integer;
   function GetSortKey(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      options : MSSyst.Globalization.CompareOptions.Valuetype) return access MSSyst.Globalization.SortKey.Typ'Class;
   function GetSortKey(
      This : access Typ;
      source : access MSSyst.String.Typ'Class) return access MSSyst.Globalization.SortKey.Typ'Class;
   function IndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : Wide_Character;
      startIndex : Integer;
      count : Integer) return Integer;
   function IndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : access MSSyst.String.Typ'Class;
      startIndex : Integer;
      options : MSSyst.Globalization.CompareOptions.Valuetype) return Integer;
   function IndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : Wide_Character;
      startIndex : Integer;
      options : MSSyst.Globalization.CompareOptions.Valuetype) return Integer;
   function IndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : access MSSyst.String.Typ'Class;
      startIndex : Integer;
      count : Integer;
      options : MSSyst.Globalization.CompareOptions.Valuetype) return Integer;
   function IndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : Wide_Character;
      startIndex : Integer;
      count : Integer;
      options : MSSyst.Globalization.CompareOptions.Valuetype) return Integer;
   function IndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : access MSSyst.String.Typ'Class;
      startIndex : Integer;
      count : Integer) return Integer;
   function IndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : Wide_Character;
      options : MSSyst.Globalization.CompareOptions.Valuetype) return Integer;
   function IndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : access MSSyst.String.Typ'Class) return Integer;
   function IndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : Wide_Character) return Integer;
   function IndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : access MSSyst.String.Typ'Class;
      startIndex : Integer) return Integer;
   function IndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : Wide_Character;
      startIndex : Integer) return Integer;
   function IndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : access MSSyst.String.Typ'Class;
      options : MSSyst.Globalization.CompareOptions.Valuetype) return Integer;
   function IsPrefix(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      prefix : access MSSyst.String.Typ'Class;
      options : MSSyst.Globalization.CompareOptions.Valuetype) return Standard.Boolean;
   function IsPrefix(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      prefix : access MSSyst.String.Typ'Class) return Standard.Boolean;
   function IsSortable(
      ch : Wide_Character) return Standard.Boolean;
   function IsSortable(
      text : access MSSyst.String.Typ'Class) return Standard.Boolean;
   function IsSuffix(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      suffix : access MSSyst.String.Typ'Class) return Standard.Boolean;
   function IsSuffix(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      suffix : access MSSyst.String.Typ'Class;
      options : MSSyst.Globalization.CompareOptions.Valuetype) return Standard.Boolean;
   function LastIndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : access MSSyst.String.Typ'Class;
      startIndex : Integer;
      count : Integer) return Integer;
   function LastIndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : Wide_Character;
      startIndex : Integer;
      count : Integer;
      options : MSSyst.Globalization.CompareOptions.Valuetype) return Integer;
   function LastIndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : access MSSyst.String.Typ'Class;
      startIndex : Integer;
      count : Integer;
      options : MSSyst.Globalization.CompareOptions.Valuetype) return Integer;
   function LastIndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : Wide_Character;
      options : MSSyst.Globalization.CompareOptions.Valuetype) return Integer;
   function LastIndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : access MSSyst.String.Typ'Class;
      options : MSSyst.Globalization.CompareOptions.Valuetype) return Integer;
   function LastIndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : Wide_Character) return Integer;
   function LastIndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : access MSSyst.String.Typ'Class) return Integer;
   function LastIndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : Wide_Character;
      startIndex : Integer) return Integer;
   function LastIndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : Wide_Character;
      startIndex : Integer;
      count : Integer) return Integer;
   function LastIndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : access MSSyst.String.Typ'Class;
      startIndex : Integer;
      options : MSSyst.Globalization.CompareOptions.Valuetype) return Integer;
   function LastIndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : access MSSyst.String.Typ'Class;
      startIndex : Integer) return Integer;
   function LastIndexOf(
      This : access Typ;
      source : access MSSyst.String.Typ'Class;
      value : Wide_Character;
      startIndex : Integer;
      options : MSSyst.Globalization.CompareOptions.Valuetype) return Integer;
   function ToString(
      This : access Typ) return access MSSyst.String.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,Compare,"Compare");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_LCID,"get_LCID");
   pragma Import(MSIL,get_Name,"get_Name");
   pragma Import(MSIL,GetCompareInfo,"GetCompareInfo");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetSortKey,"GetSortKey");
   pragma Import(MSIL,IndexOf,"IndexOf");
   pragma Import(MSIL,IsPrefix,"IsPrefix");
   pragma Import(MSIL,IsSortable,"IsSortable");
   pragma Import(MSIL,IsSuffix,"IsSuffix");
   pragma Import(MSIL,LastIndexOf,"LastIndexOf");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Globalization.CompareInfo;
pragma Import(MSIL,MSSyst.Globalization.CompareInfo,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Globalization.CompareInfo");
