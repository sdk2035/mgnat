-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Decimal;
with MSSyst.IDisposable;
limited with MSSyst.IFormatProvider;
with MSSyst.IO.TextWriter;
with MSSyst.MarshalByRefObject;
limited with MSSyst.Runtime.Remoting.ObjRef;
limited with MSSyst.String;
limited with MSSyst.Text.Encoding;
limited with MSSyst.Text.StringBuilder;
limited with MSSyst.Type_k;
package MSSyst.IO.StringWriter is
   type Typ is new MSSyst.IO.TextWriter.Typ
         and MSSyst.IDisposable.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_StringWriter(
      This : Ref := null;
      sb : access MSSyst.Text.StringBuilder.Typ'Class;
      formatProvider : access MSSyst.IFormatProvider.Typ'Class) return Ref;
   function new_StringWriter(
      This : Ref := null) return Ref;
   function new_StringWriter(
      This : Ref := null;
      formatProvider : access MSSyst.IFormatProvider.Typ'Class) return Ref;
   function new_StringWriter(
      This : Ref := null;
      sb : access MSSyst.Text.StringBuilder.Typ'Class) return Ref;
   procedure Close(
      This : access Typ);
   function get_Encoding(
      This : access Typ) return access MSSyst.Text.Encoding.Typ'Class;
   function GetStringBuilder(
      This : access Typ) return access MSSyst.Text.StringBuilder.Typ'Class;
   function ToString(
      This : access Typ) return access MSSyst.String.Typ'Class;
   procedure Write(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure Write(
      This : access Typ;
      buffer : MSIL_Types.Char_Arr;
      index : Integer;
      count : Integer);
   procedure Write(
      This : access Typ;
      value : Wide_Character);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_StringWriter);
   pragma Import(MSIL,Close,"Close");
   pragma Import(MSIL,get_Encoding,"get_Encoding");
   pragma Import(MSIL,GetStringBuilder,"GetStringBuilder");
   pragma Import(MSIL,ToString,"ToString");
   pragma Import(MSIL,Write,"Write");
end MSSyst.IO.StringWriter;
pragma Import(MSIL,MSSyst.IO.StringWriter,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.IO.StringWriter");
