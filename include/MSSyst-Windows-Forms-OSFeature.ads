-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.String;
limited with MSSyst.Type_k;
limited with MSSyst.Version;
with MSSyst.Windows.Forms.FeatureSupport;
with MSSyst.Windows.Forms.IFeatureSupport;
limited with MSSyst.Windows.Forms.SystemParameter;
package MSSyst.Windows.Forms.OSFeature is
   type Typ is new MSSyst.Windows.Forms.FeatureSupport.Typ
         and MSSyst.Windows.Forms.IFeatureSupport.Typ
   with record
      null;
   end record;
   LayeredWindows : access MSSyst.Object.Typ'Class;
   pragma Import(MSIL,LayeredWindows,"LayeredWindows");
   Themes : access MSSyst.Object.Typ'Class;
   pragma Import(MSIL,Themes,"Themes");
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function get_Feature return access MSSyst.Windows.Forms.OSFeature.Typ'Class;
   function GetVersionPresent(
      This : access Typ;
      feature : access MSSyst.Object.Typ'Class) return access MSSyst.Version.Typ'Class;
   function IsPresent(
      enumVal : MSSyst.Windows.Forms.SystemParameter.Valuetype) return Standard.Boolean;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,get_Feature,"get_Feature");
   pragma Import(MSIL,GetVersionPresent,"GetVersionPresent");
   pragma Import(MSIL,IsPresent,"IsPresent");
end MSSyst.Windows.Forms.OSFeature;
pragma Import(MSIL,MSSyst.Windows.Forms.OSFeature,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System.Windows.Forms]System.Windows.Forms.OSFeature");
