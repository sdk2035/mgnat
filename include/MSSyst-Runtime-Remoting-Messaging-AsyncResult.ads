-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.IAsyncResult;
limited with MSSyst.Runtime.Remoting.Messaging.IMessageCtrl;
with MSSyst.Runtime.Remoting.Messaging.IMessageSink;
limited with MSSyst.Runtime.Remoting.Messaging.IMessage;
limited with MSSyst.String;
limited with MSSyst.Threading.WaitHandle;
limited with MSSyst.Type_k;
package MSSyst.Runtime.Remoting.Messaging.AsyncResult is
   type Typ is new MSSyst.Object.Typ
         and MSSyst.IAsyncResult.Typ
         and MSSyst.Runtime.Remoting.Messaging.IMessageSink.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function AsyncProcessMessage(
      This : access Typ;
      msg : access MSSyst.Runtime.Remoting.Messaging.IMessage.Typ'Class;
      replySink : access MSSyst.Runtime.Remoting.Messaging.IMessageSink.Typ'Class) return access MSSyst.Runtime.Remoting.Messaging.IMessageCtrl.Typ'Class;
   function get_AsyncDelegate(
      This : access Typ) return access MSSyst.Object.Typ'Class;
   function get_AsyncState(
      This : access Typ) return access MSSyst.Object.Typ'Class;
   function get_AsyncWaitHandle(
      This : access Typ) return access MSSyst.Threading.WaitHandle.Typ'Class;
   function get_CompletedSynchronously(
      This : access Typ) return Standard.Boolean;
   function get_EndInvokeCalled(
      This : access Typ) return Standard.Boolean;
   function get_IsCompleted(
      This : access Typ) return Standard.Boolean;
   function get_NextSink(
      This : access Typ) return access MSSyst.Runtime.Remoting.Messaging.IMessageSink.Typ'Class;
   function GetReplyMessage(
      This : access Typ) return access MSSyst.Runtime.Remoting.Messaging.IMessage.Typ'Class;
   procedure set_EndInvokeCalled(
      This : access Typ;
      value : Standard.Boolean);
   procedure SetMessageCtrl(
      This : access Typ;
      mc : access MSSyst.Runtime.Remoting.Messaging.IMessageCtrl.Typ'Class);
   function SyncProcessMessage(
      This : access Typ;
      msg : access MSSyst.Runtime.Remoting.Messaging.IMessage.Typ'Class) return access MSSyst.Runtime.Remoting.Messaging.IMessage.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,AsyncProcessMessage,"AsyncProcessMessage");
   pragma Import(MSIL,get_AsyncDelegate,"get_AsyncDelegate");
   pragma Import(MSIL,get_AsyncState,"get_AsyncState");
   pragma Import(MSIL,get_AsyncWaitHandle,"get_AsyncWaitHandle");
   pragma Import(MSIL,get_CompletedSynchronously,"get_CompletedSynchronously");
   pragma Import(MSIL,get_EndInvokeCalled,"get_EndInvokeCalled");
   pragma Import(MSIL,get_IsCompleted,"get_IsCompleted");
   pragma Import(MSIL,get_NextSink,"get_NextSink");
   pragma Import(MSIL,GetReplyMessage,"GetReplyMessage");
   pragma Import(MSIL,set_EndInvokeCalled,"set_EndInvokeCalled");
   pragma Import(MSIL,SetMessageCtrl,"SetMessageCtrl");
   pragma Import(MSIL,SyncProcessMessage,"SyncProcessMessage");
end MSSyst.Runtime.Remoting.Messaging.AsyncResult;
pragma Import(MSIL,MSSyst.Runtime.Remoting.Messaging.AsyncResult,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Runtime.Remoting.Messaging.AsyncResult");
