-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Security.Principal.IdentityReference;
limited with MSSyst.Security.Principal.WellKnownSidType;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.Principal.SecurityIdentifier is
   type Typ is new MSSyst.Security.Principal.IdentityReference.Typ   with record
      null;
   end record;
   MinBinaryLength : Integer;
   pragma Import(MSIL,MinBinaryLength,"MinBinaryLength");
   MaxBinaryLength : Integer;
   pragma Import(MSIL,MaxBinaryLength,"MaxBinaryLength");
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_SecurityIdentifier(
      This : Ref := null;
      sddlForm : access MSSyst.String.Typ'Class) return Ref;
   function new_SecurityIdentifier(
      This : Ref := null;
      binaryForm : MSIL_Types.unsigned_int8_Arr;
      offset : Integer) return Ref;
   function new_SecurityIdentifier(
      This : Ref := null;
      binaryForm : MSIL_Types.native_int) return Ref;
   function new_SecurityIdentifier(
      This : Ref := null;
      sidType : MSSyst.Security.Principal.WellKnownSidType.Valuetype;
      domainSid : access MSSyst.Security.Principal.SecurityIdentifier.Typ'Class) return Ref;
   function CompareTo(
      This : access Typ;
      sid : access MSSyst.Security.Principal.SecurityIdentifier.Typ'Class) return Integer;
   function Equals(
      This : access Typ;
      sid : access MSSyst.Security.Principal.SecurityIdentifier.Typ'Class) return Standard.Boolean;
   function Equals(
      This : access Typ;
      o : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function get_AccountDomainSid(
      This : access Typ) return access MSSyst.Security.Principal.SecurityIdentifier.Typ'Class;
   function get_BinaryLength(
      This : access Typ) return Integer;
   function get_Value(
      This : access Typ) return access MSSyst.String.Typ'Class;
   procedure GetBinaryForm(
      This : access Typ;
      binaryForm : MSIL_Types.unsigned_int8_Arr;
      offset : Integer);
   function GetHashCode(
      This : access Typ) return Integer;
   function IsAccountSid(
      This : access Typ) return Standard.Boolean;
   function IsEqualDomainSid(
      This : access Typ;
      sid : access MSSyst.Security.Principal.SecurityIdentifier.Typ'Class) return Standard.Boolean;
   function IsValidTargetType(
      This : access Typ;
      targetType : access MSSyst.Type_k.Typ'Class) return Standard.Boolean;
   function IsWellKnown(
      This : access Typ;
      type_k : MSSyst.Security.Principal.WellKnownSidType.Valuetype) return Standard.Boolean;
   function op_Equality(
      left : access MSSyst.Security.Principal.SecurityIdentifier.Typ'Class;
      right : access MSSyst.Security.Principal.SecurityIdentifier.Typ'Class) return Standard.Boolean;
   function op_Inequality(
      left : access MSSyst.Security.Principal.SecurityIdentifier.Typ'Class;
      right : access MSSyst.Security.Principal.SecurityIdentifier.Typ'Class) return Standard.Boolean;
   function ToString(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function Translate(
      This : access Typ;
      targetType : access MSSyst.Type_k.Typ'Class) return access MSSyst.Security.Principal.IdentityReference.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_SecurityIdentifier);
   pragma Import(MSIL,CompareTo,"CompareTo");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_AccountDomainSid,"get_AccountDomainSid");
   pragma Import(MSIL,get_BinaryLength,"get_BinaryLength");
   pragma Import(MSIL,get_Value,"get_Value");
   pragma Import(MSIL,GetBinaryForm,"GetBinaryForm");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,IsAccountSid,"IsAccountSid");
   pragma Import(MSIL,IsEqualDomainSid,"IsEqualDomainSid");
   pragma Import(MSIL,IsValidTargetType,"IsValidTargetType");
   pragma Import(MSIL,IsWellKnown,"IsWellKnown");
   pragma Import(MSIL,op_Equality,"op_Equality");
   pragma Import(MSIL,op_Inequality,"op_Inequality");
   pragma Import(MSIL,ToString,"ToString");
   pragma Import(MSIL,Translate,"Translate");
end MSSyst.Security.Principal.SecurityIdentifier;
pragma Import(MSIL,MSSyst.Security.Principal.SecurityIdentifier,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.Principal.SecurityIdentifier");
