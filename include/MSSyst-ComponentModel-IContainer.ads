-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.ComponentModel.ComponentCollection;
limited with MSSyst.ComponentModel.IComponent;
with MSSyst.IDisposable;
limited with MSSyst.String;
package MSSyst.ComponentModel.IContainer is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure Add(
      This : access Typ;
      component : access MSSyst.ComponentModel.IComponent.Typ'Class;
      name : access MSSyst.String.Typ'Class) is abstract;
   procedure Add(
      This : access Typ;
      component : access MSSyst.ComponentModel.IComponent.Typ'Class) is abstract;
   function get_Components(
      This : access Typ) return access MSSyst.ComponentModel.ComponentCollection.Typ'Class is abstract;
   procedure Remove(
      This : access Typ;
      component : access MSSyst.ComponentModel.IComponent.Typ'Class) is abstract;
private
   pragma Import(MSIL,Add,"Add");
   pragma Import(MSIL,get_Components,"get_Components");
   pragma Import(MSIL,Remove,"Remove");
end MSSyst.ComponentModel.IContainer;
pragma Import(MSIL,MSSyst.ComponentModel.IContainer,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.ComponentModel.IContainer");
