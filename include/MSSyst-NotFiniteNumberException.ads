-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.ArithmeticException;
limited with MSSyst.Collections.IDictionary;
with MSSyst.Exception_k;
limited with MSSyst.Reflection.MethodBase;
with MSSyst.Runtime.InteropServices.uException;
with MSSyst.Runtime.Serialization.ISerializable;
limited with MSSyst.Runtime.Serialization.SerializationInfo;
limited with MSSyst.Runtime.Serialization.StreamingContext;
limited with MSSyst.String;
with MSSyst.SystemException;
limited with MSSyst.Type_k;
package MSSyst.NotFiniteNumberException is
   type Typ is new MSSyst.ArithmeticException.Typ
         and MSSyst.Runtime.Serialization.ISerializable.Typ
         and MSSyst.Runtime.InteropServices.uException.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_NotFiniteNumberException(
      This : Ref := null) return Ref;
   function new_NotFiniteNumberException(
      This : Ref := null;
      offendingNumber : Long_Float) return Ref;
   function new_NotFiniteNumberException(
      This : Ref := null;
      message : access MSSyst.String.Typ'Class) return Ref;
   function new_NotFiniteNumberException(
      This : Ref := null;
      message : access MSSyst.String.Typ'Class;
      offendingNumber : Long_Float) return Ref;
   function new_NotFiniteNumberException(
      This : Ref := null;
      message : access MSSyst.String.Typ'Class;
      innerException : access MSSyst.Exception_k.Typ'Class) return Ref;
   function new_NotFiniteNumberException(
      This : Ref := null;
      message : access MSSyst.String.Typ'Class;
      offendingNumber : Long_Float;
      innerException : access MSSyst.Exception_k.Typ'Class) return Ref;
   function get_OffendingNumber(
      This : access Typ) return Long_Float;
   procedure GetObjectData(
      This : access Typ;
      info : access MSSyst.Runtime.Serialization.SerializationInfo.Typ'Class;
      context : MSSyst.Runtime.Serialization.StreamingContext.Valuetype);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_NotFiniteNumberException);
   pragma Import(MSIL,get_OffendingNumber,"get_OffendingNumber");
   pragma Import(MSIL,GetObjectData,"GetObjectData");
end MSSyst.NotFiniteNumberException;
pragma Import(MSIL,MSSyst.NotFiniteNumberException,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.NotFiniteNumberException");
