-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Collections.IEnumerable;
generic
   type TKey is private;
   type TValue is private;
package MSSyst.Collections.Generic_k.IDictionary is
   type TKey_Array is array(Integer range <>) of TKey;
   type TKey_Ref is access all TKey;
   type TValue_Array is array(Integer range <>) of TValue;
   type TValue_Ref is access all TValue;
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure Add(
      This : access Typ;
      key : TKey;
      value : TValue) is abstract;
   function ContainsKey(
      This : access Typ;
      key : TKey) return Standard.Boolean is abstract;
   function get_Item(
      This : access Typ;
      key : TKey) return TValue is abstract;
   function Remove(
      This : access Typ;
      key : TKey) return Standard.Boolean is abstract;
   procedure set_Item(
      This : access Typ;
      key : TKey;
      value : TValue) is abstract;
   function TryGetValue(
      This : access Typ;
      key : TKey;
      value : TValue_Ref) return Standard.Boolean is abstract;
private
   pragma Import(MSIL,Add,"Add");
   pragma Import(MSIL,ContainsKey,"ContainsKey");
   pragma Import(MSIL,get_Item,"get_Item");
   pragma Import(MSIL,Remove,"Remove");
   pragma Import(MSIL,set_Item,"set_Item");
   pragma Import(MSIL,TryGetValue,"TryGetValue");
end MSSyst.Collections.Generic_k.IDictionary;
pragma Import(MSIL,MSSyst.Collections.Generic_k.IDictionary,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Collections.Generic.IDictionary`2");
