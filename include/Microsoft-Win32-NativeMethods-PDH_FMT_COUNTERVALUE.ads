-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with Microsoft.Win32.NativeMethods;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package Microsoft.Win32.NativeMethods.PDH_FMT_COUNTERVALUE is
   type Typ is new MSSyst.Object.Typ   with record
      CStatus : Integer;
      pragma Import(MSIL,CStatus,"CStatus");
      data : Long_Float;
      pragma Import(MSIL,data,"data");
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_PDH_FMT_COUNTERVALUE(
      This : Ref := null) return Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_PDH_FMT_COUNTERVALUE);
end Microsoft.Win32.NativeMethods.PDH_FMT_COUNTERVALUE;
pragma Import(MSIL,Microsoft.Win32.NativeMethods.PDH_FMT_COUNTERVALUE,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]Microsoft.Win32.NativeMethods/PDH_FMT_COUNTERVALUE");
