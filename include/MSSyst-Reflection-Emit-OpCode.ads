-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Reflection.Emit.FlowControl;
limited with MSSyst.Reflection.Emit.OpCodeType;
limited with MSSyst.Reflection.Emit.OperandType;
limited with MSSyst.Reflection.Emit.StackBehaviour;
limited with MSSyst.String;
limited with MSSyst.Type_k;
with MSSyst.ValueType;
package MSSyst.Reflection.Emit.OpCode is
   type ValueType is new MSSyst.ValueType.Typ with null record;
   type ValueType_Arr is array (Natural range <>) of ValueType; -- start at 0
   type ValueType_Array is access all ValueType_Arr;
   type ValueType_addrof is access all ValueType;
   type ValueType_array_addrof is access all ValueType_Array;
   function Equals(
      This : Valuetype;
      obj : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function Equals(
      This : Valuetype;
      obj : MSSyst.Reflection.Emit.OpCode.Valuetype) return Standard.Boolean;
   function get_FlowControl(
      This : Valuetype) return MSSyst.Reflection.Emit.FlowControl.Valuetype;
   function get_Name(
      This : Valuetype) return access MSSyst.String.Typ'Class;
   function get_OpCodeType(
      This : Valuetype) return MSSyst.Reflection.Emit.OpCodeType.Valuetype;
   function get_OperandType(
      This : Valuetype) return MSSyst.Reflection.Emit.OperandType.Valuetype;
   function get_Size(
      This : Valuetype) return Integer;
   function get_StackBehaviourPop(
      This : Valuetype) return MSSyst.Reflection.Emit.StackBehaviour.Valuetype;
   function get_StackBehaviourPush(
      This : Valuetype) return MSSyst.Reflection.Emit.StackBehaviour.Valuetype;
   function get_Value(
      This : Valuetype) return MSIL_Types.int16;
   function GetHashCode(
      This : Valuetype) return Integer;
   function op_Equality(
      a : MSSyst.Reflection.Emit.OpCode.Valuetype;
      b : MSSyst.Reflection.Emit.OpCode.Valuetype) return Standard.Boolean;
   function op_Inequality(
      a : MSSyst.Reflection.Emit.OpCode.Valuetype;
      b : MSSyst.Reflection.Emit.OpCode.Valuetype) return Standard.Boolean;
   function ToString(
      This : Valuetype) return access MSSyst.String.Typ'Class;
private
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_FlowControl,"get_FlowControl");
   pragma Import(MSIL,get_Name,"get_Name");
   pragma Import(MSIL,get_OpCodeType,"get_OpCodeType");
   pragma Import(MSIL,get_OperandType,"get_OperandType");
   pragma Import(MSIL,get_Size,"get_Size");
   pragma Import(MSIL,get_StackBehaviourPop,"get_StackBehaviourPop");
   pragma Import(MSIL,get_StackBehaviourPush,"get_StackBehaviourPush");
   pragma Import(MSIL,get_Value,"get_Value");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,op_Equality,"op_Equality");
   pragma Import(MSIL,op_Inequality,"op_Inequality");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Reflection.Emit.OpCode;
pragma Import(MSIL,MSSyst.Reflection.Emit.OpCode,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Reflection.Emit.OpCode");
