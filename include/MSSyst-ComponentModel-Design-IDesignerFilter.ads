-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Collections.IDictionary;
package MSSyst.ComponentModel.Design.IDesignerFilter is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure PostFilterAttributes(
      This : access Typ;
      attributes : access MSSyst.Collections.IDictionary.Typ'Class) is abstract;
   procedure PostFilterEvents(
      This : access Typ;
      events : access MSSyst.Collections.IDictionary.Typ'Class) is abstract;
   procedure PostFilterProperties(
      This : access Typ;
      properties : access MSSyst.Collections.IDictionary.Typ'Class) is abstract;
   procedure PreFilterAttributes(
      This : access Typ;
      attributes : access MSSyst.Collections.IDictionary.Typ'Class) is abstract;
   procedure PreFilterEvents(
      This : access Typ;
      events : access MSSyst.Collections.IDictionary.Typ'Class) is abstract;
   procedure PreFilterProperties(
      This : access Typ;
      properties : access MSSyst.Collections.IDictionary.Typ'Class) is abstract;
private
   pragma Import(MSIL,PostFilterAttributes,"PostFilterAttributes");
   pragma Import(MSIL,PostFilterEvents,"PostFilterEvents");
   pragma Import(MSIL,PostFilterProperties,"PostFilterProperties");
   pragma Import(MSIL,PreFilterAttributes,"PreFilterAttributes");
   pragma Import(MSIL,PreFilterEvents,"PreFilterEvents");
   pragma Import(MSIL,PreFilterProperties,"PreFilterProperties");
end MSSyst.ComponentModel.Design.IDesignerFilter;
pragma Import(MSIL,MSSyst.ComponentModel.Design.IDesignerFilter,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.ComponentModel.Design.IDesignerFilter");
