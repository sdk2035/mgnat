-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.String;
limited with MSSyst.Type_k;
limited with MSSyst.Version;
package MSSyst.ApplicationId is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_ApplicationId(
      This : Ref := null;
      publicKeyToken : MSIL_Types.unsigned_int8_Arr;
      name : access MSSyst.String.Typ'Class;
      version : access MSSyst.Version.Typ'Class;
      processorArchitecture : access MSSyst.String.Typ'Class;
      culture : access MSSyst.String.Typ'Class) return Ref;
   function Copy(
      This : access Typ) return access MSSyst.ApplicationId.Typ'Class;
   function Equals(
      This : access Typ;
      o : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function get_Culture(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_Name(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_ProcessorArchitecture(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_PublicKeyToken(
      This : access Typ) return MSIL_Types.unsigned_int8_Array;
   function get_Version(
      This : access Typ) return access MSSyst.Version.Typ'Class;
   function GetHashCode(
      This : access Typ) return Integer;
   function ToString(
      This : access Typ) return access MSSyst.String.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_ApplicationId);
   pragma Import(MSIL,Copy,"Copy");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_Culture,"get_Culture");
   pragma Import(MSIL,get_Name,"get_Name");
   pragma Import(MSIL,get_ProcessorArchitecture,"get_ProcessorArchitecture");
   pragma Import(MSIL,get_PublicKeyToken,"get_PublicKeyToken");
   pragma Import(MSIL,get_Version,"get_Version");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.ApplicationId;
pragma Import(MSIL,MSSyst.ApplicationId,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.ApplicationId");
