-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.CodeDom.Compiler.CompilerErrorCollection;
limited with MSSyst.CodeDom.Compiler.TempFileCollection;
limited with MSSyst.Collections.Specialized.StringCollection;
limited with MSSyst.Reflection.Assembly;
limited with MSSyst.Security.Policy.Evidence;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.CodeDom.Compiler.CompilerResults is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_CompilerResults(
      This : Ref := null;
      tempFiles : access MSSyst.CodeDom.Compiler.TempFileCollection.Typ'Class) return Ref;
   function get_CompiledAssembly(
      This : access Typ) return access MSSyst.Reflection.Assembly.Typ'Class;
   function get_Errors(
      This : access Typ) return access MSSyst.CodeDom.Compiler.CompilerErrorCollection.Typ'Class;
   function get_Evidence(
      This : access Typ) return access MSSyst.Security.Policy.Evidence.Typ'Class;
   function get_NativeCompilerReturnValue(
      This : access Typ) return Integer;
   function get_Output(
      This : access Typ) return access MSSyst.Collections.Specialized.StringCollection.Typ'Class;
   function get_PathToAssembly(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_TempFiles(
      This : access Typ) return access MSSyst.CodeDom.Compiler.TempFileCollection.Typ'Class;
   procedure set_CompiledAssembly(
      This : access Typ;
      value : access MSSyst.Reflection.Assembly.Typ'Class);
   procedure set_Evidence(
      This : access Typ;
      value : access MSSyst.Security.Policy.Evidence.Typ'Class);
   procedure set_NativeCompilerReturnValue(
      This : access Typ;
      value : Integer);
   procedure set_PathToAssembly(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_TempFiles(
      This : access Typ;
      value : access MSSyst.CodeDom.Compiler.TempFileCollection.Typ'Class);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_CompilerResults);
   pragma Import(MSIL,get_CompiledAssembly,"get_CompiledAssembly");
   pragma Import(MSIL,get_Errors,"get_Errors");
   pragma Import(MSIL,get_Evidence,"get_Evidence");
   pragma Import(MSIL,get_NativeCompilerReturnValue,"get_NativeCompilerReturnValue");
   pragma Import(MSIL,get_Output,"get_Output");
   pragma Import(MSIL,get_PathToAssembly,"get_PathToAssembly");
   pragma Import(MSIL,get_TempFiles,"get_TempFiles");
   pragma Import(MSIL,set_CompiledAssembly,"set_CompiledAssembly");
   pragma Import(MSIL,set_Evidence,"set_Evidence");
   pragma Import(MSIL,set_NativeCompilerReturnValue,"set_NativeCompilerReturnValue");
   pragma Import(MSIL,set_PathToAssembly,"set_PathToAssembly");
   pragma Import(MSIL,set_TempFiles,"set_TempFiles");
end MSSyst.CodeDom.Compiler.CompilerResults;
pragma Import(MSIL,MSSyst.CodeDom.Compiler.CompilerResults,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.CodeDom.Compiler.CompilerResults");
