-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Runtime.Serialization.Formatters.ServerFault is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_ServerFault(
      This : Ref := null;
      exceptionType : access MSSyst.String.Typ'Class;
      message : access MSSyst.String.Typ'Class;
      stackTrace : access MSSyst.String.Typ'Class) return Ref;
   function get_ExceptionMessage(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_ExceptionType(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_StackTrace(
      This : access Typ) return access MSSyst.String.Typ'Class;
   procedure set_ExceptionMessage(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_ExceptionType(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_StackTrace(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_ServerFault);
   pragma Import(MSIL,get_ExceptionMessage,"get_ExceptionMessage");
   pragma Import(MSIL,get_ExceptionType,"get_ExceptionType");
   pragma Import(MSIL,get_StackTrace,"get_StackTrace");
   pragma Import(MSIL,set_ExceptionMessage,"set_ExceptionMessage");
   pragma Import(MSIL,set_ExceptionType,"set_ExceptionType");
   pragma Import(MSIL,set_StackTrace,"set_StackTrace");
end MSSyst.Runtime.Serialization.Formatters.ServerFault;
pragma Import(MSIL,MSSyst.Runtime.Serialization.Formatters.ServerFault,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Runtime.Serialization.Formatters.ServerFault");
