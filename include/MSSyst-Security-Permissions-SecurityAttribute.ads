-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Attribute;
with MSSyst.Runtime.InteropServices.uAttribute;
limited with MSSyst.Security.IPermission;
limited with MSSyst.Security.Permissions.SecurityAction;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.Permissions.SecurityAttribute is
   type Typ is abstract new MSSyst.Attribute.Typ
         and MSSyst.Runtime.InteropServices.uAttribute.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function CreatePermission(
      This : access Typ) return access MSSyst.Security.IPermission.Typ'Class;
   function get_Action(
      This : access Typ) return MSSyst.Security.Permissions.SecurityAction.Valuetype;
   function get_Unrestricted(
      This : access Typ) return Standard.Boolean;
   procedure set_Action(
      This : access Typ;
      value : MSSyst.Security.Permissions.SecurityAction.Valuetype);
   procedure set_Unrestricted(
      This : access Typ;
      value : Standard.Boolean);
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,CreatePermission,"CreatePermission");
   pragma Import(MSIL,get_Action,"get_Action");
   pragma Import(MSIL,get_Unrestricted,"get_Unrestricted");
   pragma Import(MSIL,set_Action,"set_Action");
   pragma Import(MSIL,set_Unrestricted,"set_Unrestricted");
end MSSyst.Security.Permissions.SecurityAttribute;
pragma Import(MSIL,MSSyst.Security.Permissions.SecurityAttribute,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.Permissions.SecurityAttribute");
