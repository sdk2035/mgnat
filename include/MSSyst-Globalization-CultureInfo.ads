-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Globalization.Calendar;
limited with MSSyst.Globalization.CompareInfo;
limited with MSSyst.Globalization.CultureTypes;
limited with MSSyst.Globalization.DateTimeFormatInfo;
limited with MSSyst.Globalization.NumberFormatInfo;
limited with MSSyst.Globalization.TextInfo;
with MSSyst.ICloneable;
with MSSyst.IFormatProvider;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Globalization.CultureInfo is
   type Typ is new MSSyst.Object.Typ
         and MSSyst.ICloneable.Typ
         and MSSyst.IFormatProvider.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_CultureInfo(
      This : Ref := null;
      name : access MSSyst.String.Typ'Class) return Ref;
   function new_CultureInfo(
      This : Ref := null;
      name : access MSSyst.String.Typ'Class;
      useUserOverride : Standard.Boolean) return Ref;
   function new_CultureInfo(
      This : Ref := null;
      culture : Integer) return Ref;
   function new_CultureInfo(
      This : Ref := null;
      culture : Integer;
      useUserOverride : Standard.Boolean) return Ref;
   procedure ClearCachedData(
      This : access Typ);
   function Clone(
      This : access Typ) return access MSSyst.Object.Typ'Class;
   function CreateSpecificCulture(
      name : access MSSyst.String.Typ'Class) return access MSSyst.Globalization.CultureInfo.Typ'Class;
   function Equals(
      This : access Typ;
      value : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function get_Calendar(
      This : access Typ) return access MSSyst.Globalization.Calendar.Typ'Class;
   function get_CompareInfo(
      This : access Typ) return access MSSyst.Globalization.CompareInfo.Typ'Class;
   function get_CultureTypes(
      This : access Typ) return MSSyst.Globalization.CultureTypes.Valuetype;
   function get_CurrentCulture return access MSSyst.Globalization.CultureInfo.Typ'Class;
   function get_CurrentUICulture return access MSSyst.Globalization.CultureInfo.Typ'Class;
   function get_DateTimeFormat(
      This : access Typ) return access MSSyst.Globalization.DateTimeFormatInfo.Typ'Class;
   function get_DisplayName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_EnglishName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_IetfLanguageTag(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_InstalledUICulture return access MSSyst.Globalization.CultureInfo.Typ'Class;
   function get_InvariantCulture return access MSSyst.Globalization.CultureInfo.Typ'Class;
   function get_IsNeutralCulture(
      This : access Typ) return Standard.Boolean;
   function get_IsReadOnly(
      This : access Typ) return Standard.Boolean;
   function get_KeyboardLayoutId(
      This : access Typ) return Integer;
   function get_LCID(
      This : access Typ) return Integer;
   function get_Name(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_NativeName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_NumberFormat(
      This : access Typ) return access MSSyst.Globalization.NumberFormatInfo.Typ'Class;
   function get_OptionalCalendars(
      This : access Typ) return access MSSyst.Globalization.Calendar.Ref_arr;
   function get_Parent(
      This : access Typ) return access MSSyst.Globalization.CultureInfo.Typ'Class;
   function get_TextInfo(
      This : access Typ) return access MSSyst.Globalization.TextInfo.Typ'Class;
   function get_ThreeLetterISOLanguageName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_ThreeLetterWindowsLanguageName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_TwoLetterISOLanguageName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_UseUserOverride(
      This : access Typ) return Standard.Boolean;
   function GetConsoleFallbackUICulture(
      This : access Typ) return access MSSyst.Globalization.CultureInfo.Typ'Class;
   function GetCultureInfo(
      culture : Integer) return access MSSyst.Globalization.CultureInfo.Typ'Class;
   function GetCultureInfo(
      name : access MSSyst.String.Typ'Class;
      altName : access MSSyst.String.Typ'Class) return access MSSyst.Globalization.CultureInfo.Typ'Class;
   function GetCultureInfo(
      name : access MSSyst.String.Typ'Class) return access MSSyst.Globalization.CultureInfo.Typ'Class;
   function GetCultureInfoByIetfLanguageTag(
      name : access MSSyst.String.Typ'Class) return access MSSyst.Globalization.CultureInfo.Typ'Class;
   function GetCultures(
      types : MSSyst.Globalization.CultureTypes.Valuetype) return access MSSyst.Globalization.CultureInfo.Ref_arr;
   function GetFormat(
      This : access Typ;
      formatType : access MSSyst.Type_k.Typ'Class) return access MSSyst.Object.Typ'Class;
   function GetHashCode(
      This : access Typ) return Integer;
   function ReadOnly(
      ci : access MSSyst.Globalization.CultureInfo.Typ'Class) return access MSSyst.Globalization.CultureInfo.Typ'Class;
   procedure set_DateTimeFormat(
      This : access Typ;
      value : access MSSyst.Globalization.DateTimeFormatInfo.Typ'Class);
   procedure set_NumberFormat(
      This : access Typ;
      value : access MSSyst.Globalization.NumberFormatInfo.Typ'Class);
   function ToString(
      This : access Typ) return access MSSyst.String.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_CultureInfo);
   pragma Import(MSIL,ClearCachedData,"ClearCachedData");
   pragma Import(MSIL,Clone,"Clone");
   pragma Import(MSIL,CreateSpecificCulture,"CreateSpecificCulture");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_Calendar,"get_Calendar");
   pragma Import(MSIL,get_CompareInfo,"get_CompareInfo");
   pragma Import(MSIL,get_CultureTypes,"get_CultureTypes");
   pragma Import(MSIL,get_CurrentCulture,"get_CurrentCulture");
   pragma Import(MSIL,get_CurrentUICulture,"get_CurrentUICulture");
   pragma Import(MSIL,get_DateTimeFormat,"get_DateTimeFormat");
   pragma Import(MSIL,get_DisplayName,"get_DisplayName");
   pragma Import(MSIL,get_EnglishName,"get_EnglishName");
   pragma Import(MSIL,get_IetfLanguageTag,"get_IetfLanguageTag");
   pragma Import(MSIL,get_InstalledUICulture,"get_InstalledUICulture");
   pragma Import(MSIL,get_InvariantCulture,"get_InvariantCulture");
   pragma Import(MSIL,get_IsNeutralCulture,"get_IsNeutralCulture");
   pragma Import(MSIL,get_IsReadOnly,"get_IsReadOnly");
   pragma Import(MSIL,get_KeyboardLayoutId,"get_KeyboardLayoutId");
   pragma Import(MSIL,get_LCID,"get_LCID");
   pragma Import(MSIL,get_Name,"get_Name");
   pragma Import(MSIL,get_NativeName,"get_NativeName");
   pragma Import(MSIL,get_NumberFormat,"get_NumberFormat");
   pragma Import(MSIL,get_OptionalCalendars,"get_OptionalCalendars");
   pragma Import(MSIL,get_Parent,"get_Parent");
   pragma Import(MSIL,get_TextInfo,"get_TextInfo");
   pragma Import(MSIL,get_ThreeLetterISOLanguageName,"get_ThreeLetterISOLanguageName");
   pragma Import(MSIL,get_ThreeLetterWindowsLanguageName,"get_ThreeLetterWindowsLanguageName");
   pragma Import(MSIL,get_TwoLetterISOLanguageName,"get_TwoLetterISOLanguageName");
   pragma Import(MSIL,get_UseUserOverride,"get_UseUserOverride");
   pragma Import(MSIL,GetConsoleFallbackUICulture,"GetConsoleFallbackUICulture");
   pragma Import(MSIL,GetCultureInfo,"GetCultureInfo");
   pragma Import(MSIL,GetCultureInfoByIetfLanguageTag,"GetCultureInfoByIetfLanguageTag");
   pragma Import(MSIL,GetCultures,"GetCultures");
   pragma Import(MSIL,GetFormat,"GetFormat");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,ReadOnly,"ReadOnly");
   pragma Import(MSIL,set_DateTimeFormat,"set_DateTimeFormat");
   pragma Import(MSIL,set_NumberFormat,"set_NumberFormat");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Globalization.CultureInfo;
pragma Import(MSIL,MSSyst.Globalization.CultureInfo,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Globalization.CultureInfo");
