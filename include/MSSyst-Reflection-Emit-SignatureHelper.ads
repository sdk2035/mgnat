-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Reflection.CallingConventions;
limited with MSSyst.Reflection.Module;
limited with MSSyst.Runtime.InteropServices.CallingConvention;
with MSSyst.Runtime.InteropServices.uSignatureHelper;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Reflection.Emit.SignatureHelper is
   type Typ is new MSSyst.Object.Typ
         and MSSyst.Runtime.InteropServices.uSignatureHelper.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure AddArgument(
      This : access Typ;
      argument : access MSSyst.Type_k.Typ'Class;
      pinned : Standard.Boolean);
   procedure AddArgument(
      This : access Typ;
      clsArgument : access MSSyst.Type_k.Typ'Class);
   procedure AddArgument(
      This : access Typ;
      argument : access MSSyst.Type_k.Typ'Class;
      requiredCustomModifiers : access MSSyst.Type_k.Ref_arr;
      optionalCustomModifiers : access MSSyst.Type_k.Ref_arr);
   procedure AddArguments(
      This : access Typ;
      arguments : access MSSyst.Type_k.Ref_arr;
      requiredCustomModifiers : access MSSyst.Type_k.Ref_array;
      optionalCustomModifiers : access MSSyst.Type_k.Ref_array);
   procedure AddSentinel(
      This : access Typ);
   function Equals(
      This : access Typ;
      obj : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function GetFieldSigHelper(
      mod_k : access MSSyst.Reflection.Module.Typ'Class) return access MSSyst.Reflection.Emit.SignatureHelper.Typ'Class;
   function GetHashCode(
      This : access Typ) return Integer;
   function GetLocalVarSigHelper return access MSSyst.Reflection.Emit.SignatureHelper.Typ'Class;
   function GetLocalVarSigHelper(
      mod_k : access MSSyst.Reflection.Module.Typ'Class) return access MSSyst.Reflection.Emit.SignatureHelper.Typ'Class;
   function GetMethodSigHelper(
      mod_k : access MSSyst.Reflection.Module.Typ'Class;
      callingConvention : MSSyst.Reflection.CallingConventions.Valuetype;
      returnType : access MSSyst.Type_k.Typ'Class) return access MSSyst.Reflection.Emit.SignatureHelper.Typ'Class;
   function GetMethodSigHelper(
      mod_k : access MSSyst.Reflection.Module.Typ'Class;
      returnType : access MSSyst.Type_k.Typ'Class;
      parameterTypes : access MSSyst.Type_k.Ref_arr) return access MSSyst.Reflection.Emit.SignatureHelper.Typ'Class;
   function GetMethodSigHelper(
      mod_k : access MSSyst.Reflection.Module.Typ'Class;
      unmanagedCallConv : MSSyst.Runtime.InteropServices.CallingConvention.Valuetype;
      returnType : access MSSyst.Type_k.Typ'Class) return access MSSyst.Reflection.Emit.SignatureHelper.Typ'Class;
   function GetMethodSigHelper(
      unmanagedCallingConvention : MSSyst.Runtime.InteropServices.CallingConvention.Valuetype;
      returnType : access MSSyst.Type_k.Typ'Class) return access MSSyst.Reflection.Emit.SignatureHelper.Typ'Class;
   function GetMethodSigHelper(
      callingConvention : MSSyst.Reflection.CallingConventions.Valuetype;
      returnType : access MSSyst.Type_k.Typ'Class) return access MSSyst.Reflection.Emit.SignatureHelper.Typ'Class;
   function GetPropertySigHelper(
      mod_k : access MSSyst.Reflection.Module.Typ'Class;
      returnType : access MSSyst.Type_k.Typ'Class;
      parameterTypes : access MSSyst.Type_k.Ref_arr) return access MSSyst.Reflection.Emit.SignatureHelper.Typ'Class;
   function GetPropertySigHelper(
      mod_k : access MSSyst.Reflection.Module.Typ'Class;
      returnType : access MSSyst.Type_k.Typ'Class;
      requiredReturnTypeCustomModifiers : access MSSyst.Type_k.Ref_arr;
      optionalReturnTypeCustomModifiers : access MSSyst.Type_k.Ref_arr;
      parameterTypes : access MSSyst.Type_k.Ref_arr;
      requiredParameterTypeCustomModifiers : access MSSyst.Type_k.Ref_array;
      optionalParameterTypeCustomModifiers : access MSSyst.Type_k.Ref_array) return access MSSyst.Reflection.Emit.SignatureHelper.Typ'Class;
   function GetSignature(
      This : access Typ) return MSIL_Types.unsigned_int8_Array;
   function ToString(
      This : access Typ) return access MSSyst.String.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,AddArgument,"AddArgument");
   pragma Import(MSIL,AddArguments,"AddArguments");
   pragma Import(MSIL,AddSentinel,"AddSentinel");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,GetFieldSigHelper,"GetFieldSigHelper");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetLocalVarSigHelper,"GetLocalVarSigHelper");
   pragma Import(MSIL,GetMethodSigHelper,"GetMethodSigHelper");
   pragma Import(MSIL,GetPropertySigHelper,"GetPropertySigHelper");
   pragma Import(MSIL,GetSignature,"GetSignature");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Reflection.Emit.SignatureHelper;
pragma Import(MSIL,MSSyst.Reflection.Emit.SignatureHelper,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Reflection.Emit.SignatureHelper");
