-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Guid;
limited with MSSyst.Reflection.Assembly;
limited with MSSyst.Reflection.Emit.AssemblyBuilder;
limited with MSSyst.Reflection.StrongNameKeyPair;
limited with MSSyst.Runtime.InteropServices.ITypeLibExporterNotifySink;
limited with MSSyst.Runtime.InteropServices.ITypeLibImporterNotifySink;
limited with MSSyst.Runtime.InteropServices.TypeLibExporterFlags;
limited with MSSyst.Runtime.InteropServices.TypeLibImporterFlags;
limited with MSSyst.String;
limited with MSSyst.Version;
package MSSyst.Runtime.InteropServices.ITypeLibConverter is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function ConvertAssemblyToTypeLib(
      This : access Typ;
      assembly : access MSSyst.Reflection.Assembly.Typ'Class;
      typeLibName : access MSSyst.String.Typ'Class;
      flags : MSSyst.Runtime.InteropServices.TypeLibExporterFlags.Valuetype;
      notifySink : access MSSyst.Runtime.InteropServices.ITypeLibExporterNotifySink.Typ'Class) return access MSSyst.Object.Typ'Class is abstract;
   function ConvertTypeLibToAssembly(
      This : access Typ;
      typeLib : access MSSyst.Object.Typ'Class;
      asmFileName : access MSSyst.String.Typ'Class;
      flags : Integer;
      notifySink : access MSSyst.Runtime.InteropServices.ITypeLibImporterNotifySink.Typ'Class;
      publicKey : MSIL_Types.unsigned_int8_Arr;
      keyPair : access MSSyst.Reflection.StrongNameKeyPair.Typ'Class;
      unsafeInterfaces : Standard.Boolean) return access MSSyst.Reflection.Emit.AssemblyBuilder.Typ'Class is abstract;
   function ConvertTypeLibToAssembly(
      This : access Typ;
      typeLib : access MSSyst.Object.Typ'Class;
      asmFileName : access MSSyst.String.Typ'Class;
      flags : MSSyst.Runtime.InteropServices.TypeLibImporterFlags.Valuetype;
      notifySink : access MSSyst.Runtime.InteropServices.ITypeLibImporterNotifySink.Typ'Class;
      publicKey : MSIL_Types.unsigned_int8_Arr;
      keyPair : access MSSyst.Reflection.StrongNameKeyPair.Typ'Class;
      asmNamespace : access MSSyst.String.Typ'Class;
      asmVersion : access MSSyst.Version.Typ'Class) return access MSSyst.Reflection.Emit.AssemblyBuilder.Typ'Class is abstract;
   function GetPrimaryInteropAssembly(
      This : access Typ;
      g : MSSyst.Guid.Valuetype;
      major : Integer;
      minor : Integer;
      lcid : Integer;
      asmName : access MSSyst.String.Ref;
      asmCodeBase : access MSSyst.String.Ref) return Standard.Boolean is abstract;
private
   pragma Import(MSIL,ConvertAssemblyToTypeLib,"ConvertAssemblyToTypeLib");
   pragma Import(MSIL,ConvertTypeLibToAssembly,"ConvertTypeLibToAssembly");
   pragma Import(MSIL,GetPrimaryInteropAssembly,"GetPrimaryInteropAssembly");
end MSSyst.Runtime.InteropServices.ITypeLibConverter;
pragma Import(MSIL,MSSyst.Runtime.InteropServices.ITypeLibConverter,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Runtime.InteropServices.ITypeLibConverter");
