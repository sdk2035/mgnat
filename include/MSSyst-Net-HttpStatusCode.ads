-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.IFormatProvider;
limited with MSSyst.String;
limited with MSSyst.TypeCode;
limited with MSSyst.Type_k;
package MSSyst.Net.HttpStatusCode is
   type ValueType is (
      Continue,
      SwitchingProtocols,
      OK,
      Created,
      Accepted,
      NonAuthoritativeInformation,
      NoContent,
      ResetContent,
      PartialContent,
      Ambiguous,
      Moved,
      Redirect,
      RedirectMethod,
      NotModified,
      UseProxy,
      Unused,
      RedirectKeepVerb,
      BadRequest,
      Unauthorized,
      PaymentRequired,
      Forbidden,
      NotFound,
      MethodNotAllowed,
      NotAcceptable,
      ProxyAuthenticationRequired,
      RequestTimeout,
      Conflict,
      Gone,
      LengthRequired,
      PreconditionFailed,
      RequestEntityTooLarge,
      RequestUriTooLong,
      UnsupportedMediaType,
      RequestedRangeNotSatisfiable,
      ExpectationFailed,
      InternalServerError,
      NotImplemented,
      BadGateway,
      ServiceUnavailable,
      GatewayTimeout,
      HttpVersionNotSupported);
   pragma Convention (MSIL, ValueType);
   for ValueType use (
      Continue =>  0,
      SwitchingProtocols =>  101,
      OK =>  200,
      Created =>  201,
      Accepted =>  202,
      NonAuthoritativeInformation =>  203,
      NoContent =>  204,
      ResetContent =>  205,
      PartialContent =>  206,
      Ambiguous =>  300,
      Moved =>  301,
      Redirect =>  302,
      RedirectMethod =>  303,
      NotModified =>  304,
      UseProxy =>  305,
      Unused =>  306,
      RedirectKeepVerb =>  307,
      BadRequest =>  400,
      Unauthorized =>  401,
      PaymentRequired =>  402,
      Forbidden =>  403,
      NotFound =>  404,
      MethodNotAllowed =>  405,
      NotAcceptable =>  406,
      ProxyAuthenticationRequired =>  407,
      RequestTimeout =>  408,
      Conflict =>  409,
      Gone =>  410,
      LengthRequired =>  411,
      PreconditionFailed =>  412,
      RequestEntityTooLarge =>  413,
      RequestUriTooLong =>  414,
      UnsupportedMediaType =>  415,
      RequestedRangeNotSatisfiable =>  416,
      ExpectationFailed =>  417,
      InternalServerError =>  500,
      NotImplemented =>  501,
      BadGateway =>  502,
      ServiceUnavailable =>  503,
      GatewayTimeout =>  504,
      HttpVersionNotSupported =>  505);
   type ValueType_Arr is array (Natural range <>) of ValueType; -- start at 0
   type ValueType_Array is access all ValueType_Arr;
   type ValueType_addrof is access all ValueType;
   type ValueType_array_addrof is access all ValueType_Array;
   MultipleChoices : constant Valuetype := Ambiguous;
   MovedPermanently : constant Valuetype := Moved;
   Found : constant Valuetype := Redirect;
   SeeOther : constant Valuetype := RedirectMethod;
   TemporaryRedirect : constant Valuetype := RedirectKeepVerb;
   function CompareTo(
      This : Valuetype;
      target : access MSSyst.Object.Typ'Class) return Integer;
   function Equals(
      This : Valuetype;
      obj : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function GetHashCode(
      This : Valuetype) return Integer;
   function GetType(
      This : Valuetype) return access MSSyst.Type_k.Typ'Class;
   function GetTypeCode(
      This : Valuetype) return MSSyst.TypeCode.Valuetype;
   function ToString(
      This : Valuetype;
      provider : access MSSyst.IFormatProvider.Typ'Class) return access MSSyst.String.Typ'Class;
   function ToString(
      This : Valuetype) return access MSSyst.String.Typ'Class;
   function ToString(
      This : Valuetype;
      format : access MSSyst.String.Typ'Class;
      provider : access MSSyst.IFormatProvider.Typ'Class) return access MSSyst.String.Typ'Class;
   function ToString(
      This : Valuetype;
      format : access MSSyst.String.Typ'Class) return access MSSyst.String.Typ'Class;
private
   pragma Import(MSIL,CompareTo,"CompareTo");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetType,"GetType");
   pragma Import(MSIL,GetTypeCode,"GetTypeCode");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Net.HttpStatusCode;
pragma Import(MSIL,MSSyst.Net.HttpStatusCode,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Net.HttpStatusCode");
