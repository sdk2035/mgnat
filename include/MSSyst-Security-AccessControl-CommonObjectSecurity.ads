-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Security.AccessControl.AccessControlModification;
limited with MSSyst.Security.AccessControl.AccessControlSections;
limited with MSSyst.Security.AccessControl.AccessControlType;
limited with MSSyst.Security.AccessControl.AccessRule;
limited with MSSyst.Security.AccessControl.AuditFlags;
limited with MSSyst.Security.AccessControl.AuditRule;
limited with MSSyst.Security.AccessControl.AuthorizationRuleCollection;
limited with MSSyst.Security.AccessControl.InheritanceFlags;
with MSSyst.Security.AccessControl.ObjectSecurity;
limited with MSSyst.Security.AccessControl.PropagationFlags;
limited with MSSyst.Security.Principal.IdentityReference;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.AccessControl.CommonObjectSecurity is
   type Typ is abstract new MSSyst.Security.AccessControl.ObjectSecurity.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function GetAccessRules(
      This : access Typ;
      includeExplicit : Standard.Boolean;
      includeInherited : Standard.Boolean;
      targetType : access MSSyst.Type_k.Typ'Class) return access MSSyst.Security.AccessControl.AuthorizationRuleCollection.Typ'Class;
   function GetAuditRules(
      This : access Typ;
      includeExplicit : Standard.Boolean;
      includeInherited : Standard.Boolean;
      targetType : access MSSyst.Type_k.Typ'Class) return access MSSyst.Security.AccessControl.AuthorizationRuleCollection.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,GetAccessRules,"GetAccessRules");
   pragma Import(MSIL,GetAuditRules,"GetAuditRules");
end MSSyst.Security.AccessControl.CommonObjectSecurity;
pragma Import(MSIL,MSSyst.Security.AccessControl.CommonObjectSecurity,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.AccessControl.CommonObjectSecurity");
