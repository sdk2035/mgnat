-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.CodeDom.CodeObject;
limited with MSSyst.CodeDom.CodeTypeParameter;
limited with MSSyst.CodeDom.CodeTypeReferenceCollection;
limited with MSSyst.CodeDom.CodeTypeReferenceOptions;
limited with MSSyst.Collections.IDictionary;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.CodeDom.CodeTypeReference is
   type Typ is new MSSyst.CodeDom.CodeObject.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_CodeTypeReference(
      This : Ref := null) return Ref;
   function new_CodeTypeReference(
      This : Ref := null;
      type_k : access MSSyst.Type_k.Typ'Class) return Ref;
   function new_CodeTypeReference(
      This : Ref := null;
      type_k : access MSSyst.Type_k.Typ'Class;
      codeTypeReferenceOption : MSSyst.CodeDom.CodeTypeReferenceOptions.Valuetype) return Ref;
   function new_CodeTypeReference(
      This : Ref := null;
      typeName : access MSSyst.String.Typ'Class;
      codeTypeReferenceOption : MSSyst.CodeDom.CodeTypeReferenceOptions.Valuetype) return Ref;
   function new_CodeTypeReference(
      This : Ref := null;
      typeName : access MSSyst.String.Typ'Class) return Ref;
   function new_CodeTypeReference(
      This : Ref := null;
      typeName : access MSSyst.String.Typ'Class;
      typeArguments : access MSSyst.CodeDom.CodeTypeReference.Ref_arr) return Ref;
   function new_CodeTypeReference(
      This : Ref := null;
      typeParameter : access MSSyst.CodeDom.CodeTypeParameter.Typ'Class) return Ref;
   function new_CodeTypeReference(
      This : Ref := null;
      baseType : access MSSyst.String.Typ'Class;
      rank : Integer) return Ref;
   function new_CodeTypeReference(
      This : Ref := null;
      arrayType : access MSSyst.CodeDom.CodeTypeReference.Typ'Class;
      rank : Integer) return Ref;
   function get_ArrayElementType(
      This : access Typ) return access MSSyst.CodeDom.CodeTypeReference.Typ'Class;
   function get_ArrayRank(
      This : access Typ) return Integer;
   function get_BaseType(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_Options(
      This : access Typ) return MSSyst.CodeDom.CodeTypeReferenceOptions.Valuetype;
   function get_TypeArguments(
      This : access Typ) return access MSSyst.CodeDom.CodeTypeReferenceCollection.Typ'Class;
   procedure set_ArrayElementType(
      This : access Typ;
      value : access MSSyst.CodeDom.CodeTypeReference.Typ'Class);
   procedure set_ArrayRank(
      This : access Typ;
      value : Integer);
   procedure set_BaseType(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_Options(
      This : access Typ;
      value : MSSyst.CodeDom.CodeTypeReferenceOptions.Valuetype);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_CodeTypeReference);
   pragma Import(MSIL,get_ArrayElementType,"get_ArrayElementType");
   pragma Import(MSIL,get_ArrayRank,"get_ArrayRank");
   pragma Import(MSIL,get_BaseType,"get_BaseType");
   pragma Import(MSIL,get_Options,"get_Options");
   pragma Import(MSIL,get_TypeArguments,"get_TypeArguments");
   pragma Import(MSIL,set_ArrayElementType,"set_ArrayElementType");
   pragma Import(MSIL,set_ArrayRank,"set_ArrayRank");
   pragma Import(MSIL,set_BaseType,"set_BaseType");
   pragma Import(MSIL,set_Options,"set_Options");
end MSSyst.CodeDom.CodeTypeReference;
pragma Import(MSIL,MSSyst.CodeDom.CodeTypeReference,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.CodeDom.CodeTypeReference");
