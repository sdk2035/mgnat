-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.ICloneable;
with MSSyst.Runtime.Serialization.IDeserializationCallback;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Globalization.TextInfo is
   type Typ is new MSSyst.Object.Typ
         and MSSyst.ICloneable.Typ
         and MSSyst.Runtime.Serialization.IDeserializationCallback.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function Clone(
      This : access Typ) return access MSSyst.Object.Typ'Class;
   function Equals(
      This : access Typ;
      obj : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function get_ANSICodePage(
      This : access Typ) return Integer;
   function get_CultureName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_EBCDICCodePage(
      This : access Typ) return Integer;
   function get_IsReadOnly(
      This : access Typ) return Standard.Boolean;
   function get_IsRightToLeft(
      This : access Typ) return Standard.Boolean;
   function get_LCID(
      This : access Typ) return Integer;
   function get_ListSeparator(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_MacCodePage(
      This : access Typ) return Integer;
   function get_OEMCodePage(
      This : access Typ) return Integer;
   function GetHashCode(
      This : access Typ) return Integer;
   function ReadOnly(
      textInfo : access MSSyst.Globalization.TextInfo.Typ'Class) return access MSSyst.Globalization.TextInfo.Typ'Class;
   procedure set_ListSeparator(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   function ToLower(
      This : access Typ;
      str : access MSSyst.String.Typ'Class) return access MSSyst.String.Typ'Class;
   function ToLower(
      This : access Typ;
      c : Wide_Character) return Wide_Character;
   function ToString(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function ToTitleCase(
      This : access Typ;
      str : access MSSyst.String.Typ'Class) return access MSSyst.String.Typ'Class;
   function ToUpper(
      This : access Typ;
      str : access MSSyst.String.Typ'Class) return access MSSyst.String.Typ'Class;
   function ToUpper(
      This : access Typ;
      c : Wide_Character) return Wide_Character;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,Clone,"Clone");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_ANSICodePage,"get_ANSICodePage");
   pragma Import(MSIL,get_CultureName,"get_CultureName");
   pragma Import(MSIL,get_EBCDICCodePage,"get_EBCDICCodePage");
   pragma Import(MSIL,get_IsReadOnly,"get_IsReadOnly");
   pragma Import(MSIL,get_IsRightToLeft,"get_IsRightToLeft");
   pragma Import(MSIL,get_LCID,"get_LCID");
   pragma Import(MSIL,get_ListSeparator,"get_ListSeparator");
   pragma Import(MSIL,get_MacCodePage,"get_MacCodePage");
   pragma Import(MSIL,get_OEMCodePage,"get_OEMCodePage");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,ReadOnly,"ReadOnly");
   pragma Import(MSIL,set_ListSeparator,"set_ListSeparator");
   pragma Import(MSIL,ToLower,"ToLower");
   pragma Import(MSIL,ToString,"ToString");
   pragma Import(MSIL,ToTitleCase,"ToTitleCase");
   pragma Import(MSIL,ToUpper,"ToUpper");
end MSSyst.Globalization.TextInfo;
pragma Import(MSIL,MSSyst.Globalization.TextInfo,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Globalization.TextInfo");
