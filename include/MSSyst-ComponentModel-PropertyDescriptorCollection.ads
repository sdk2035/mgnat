-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Array_k;
with MSSyst.Collections.ICollection;
limited with MSSyst.Collections.IComparer;
with MSSyst.Collections.IDictionary;
with MSSyst.Collections.IEnumerable;
limited with MSSyst.Collections.IEnumerator;
with MSSyst.Collections.IList;
limited with MSSyst.ComponentModel.PropertyDescriptor;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.ComponentModel.PropertyDescriptorCollection is
   type Typ is new MSSyst.Object.Typ
         and MSSyst.Collections.IList.Typ
         and MSSyst.Collections.ICollection.Typ
         and MSSyst.Collections.IEnumerable.Typ
         and MSSyst.Collections.IDictionary.Typ
   with record
      null;
   end record;
   Empty : access MSSyst.ComponentModel.PropertyDescriptorCollection.Typ'Class;
   pragma Import(MSIL,Empty,"Empty");
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_PropertyDescriptorCollection(
      This : Ref := null;
      properties : access MSSyst.ComponentModel.PropertyDescriptor.Ref_arr) return Ref;
   function new_PropertyDescriptorCollection(
      This : Ref := null;
      properties : access MSSyst.ComponentModel.PropertyDescriptor.Ref_arr;
      readOnly : Standard.Boolean) return Ref;
   function Add(
      This : access Typ;
      value : access MSSyst.ComponentModel.PropertyDescriptor.Typ'Class) return Integer;
   procedure Clear(
      This : access Typ);
   function Contains(
      This : access Typ;
      value : access MSSyst.ComponentModel.PropertyDescriptor.Typ'Class) return Standard.Boolean;
   procedure CopyTo(
      This : access Typ;
      array_k : access MSSyst.Array_k.Typ'Class;
      index : Integer);
   function Find(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      ignoreCase : Standard.Boolean) return access MSSyst.ComponentModel.PropertyDescriptor.Typ'Class;
   function get_Count(
      This : access Typ) return Integer;
   function get_Item(
      This : access Typ;
      name : access MSSyst.String.Typ'Class) return access MSSyst.ComponentModel.PropertyDescriptor.Typ'Class;
   function get_Item(
      This : access Typ;
      index : Integer) return access MSSyst.ComponentModel.PropertyDescriptor.Typ'Class;
   function GetEnumerator(
      This : access Typ) return access MSSyst.Collections.IEnumerator.Typ'Class;
   function IndexOf(
      This : access Typ;
      value : access MSSyst.ComponentModel.PropertyDescriptor.Typ'Class) return Integer;
   procedure Insert(
      This : access Typ;
      index : Integer;
      value : access MSSyst.ComponentModel.PropertyDescriptor.Typ'Class);
   procedure Remove(
      This : access Typ;
      value : access MSSyst.ComponentModel.PropertyDescriptor.Typ'Class);
   procedure RemoveAt(
      This : access Typ;
      index : Integer);
   function Sort(
      This : access Typ) return access MSSyst.ComponentModel.PropertyDescriptorCollection.Typ'Class;
   function Sort(
      This : access Typ;
      comparer : access MSSyst.Collections.IComparer.Typ'Class) return access MSSyst.ComponentModel.PropertyDescriptorCollection.Typ'Class;
   function Sort(
      This : access Typ;
      names : access MSSyst.String.Ref_arr;
      comparer : access MSSyst.Collections.IComparer.Typ'Class) return access MSSyst.ComponentModel.PropertyDescriptorCollection.Typ'Class;
   function Sort(
      This : access Typ;
      names : access MSSyst.String.Ref_arr) return access MSSyst.ComponentModel.PropertyDescriptorCollection.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_PropertyDescriptorCollection);
   pragma Import(MSIL,Add,"Add");
   pragma Import(MSIL,Clear,"Clear");
   pragma Import(MSIL,Contains,"Contains");
   pragma Import(MSIL,CopyTo,"CopyTo");
   pragma Import(MSIL,Find,"Find");
   pragma Import(MSIL,get_Count,"get_Count");
   pragma Import(MSIL,get_Item,"get_Item");
   pragma Import(MSIL,GetEnumerator,"GetEnumerator");
   pragma Import(MSIL,IndexOf,"IndexOf");
   pragma Import(MSIL,Insert,"Insert");
   pragma Import(MSIL,Remove,"Remove");
   pragma Import(MSIL,RemoveAt,"RemoveAt");
   pragma Import(MSIL,Sort,"Sort");
end MSSyst.ComponentModel.PropertyDescriptorCollection;
pragma Import(MSIL,MSSyst.ComponentModel.PropertyDescriptorCollection,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.ComponentModel.PropertyDescriptorCollection");
