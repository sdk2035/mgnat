-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.String;
limited with MSSyst.TimeSpan;
limited with MSSyst.Type_k;
package MSSyst.Runtime.Remoting.Lifetime.LifetimeServices is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_LifetimeServices(
      This : Ref := null) return Ref;
   function get_LeaseManagerPollTime return MSSyst.TimeSpan.Valuetype;
   function get_LeaseTime return MSSyst.TimeSpan.Valuetype;
   function get_RenewOnCallTime return MSSyst.TimeSpan.Valuetype;
   function get_SponsorshipTimeout return MSSyst.TimeSpan.Valuetype;
   procedure set_LeaseManagerPollTime(
      value : MSSyst.TimeSpan.Valuetype);
   procedure set_LeaseTime(
      value : MSSyst.TimeSpan.Valuetype);
   procedure set_RenewOnCallTime(
      value : MSSyst.TimeSpan.Valuetype);
   procedure set_SponsorshipTimeout(
      value : MSSyst.TimeSpan.Valuetype);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_LifetimeServices);
   pragma Import(MSIL,get_LeaseManagerPollTime,"get_LeaseManagerPollTime");
   pragma Import(MSIL,get_LeaseTime,"get_LeaseTime");
   pragma Import(MSIL,get_RenewOnCallTime,"get_RenewOnCallTime");
   pragma Import(MSIL,get_SponsorshipTimeout,"get_SponsorshipTimeout");
   pragma Import(MSIL,set_LeaseManagerPollTime,"set_LeaseManagerPollTime");
   pragma Import(MSIL,set_LeaseTime,"set_LeaseTime");
   pragma Import(MSIL,set_RenewOnCallTime,"set_RenewOnCallTime");
   pragma Import(MSIL,set_SponsorshipTimeout,"set_SponsorshipTimeout");
end MSSyst.Runtime.Remoting.Lifetime.LifetimeServices;
pragma Import(MSIL,MSSyst.Runtime.Remoting.Lifetime.LifetimeServices,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Runtime.Remoting.Lifetime.LifetimeServices");
