-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Guid;
with MSSyst.Runtime.InteropServices.ComTypes.DISPPARAMS;
with MSSyst.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS;
limited with MSSyst.Runtime.InteropServices.ComTypes.INVOKEKIND;
limited with MSSyst.Runtime.InteropServices.ComTypes.ITypeComp;
limited with MSSyst.Runtime.InteropServices.ComTypes.ITypeLib;
limited with MSSyst.String;
package MSSyst.Runtime.InteropServices.ComTypes.ITypeInfo is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure AddressOfMember(
      This : access Typ;
      memid : Integer;
      invKind : MSSyst.Runtime.InteropServices.ComTypes.INVOKEKIND.Valuetype;
      ppv : MSIL_Types.native_int_addrof) is abstract;
   procedure CreateInstance(
      This : access Typ;
      pUnkOuter : access MSSyst.Object.Typ'Class;
      riid : access MSSyst.Guid.Valuetype;
      ppvObj : access MSSyst.Object.Ref) is abstract;
   procedure GetContainingTypeLib(
      This : access Typ;
      ppTLB : access MSSyst.Runtime.InteropServices.ComTypes.ITypeLib.Ref;
      pIndex : MSIL_Types.Int32_addrof) is abstract;
   procedure GetDllEntry(
      This : access Typ;
      memid : Integer;
      invKind : MSSyst.Runtime.InteropServices.ComTypes.INVOKEKIND.Valuetype;
      pBstrDllName : MSIL_Types.native_int;
      pBstrName : MSIL_Types.native_int;
      pwOrdinal : MSIL_Types.native_int) is abstract;
   procedure GetDocumentation(
      This : access Typ;
      index : Integer;
      strName : access MSSyst.String.Ref;
      strDocString : access MSSyst.String.Ref;
      dwHelpContext : MSIL_Types.Int32_addrof;
      strHelpFile : access MSSyst.String.Ref) is abstract;
   procedure GetFuncDesc(
      This : access Typ;
      index : Integer;
      ppFuncDesc : MSIL_Types.native_int_addrof) is abstract;
   procedure GetIDsOfNames(
      This : access Typ;
      rgszNames : access MSSyst.String.Ref_arr;
      cNames : Integer;
      pMemId : MSIL_Types.Int32_Arr) is abstract;
   procedure GetImplTypeFlags(
      This : access Typ;
      index : Integer;
      pImplTypeFlags : access MSSyst.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS.Valuetype) is abstract;
   procedure GetMops(
      This : access Typ;
      memid : Integer;
      pBstrMops : access MSSyst.String.Ref) is abstract;
   procedure GetNames(
      This : access Typ;
      memid : Integer;
      rgBstrNames : access MSSyst.String.Ref_arr;
      cMaxNames : Integer;
      pcNames : MSIL_Types.Int32_addrof) is abstract;
   procedure GetRefTypeInfo(
      This : access Typ;
      hRef : Integer;
      ppTI : access MSSyst.Runtime.InteropServices.ComTypes.ITypeInfo.Ref) is abstract;
   procedure GetRefTypeOfImplType(
      This : access Typ;
      index : Integer;
      href : MSIL_Types.Int32_addrof) is abstract;
   procedure GetTypeAttr(
      This : access Typ;
      ppTypeAttr : MSIL_Types.native_int_addrof) is abstract;
   procedure GetTypeComp(
      This : access Typ;
      ppTComp : access MSSyst.Runtime.InteropServices.ComTypes.ITypeComp.Ref) is abstract;
   procedure GetVarDesc(
      This : access Typ;
      index : Integer;
      ppVarDesc : MSIL_Types.native_int_addrof) is abstract;
   procedure Invoke(
      This : access Typ;
      pvInstance : access MSSyst.Object.Typ'Class;
      memid : Integer;
      wFlags : MSIL_Types.int16;
      pDispParams : access MSSyst.Runtime.InteropServices.ComTypes.DISPPARAMS.Valuetype;
      pVarResult : MSIL_Types.native_int;
      pExcepInfo : MSIL_Types.native_int;
      puArgErr : MSIL_Types.Int32_addrof) is abstract;
   procedure ReleaseFuncDesc(
      This : access Typ;
      pFuncDesc : MSIL_Types.native_int) is abstract;
   procedure ReleaseTypeAttr(
      This : access Typ;
      pTypeAttr : MSIL_Types.native_int) is abstract;
   procedure ReleaseVarDesc(
      This : access Typ;
      pVarDesc : MSIL_Types.native_int) is abstract;
private
   pragma Import(MSIL,AddressOfMember,"AddressOfMember");
   pragma Import(MSIL,CreateInstance,"CreateInstance");
   pragma Import(MSIL,GetContainingTypeLib,"GetContainingTypeLib");
   pragma Import(MSIL,GetDllEntry,"GetDllEntry");
   pragma Import(MSIL,GetDocumentation,"GetDocumentation");
   pragma Import(MSIL,GetFuncDesc,"GetFuncDesc");
   pragma Import(MSIL,GetIDsOfNames,"GetIDsOfNames");
   pragma Import(MSIL,GetImplTypeFlags,"GetImplTypeFlags");
   pragma Import(MSIL,GetMops,"GetMops");
   pragma Import(MSIL,GetNames,"GetNames");
   pragma Import(MSIL,GetRefTypeInfo,"GetRefTypeInfo");
   pragma Import(MSIL,GetRefTypeOfImplType,"GetRefTypeOfImplType");
   pragma Import(MSIL,GetTypeAttr,"GetTypeAttr");
   pragma Import(MSIL,GetTypeComp,"GetTypeComp");
   pragma Import(MSIL,GetVarDesc,"GetVarDesc");
   pragma Import(MSIL,Invoke,"Invoke");
   pragma Import(MSIL,ReleaseFuncDesc,"ReleaseFuncDesc");
   pragma Import(MSIL,ReleaseTypeAttr,"ReleaseTypeAttr");
   pragma Import(MSIL,ReleaseVarDesc,"ReleaseVarDesc");
end MSSyst.Runtime.InteropServices.ComTypes.ITypeInfo;
pragma Import(MSIL,MSSyst.Runtime.InteropServices.ComTypes.ITypeInfo,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Runtime.InteropServices.ComTypes.ITypeInfo");
