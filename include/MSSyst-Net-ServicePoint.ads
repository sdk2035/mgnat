-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.DateTime;
limited with MSSyst.Net.BindIPEndPoint;
limited with MSSyst.Security.Cryptography.X509Certificates.X509Certificate;
limited with MSSyst.String;
limited with MSSyst.Type_k;
limited with MSSyst.Uri;
limited with MSSyst.Version;
package MSSyst.Net.ServicePoint is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function CloseConnectionGroup(
      This : access Typ;
      connectionGroupName : access MSSyst.String.Typ'Class) return Standard.Boolean;
   function get_Address(
      This : access Typ) return access MSSyst.Uri.Typ'Class;
   function get_BindIPEndPointDelegate(
      This : access Typ) return access MSSyst.Net.BindIPEndPoint.Typ'Class;
   function get_Certificate(
      This : access Typ) return access MSSyst.Security.Cryptography.X509Certificates.X509Certificate.Typ'Class;
   function get_ClientCertificate(
      This : access Typ) return access MSSyst.Security.Cryptography.X509Certificates.X509Certificate.Typ'Class;
   function get_ConnectionLeaseTimeout(
      This : access Typ) return Integer;
   function get_ConnectionLimit(
      This : access Typ) return Integer;
   function get_ConnectionName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_CurrentConnections(
      This : access Typ) return Integer;
   function get_Expect100Continue(
      This : access Typ) return Standard.Boolean;
   function get_IdleSince(
      This : access Typ) return MSSyst.DateTime.Valuetype;
   function get_MaxIdleTime(
      This : access Typ) return Integer;
   function get_ProtocolVersion(
      This : access Typ) return access MSSyst.Version.Typ'Class;
   function get_ReceiveBufferSize(
      This : access Typ) return Integer;
   function get_SupportsPipelining(
      This : access Typ) return Standard.Boolean;
   function get_UseNagleAlgorithm(
      This : access Typ) return Standard.Boolean;
   procedure set_BindIPEndPointDelegate(
      This : access Typ;
      value : access MSSyst.Net.BindIPEndPoint.Typ'Class);
   procedure set_ConnectionLeaseTimeout(
      This : access Typ;
      value : Integer);
   procedure set_ConnectionLimit(
      This : access Typ;
      value : Integer);
   procedure set_Expect100Continue(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_MaxIdleTime(
      This : access Typ;
      value : Integer);
   procedure set_ReceiveBufferSize(
      This : access Typ;
      value : Integer);
   procedure set_UseNagleAlgorithm(
      This : access Typ;
      value : Standard.Boolean);
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,CloseConnectionGroup,"CloseConnectionGroup");
   pragma Import(MSIL,get_Address,"get_Address");
   pragma Import(MSIL,get_BindIPEndPointDelegate,"get_BindIPEndPointDelegate");
   pragma Import(MSIL,get_Certificate,"get_Certificate");
   pragma Import(MSIL,get_ClientCertificate,"get_ClientCertificate");
   pragma Import(MSIL,get_ConnectionLeaseTimeout,"get_ConnectionLeaseTimeout");
   pragma Import(MSIL,get_ConnectionLimit,"get_ConnectionLimit");
   pragma Import(MSIL,get_ConnectionName,"get_ConnectionName");
   pragma Import(MSIL,get_CurrentConnections,"get_CurrentConnections");
   pragma Import(MSIL,get_Expect100Continue,"get_Expect100Continue");
   pragma Import(MSIL,get_IdleSince,"get_IdleSince");
   pragma Import(MSIL,get_MaxIdleTime,"get_MaxIdleTime");
   pragma Import(MSIL,get_ProtocolVersion,"get_ProtocolVersion");
   pragma Import(MSIL,get_ReceiveBufferSize,"get_ReceiveBufferSize");
   pragma Import(MSIL,get_SupportsPipelining,"get_SupportsPipelining");
   pragma Import(MSIL,get_UseNagleAlgorithm,"get_UseNagleAlgorithm");
   pragma Import(MSIL,set_BindIPEndPointDelegate,"set_BindIPEndPointDelegate");
   pragma Import(MSIL,set_ConnectionLeaseTimeout,"set_ConnectionLeaseTimeout");
   pragma Import(MSIL,set_ConnectionLimit,"set_ConnectionLimit");
   pragma Import(MSIL,set_Expect100Continue,"set_Expect100Continue");
   pragma Import(MSIL,set_MaxIdleTime,"set_MaxIdleTime");
   pragma Import(MSIL,set_ReceiveBufferSize,"set_ReceiveBufferSize");
   pragma Import(MSIL,set_UseNagleAlgorithm,"set_UseNagleAlgorithm");
end MSSyst.Net.ServicePoint;
pragma Import(MSIL,MSSyst.Net.ServicePoint,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Net.ServicePoint");
