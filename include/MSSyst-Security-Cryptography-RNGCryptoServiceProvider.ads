-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Security.Cryptography.CspParameters;
with MSSyst.Security.Cryptography.RandomNumberGenerator;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.Cryptography.RNGCryptoServiceProvider is
   type Typ is new MSSyst.Security.Cryptography.RandomNumberGenerator.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_RNGCryptoServiceProvider(
      This : Ref := null) return Ref;
   function new_RNGCryptoServiceProvider(
      This : Ref := null;
      str : access MSSyst.String.Typ'Class) return Ref;
   function new_RNGCryptoServiceProvider(
      This : Ref := null;
      rgb : MSIL_Types.unsigned_int8_Arr) return Ref;
   function new_RNGCryptoServiceProvider(
      This : Ref := null;
      cspParams : access MSSyst.Security.Cryptography.CspParameters.Typ'Class) return Ref;
   procedure GetBytes(
      This : access Typ;
      data : MSIL_Types.unsigned_int8_Arr);
   procedure GetNonZeroBytes(
      This : access Typ;
      data : MSIL_Types.unsigned_int8_Arr);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_RNGCryptoServiceProvider);
   pragma Import(MSIL,GetBytes,"GetBytes");
   pragma Import(MSIL,GetNonZeroBytes,"GetNonZeroBytes");
end MSSyst.Security.Cryptography.RNGCryptoServiceProvider;
pragma Import(MSIL,MSSyst.Security.Cryptography.RNGCryptoServiceProvider,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.Cryptography.RNGCryptoServiceProvider");
