-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Net.EndPoint;
limited with MSSyst.Net.IPAddress;
limited with MSSyst.Net.SocketAddress;
limited with MSSyst.Net.Sockets.AddressFamily;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Net.IPEndPoint is
   type Typ is new MSSyst.Net.EndPoint.Typ   with record
      null;
   end record;
   MinPort : Integer;
   pragma Import(MSIL,MinPort,"MinPort");
   MaxPort : Integer;
   pragma Import(MSIL,MaxPort,"MaxPort");
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_IPEndPoint(
      This : Ref := null;
      address : Long_Long_Integer;
      port : Integer) return Ref;
   function new_IPEndPoint(
      This : Ref := null;
      address : access MSSyst.Net.IPAddress.Typ'Class;
      port : Integer) return Ref;
   function Create(
      This : access Typ;
      socketAddress : access MSSyst.Net.SocketAddress.Typ'Class) return access MSSyst.Net.EndPoint.Typ'Class;
   function Equals(
      This : access Typ;
      comparand : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function get_Address(
      This : access Typ) return access MSSyst.Net.IPAddress.Typ'Class;
   function get_AddressFamily(
      This : access Typ) return MSSyst.Net.Sockets.AddressFamily.Valuetype;
   function get_Port(
      This : access Typ) return Integer;
   function GetHashCode(
      This : access Typ) return Integer;
   function Serialize(
      This : access Typ) return access MSSyst.Net.SocketAddress.Typ'Class;
   procedure set_Address(
      This : access Typ;
      value : access MSSyst.Net.IPAddress.Typ'Class);
   procedure set_Port(
      This : access Typ;
      value : Integer);
   function ToString(
      This : access Typ) return access MSSyst.String.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_IPEndPoint);
   pragma Import(MSIL,Create,"Create");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_Address,"get_Address");
   pragma Import(MSIL,get_AddressFamily,"get_AddressFamily");
   pragma Import(MSIL,get_Port,"get_Port");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,Serialize,"Serialize");
   pragma Import(MSIL,set_Address,"set_Address");
   pragma Import(MSIL,set_Port,"set_Port");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Net.IPEndPoint;
pragma Import(MSIL,MSSyst.Net.IPEndPoint,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Net.IPEndPoint");
