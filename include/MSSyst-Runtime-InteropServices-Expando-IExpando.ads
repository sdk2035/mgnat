-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Delegate;
limited with MSSyst.Reflection.FieldInfo;
with MSSyst.Reflection.IReflect;
limited with MSSyst.Reflection.MemberInfo;
limited with MSSyst.Reflection.MethodInfo;
limited with MSSyst.Reflection.PropertyInfo;
limited with MSSyst.String;
package MSSyst.Runtime.InteropServices.Expando.IExpando is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function AddField(
      This : access Typ;
      name : access MSSyst.String.Typ'Class) return access MSSyst.Reflection.FieldInfo.Typ'Class is abstract;
   function AddMethod(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      method : access MSSyst.Delegate.Typ'Class) return access MSSyst.Reflection.MethodInfo.Typ'Class is abstract;
   function AddProperty(
      This : access Typ;
      name : access MSSyst.String.Typ'Class) return access MSSyst.Reflection.PropertyInfo.Typ'Class is abstract;
   procedure RemoveMember(
      This : access Typ;
      m : access MSSyst.Reflection.MemberInfo.Typ'Class) is abstract;
private
   pragma Import(MSIL,AddField,"AddField");
   pragma Import(MSIL,AddMethod,"AddMethod");
   pragma Import(MSIL,AddProperty,"AddProperty");
   pragma Import(MSIL,RemoveMember,"RemoveMember");
end MSSyst.Runtime.InteropServices.Expando.IExpando;
pragma Import(MSIL,MSSyst.Runtime.InteropServices.Expando.IExpando,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Runtime.InteropServices.Expando.IExpando");
