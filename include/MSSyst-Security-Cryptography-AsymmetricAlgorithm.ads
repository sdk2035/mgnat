-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.IDisposable;
limited with MSSyst.Security.Cryptography.KeySizes;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.Cryptography.AsymmetricAlgorithm is
   type Typ is abstract new MSSyst.Object.Typ
         and MSSyst.IDisposable.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure Clear(
      This : access Typ);
   function Create return access MSSyst.Security.Cryptography.AsymmetricAlgorithm.Typ'Class;
   function Create(
      algName : access MSSyst.String.Typ'Class) return access MSSyst.Security.Cryptography.AsymmetricAlgorithm.Typ'Class;
   procedure FromXmlString(
      This : access Typ;
      xmlString : access MSSyst.String.Typ'Class);
   function get_KeyExchangeAlgorithm(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_KeySize(
      This : access Typ) return Integer;
   function get_LegalKeySizes(
      This : access Typ) return access MSSyst.Security.Cryptography.KeySizes.Ref_arr;
   function get_SignatureAlgorithm(
      This : access Typ) return access MSSyst.String.Typ'Class;
   procedure set_KeySize(
      This : access Typ;
      value : Integer);
   function ToXmlString(
      This : access Typ;
      includePrivateParameters : Standard.Boolean) return access MSSyst.String.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,Clear,"Clear");
   pragma Import(MSIL,Create,"Create");
   pragma Import(MSIL,FromXmlString,"FromXmlString");
   pragma Import(MSIL,get_KeyExchangeAlgorithm,"get_KeyExchangeAlgorithm");
   pragma Import(MSIL,get_KeySize,"get_KeySize");
   pragma Import(MSIL,get_LegalKeySizes,"get_LegalKeySizes");
   pragma Import(MSIL,get_SignatureAlgorithm,"get_SignatureAlgorithm");
   pragma Import(MSIL,set_KeySize,"set_KeySize");
   pragma Import(MSIL,ToXmlString,"ToXmlString");
end MSSyst.Security.Cryptography.AsymmetricAlgorithm;
pragma Import(MSIL,MSSyst.Security.Cryptography.AsymmetricAlgorithm,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.Cryptography.AsymmetricAlgorithm");
