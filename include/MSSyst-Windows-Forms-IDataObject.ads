-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Windows.Forms.IDataObject is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function GetData(
      This : access Typ;
      format : access MSSyst.Type_k.Typ'Class) return access MSSyst.Object.Typ'Class is abstract;
   function GetData(
      This : access Typ;
      format : access MSSyst.String.Typ'Class) return access MSSyst.Object.Typ'Class is abstract;
   function GetData(
      This : access Typ;
      format : access MSSyst.String.Typ'Class;
      autoConvert : Standard.Boolean) return access MSSyst.Object.Typ'Class is abstract;
   function GetDataPresent(
      This : access Typ;
      format : access MSSyst.Type_k.Typ'Class) return Standard.Boolean is abstract;
   function GetDataPresent(
      This : access Typ;
      format : access MSSyst.String.Typ'Class) return Standard.Boolean is abstract;
   function GetDataPresent(
      This : access Typ;
      format : access MSSyst.String.Typ'Class;
      autoConvert : Standard.Boolean) return Standard.Boolean is abstract;
   function GetFormats(
      This : access Typ) return access MSSyst.String.Ref_arr is abstract;
   function GetFormats(
      This : access Typ;
      autoConvert : Standard.Boolean) return access MSSyst.String.Ref_arr is abstract;
   procedure SetData(
      This : access Typ;
      format : access MSSyst.String.Typ'Class;
      data : access MSSyst.Object.Typ'Class) is abstract;
   procedure SetData(
      This : access Typ;
      format : access MSSyst.String.Typ'Class;
      autoConvert : Standard.Boolean;
      data : access MSSyst.Object.Typ'Class) is abstract;
   procedure SetData(
      This : access Typ;
      data : access MSSyst.Object.Typ'Class) is abstract;
   procedure SetData(
      This : access Typ;
      format : access MSSyst.Type_k.Typ'Class;
      data : access MSSyst.Object.Typ'Class) is abstract;
private
   pragma Import(MSIL,GetData,"GetData");
   pragma Import(MSIL,GetDataPresent,"GetDataPresent");
   pragma Import(MSIL,GetFormats,"GetFormats");
   pragma Import(MSIL,SetData,"SetData");
end MSSyst.Windows.Forms.IDataObject;
pragma Import(MSIL,MSSyst.Windows.Forms.IDataObject,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System.Windows.Forms]System.Windows.Forms.IDataObject");
