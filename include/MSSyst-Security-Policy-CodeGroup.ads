-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Collections.IList;
limited with MSSyst.Security.Policy.Evidence;
limited with MSSyst.Security.Policy.IMembershipCondition;
limited with MSSyst.Security.Policy.PolicyLevel;
limited with MSSyst.Security.Policy.PolicyStatement;
limited with MSSyst.Security.SecurityElement;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.Policy.CodeGroup is
   type Typ is abstract new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure AddChild(
      This : access Typ;
      group : access MSSyst.Security.Policy.CodeGroup.Typ'Class);
   function Copy(
      This : access Typ) return access MSSyst.Security.Policy.CodeGroup.Typ'Class;
   function Equals(
      This : access Typ;
      cg : access MSSyst.Security.Policy.CodeGroup.Typ'Class;
      compareChildren : Standard.Boolean) return Standard.Boolean;
   function Equals(
      This : access Typ;
      o : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   procedure FromXml(
      This : access Typ;
      e : access MSSyst.Security.SecurityElement.Typ'Class);
   procedure FromXml(
      This : access Typ;
      e : access MSSyst.Security.SecurityElement.Typ'Class;
      level : access MSSyst.Security.Policy.PolicyLevel.Typ'Class);
   function get_AttributeString(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_Children(
      This : access Typ) return access MSSyst.Collections.IList.Typ'Class;
   function get_Description(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_MembershipCondition(
      This : access Typ) return access MSSyst.Security.Policy.IMembershipCondition.Typ'Class;
   function get_MergeLogic(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_Name(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_PermissionSetName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_PolicyStatement(
      This : access Typ) return access MSSyst.Security.Policy.PolicyStatement.Typ'Class;
   function GetHashCode(
      This : access Typ) return Integer;
   procedure RemoveChild(
      This : access Typ;
      group : access MSSyst.Security.Policy.CodeGroup.Typ'Class);
   function Resolve(
      This : access Typ;
      evidence : access MSSyst.Security.Policy.Evidence.Typ'Class) return access MSSyst.Security.Policy.PolicyStatement.Typ'Class;
   function ResolveMatchingCodeGroups(
      This : access Typ;
      evidence : access MSSyst.Security.Policy.Evidence.Typ'Class) return access MSSyst.Security.Policy.CodeGroup.Typ'Class;
   procedure set_Children(
      This : access Typ;
      value : access MSSyst.Collections.IList.Typ'Class);
   procedure set_Description(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_MembershipCondition(
      This : access Typ;
      value : access MSSyst.Security.Policy.IMembershipCondition.Typ'Class);
   procedure set_Name(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_PolicyStatement(
      This : access Typ;
      value : access MSSyst.Security.Policy.PolicyStatement.Typ'Class);
   function ToXml(
      This : access Typ) return access MSSyst.Security.SecurityElement.Typ'Class;
   function ToXml(
      This : access Typ;
      level : access MSSyst.Security.Policy.PolicyLevel.Typ'Class) return access MSSyst.Security.SecurityElement.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,AddChild,"AddChild");
   pragma Import(MSIL,Copy,"Copy");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,FromXml,"FromXml");
   pragma Import(MSIL,get_AttributeString,"get_AttributeString");
   pragma Import(MSIL,get_Children,"get_Children");
   pragma Import(MSIL,get_Description,"get_Description");
   pragma Import(MSIL,get_MembershipCondition,"get_MembershipCondition");
   pragma Import(MSIL,get_MergeLogic,"get_MergeLogic");
   pragma Import(MSIL,get_Name,"get_Name");
   pragma Import(MSIL,get_PermissionSetName,"get_PermissionSetName");
   pragma Import(MSIL,get_PolicyStatement,"get_PolicyStatement");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,RemoveChild,"RemoveChild");
   pragma Import(MSIL,Resolve,"Resolve");
   pragma Import(MSIL,ResolveMatchingCodeGroups,"ResolveMatchingCodeGroups");
   pragma Import(MSIL,set_Children,"set_Children");
   pragma Import(MSIL,set_Description,"set_Description");
   pragma Import(MSIL,set_MembershipCondition,"set_MembershipCondition");
   pragma Import(MSIL,set_Name,"set_Name");
   pragma Import(MSIL,set_PolicyStatement,"set_PolicyStatement");
   pragma Import(MSIL,ToXml,"ToXml");
end MSSyst.Security.Policy.CodeGroup;
pragma Import(MSIL,MSSyst.Security.Policy.CodeGroup,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.Policy.CodeGroup");
