-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.String;
with MSSyst.Windows.Forms.UnsafeNativeMethods;
package MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function AppendChild(
      This : access Typ;
      newChild : access MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode.Typ'Class) return access MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode.Typ'Class is abstract;
   function CloneNode(
      This : access Typ;
      fDeep : Standard.Boolean) return access MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode.Typ'Class is abstract;
   function FirstChild(
      This : access Typ) return access MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode.Typ'Class is abstract;
   function GetAttributes(
      This : access Typ) return access MSSyst.Object.Typ'Class is abstract;
   function GetChildNodes(
      This : access Typ) return access MSSyst.Object.Typ'Class is abstract;
   function GetNodeType(
      This : access Typ) return Long_Long_Integer is abstract;
   function GetNodeValue(
      This : access Typ) return access MSSyst.Object.Typ'Class is abstract;
   function GetParentNode(
      This : access Typ) return access MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode.Typ'Class is abstract;
   function HasChildNodes(
      This : access Typ) return Standard.Boolean is abstract;
   function InsertBefore(
      This : access Typ;
      newChild : access MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode.Typ'Class;
      refChild : access MSSyst.Object.Typ'Class) return access MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode.Typ'Class is abstract;
   function LastChild(
      This : access Typ) return access MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode.Typ'Class is abstract;
   function NextSibling(
      This : access Typ) return access MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode.Typ'Class is abstract;
   function NodeName(
      This : access Typ) return access MSSyst.String.Typ'Class is abstract;
   function PreviousSibling(
      This : access Typ) return access MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode.Typ'Class is abstract;
   function RemoveChild(
      This : access Typ;
      oldChild : access MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode.Typ'Class) return access MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode.Typ'Class is abstract;
   function RemoveNode(
      This : access Typ;
      fDeep : Standard.Boolean) return access MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode.Typ'Class is abstract;
   function ReplaceChild(
      This : access Typ;
      newChild : access MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode.Typ'Class;
      oldChild : access MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode.Typ'Class) return access MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode.Typ'Class is abstract;
   function ReplaceNode(
      This : access Typ;
      replacement : access MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode.Typ'Class) return access MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode.Typ'Class is abstract;
   procedure SetNodeValue(
      This : access Typ;
      v : access MSSyst.Object.Typ'Class) is abstract;
   function SwapNode(
      This : access Typ;
      otherNode : access MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode.Typ'Class) return access MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode.Typ'Class is abstract;
private
   pragma Import(MSIL,AppendChild,"AppendChild");
   pragma Import(MSIL,CloneNode,"CloneNode");
   pragma Import(MSIL,FirstChild,"FirstChild");
   pragma Import(MSIL,GetAttributes,"GetAttributes");
   pragma Import(MSIL,GetChildNodes,"GetChildNodes");
   pragma Import(MSIL,GetNodeType,"GetNodeType");
   pragma Import(MSIL,GetNodeValue,"GetNodeValue");
   pragma Import(MSIL,GetParentNode,"GetParentNode");
   pragma Import(MSIL,HasChildNodes,"HasChildNodes");
   pragma Import(MSIL,InsertBefore,"InsertBefore");
   pragma Import(MSIL,LastChild,"LastChild");
   pragma Import(MSIL,NextSibling,"NextSibling");
   pragma Import(MSIL,NodeName,"NodeName");
   pragma Import(MSIL,PreviousSibling,"PreviousSibling");
   pragma Import(MSIL,RemoveChild,"RemoveChild");
   pragma Import(MSIL,RemoveNode,"RemoveNode");
   pragma Import(MSIL,ReplaceChild,"ReplaceChild");
   pragma Import(MSIL,ReplaceNode,"ReplaceNode");
   pragma Import(MSIL,SetNodeValue,"SetNodeValue");
   pragma Import(MSIL,SwapNode,"SwapNode");
end MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode;
pragma Import(MSIL,MSSyst.Windows.Forms.UnsafeNativeMethods.IHTMLDOMNode,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System.Windows.Forms]System.Windows.Forms.UnsafeNativeMethods/IHTMLDOMNode");
