-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Collections.ICollection;
with MSSyst.IDisposable;
limited with MSSyst.IO.Stream;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.ComponentModel.Design.Serialization.SerializationStore is
   type Typ is abstract new MSSyst.Object.Typ
         and MSSyst.IDisposable.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure Close(
      This : access Typ);
   function get_Errors(
      This : access Typ) return access MSSyst.Collections.ICollection.Typ'Class;
   procedure Save(
      This : access Typ;
      stream : access MSSyst.IO.Stream.Typ'Class);
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,Close,"Close");
   pragma Import(MSIL,get_Errors,"get_Errors");
   pragma Import(MSIL,Save,"Save");
end MSSyst.ComponentModel.Design.Serialization.SerializationStore;
pragma Import(MSIL,MSSyst.ComponentModel.Design.Serialization.SerializationStore,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.ComponentModel.Design.Serialization.SerializationStore");
