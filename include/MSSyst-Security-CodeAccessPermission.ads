-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Security.IPermission;
with MSSyst.Security.ISecurityEncodable;
with MSSyst.Security.IStackWalk;
limited with MSSyst.Security.SecurityElement;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.CodeAccessPermission is
   type Typ is abstract new MSSyst.Object.Typ
         and MSSyst.Security.IPermission.Typ
         and MSSyst.Security.ISecurityEncodable.Typ
         and MSSyst.Security.IStackWalk.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure Assert(
      This : access Typ);
   function Copy(
      This : access Typ) return access MSSyst.Security.IPermission.Typ'Class;
   procedure Demand(
      This : access Typ);
   procedure Deny(
      This : access Typ);
   function Equals(
      This : access Typ;
      obj : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   procedure FromXml(
      This : access Typ;
      elem : access MSSyst.Security.SecurityElement.Typ'Class);
   function GetHashCode(
      This : access Typ) return Integer;
   function Intersect(
      This : access Typ;
      target : access MSSyst.Security.IPermission.Typ'Class) return access MSSyst.Security.IPermission.Typ'Class;
   function IsSubsetOf(
      This : access Typ;
      target : access MSSyst.Security.IPermission.Typ'Class) return Standard.Boolean;
   procedure PermitOnly(
      This : access Typ);
   procedure RevertAll;
   procedure RevertAssert;
   procedure RevertDeny;
   procedure RevertPermitOnly;
   function ToString(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function ToXml(
      This : access Typ) return access MSSyst.Security.SecurityElement.Typ'Class;
   function Union(
      This : access Typ;
      other : access MSSyst.Security.IPermission.Typ'Class) return access MSSyst.Security.IPermission.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,Assert,"Assert");
   pragma Import(MSIL,Copy,"Copy");
   pragma Import(MSIL,Demand,"Demand");
   pragma Import(MSIL,Deny,"Deny");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,FromXml,"FromXml");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,Intersect,"Intersect");
   pragma Import(MSIL,IsSubsetOf,"IsSubsetOf");
   pragma Import(MSIL,PermitOnly,"PermitOnly");
   pragma Import(MSIL,RevertAll,"RevertAll");
   pragma Import(MSIL,RevertAssert,"RevertAssert");
   pragma Import(MSIL,RevertDeny,"RevertDeny");
   pragma Import(MSIL,RevertPermitOnly,"RevertPermitOnly");
   pragma Import(MSIL,ToString,"ToString");
   pragma Import(MSIL,ToXml,"ToXml");
   pragma Import(MSIL,Union,"Union");
end MSSyst.Security.CodeAccessPermission;
pragma Import(MSIL,MSSyst.Security.CodeAccessPermission,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.CodeAccessPermission");
