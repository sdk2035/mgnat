-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Collections.IDictionary;
limited with MSSyst.Collections.IList;
limited with MSSyst.Reflection.MethodBase;
limited with MSSyst.Runtime.Remoting.Activation.IActivator;
with MSSyst.Runtime.Remoting.Activation.IConstructionCallMessage;
limited with MSSyst.Runtime.Remoting.Messaging.Header;
with MSSyst.Runtime.Remoting.Messaging.IMessage;
with MSSyst.Runtime.Remoting.Messaging.IMethodCallMessage;
with MSSyst.Runtime.Remoting.Messaging.IMethodMessage;
limited with MSSyst.Runtime.Remoting.Messaging.LogicalCallContext;
with MSSyst.Runtime.Remoting.Messaging.MethodCall;
with MSSyst.Runtime.Serialization.ISerializable;
limited with MSSyst.Runtime.Serialization.SerializationInfo;
limited with MSSyst.Runtime.Serialization.StreamingContext;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Runtime.Remoting.Messaging.ConstructionCall is
   type Typ is new MSSyst.Runtime.Remoting.Messaging.MethodCall.Typ
         and MSSyst.Runtime.Remoting.Messaging.IMethodCallMessage.Typ
         and MSSyst.Runtime.Remoting.Messaging.IMethodMessage.Typ
         and MSSyst.Runtime.Remoting.Messaging.IMessage.Typ
         and MSSyst.Runtime.Serialization.ISerializable.Typ
         and MSSyst.Runtime.Remoting.Activation.IConstructionCallMessage.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_ConstructionCall(
      This : Ref := null;
      headers : access MSSyst.Runtime.Remoting.Messaging.Header.Ref_arr) return Ref;
   function new_ConstructionCall(
      This : Ref := null;
      m : access MSSyst.Runtime.Remoting.Messaging.IMessage.Typ'Class) return Ref;
   function get_ActivationType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function get_ActivationTypeName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_Activator(
      This : access Typ) return access MSSyst.Runtime.Remoting.Activation.IActivator.Typ'Class;
   function get_CallSiteActivationAttributes(
      This : access Typ) return access MSSyst.Object.Ref_array;
   function get_ContextProperties(
      This : access Typ) return access MSSyst.Collections.IList.Typ'Class;
   function get_Properties(
      This : access Typ) return access MSSyst.Collections.IDictionary.Typ'Class;
   procedure set_Activator(
      This : access Typ;
      value : access MSSyst.Runtime.Remoting.Activation.IActivator.Typ'Class);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_ConstructionCall);
   pragma Import(MSIL,get_ActivationType,"get_ActivationType");
   pragma Import(MSIL,get_ActivationTypeName,"get_ActivationTypeName");
   pragma Import(MSIL,get_Activator,"get_Activator");
   pragma Import(MSIL,get_CallSiteActivationAttributes,"get_CallSiteActivationAttributes");
   pragma Import(MSIL,get_ContextProperties,"get_ContextProperties");
   pragma Import(MSIL,get_Properties,"get_Properties");
   pragma Import(MSIL,set_Activator,"set_Activator");
end MSSyst.Runtime.Remoting.Messaging.ConstructionCall;
pragma Import(MSIL,MSSyst.Runtime.Remoting.Messaging.ConstructionCall,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Runtime.Remoting.Messaging.ConstructionCall");
