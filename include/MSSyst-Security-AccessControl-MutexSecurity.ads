-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Security.AccessControl.AccessControlModification;
limited with MSSyst.Security.AccessControl.AccessControlSections;
limited with MSSyst.Security.AccessControl.AccessControlType;
limited with MSSyst.Security.AccessControl.AccessRule;
limited with MSSyst.Security.AccessControl.AuditFlags;
limited with MSSyst.Security.AccessControl.AuditRule;
limited with MSSyst.Security.AccessControl.AuthorizationRuleCollection;
with MSSyst.Security.AccessControl.CommonObjectSecurity;
limited with MSSyst.Security.AccessControl.InheritanceFlags;
limited with MSSyst.Security.AccessControl.MutexAccessRule;
limited with MSSyst.Security.AccessControl.MutexAuditRule;
with MSSyst.Security.AccessControl.NativeObjectSecurity;
with MSSyst.Security.AccessControl.ObjectSecurity;
limited with MSSyst.Security.AccessControl.PropagationFlags;
limited with MSSyst.Security.Principal.IdentityReference;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.AccessControl.MutexSecurity is
   type Typ is new MSSyst.Security.AccessControl.NativeObjectSecurity.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_MutexSecurity(
      This : Ref := null) return Ref;
   function new_MutexSecurity(
      This : Ref := null;
      name : access MSSyst.String.Typ'Class;
      includeSections : MSSyst.Security.AccessControl.AccessControlSections.Valuetype) return Ref;
   function AccessRuleFactory(
      This : access Typ;
      identityReference : access MSSyst.Security.Principal.IdentityReference.Typ'Class;
      accessMask : Integer;
      isInherited : Standard.Boolean;
      inheritanceFlags : MSSyst.Security.AccessControl.InheritanceFlags.Valuetype;
      propagationFlags : MSSyst.Security.AccessControl.PropagationFlags.Valuetype;
      type_k : MSSyst.Security.AccessControl.AccessControlType.Valuetype) return access MSSyst.Security.AccessControl.AccessRule.Typ'Class;
   procedure AddAccessRule(
      This : access Typ;
      rule : access MSSyst.Security.AccessControl.MutexAccessRule.Typ'Class);
   procedure AddAuditRule(
      This : access Typ;
      rule : access MSSyst.Security.AccessControl.MutexAuditRule.Typ'Class);
   function AuditRuleFactory(
      This : access Typ;
      identityReference : access MSSyst.Security.Principal.IdentityReference.Typ'Class;
      accessMask : Integer;
      isInherited : Standard.Boolean;
      inheritanceFlags : MSSyst.Security.AccessControl.InheritanceFlags.Valuetype;
      propagationFlags : MSSyst.Security.AccessControl.PropagationFlags.Valuetype;
      flags : MSSyst.Security.AccessControl.AuditFlags.Valuetype) return access MSSyst.Security.AccessControl.AuditRule.Typ'Class;
   function get_AccessRightType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function get_AccessRuleType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function get_AuditRuleType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function RemoveAccessRule(
      This : access Typ;
      rule : access MSSyst.Security.AccessControl.MutexAccessRule.Typ'Class) return Standard.Boolean;
   procedure RemoveAccessRuleAll(
      This : access Typ;
      rule : access MSSyst.Security.AccessControl.MutexAccessRule.Typ'Class);
   procedure RemoveAccessRuleSpecific(
      This : access Typ;
      rule : access MSSyst.Security.AccessControl.MutexAccessRule.Typ'Class);
   function RemoveAuditRule(
      This : access Typ;
      rule : access MSSyst.Security.AccessControl.MutexAuditRule.Typ'Class) return Standard.Boolean;
   procedure RemoveAuditRuleAll(
      This : access Typ;
      rule : access MSSyst.Security.AccessControl.MutexAuditRule.Typ'Class);
   procedure RemoveAuditRuleSpecific(
      This : access Typ;
      rule : access MSSyst.Security.AccessControl.MutexAuditRule.Typ'Class);
   procedure ResetAccessRule(
      This : access Typ;
      rule : access MSSyst.Security.AccessControl.MutexAccessRule.Typ'Class);
   procedure SetAccessRule(
      This : access Typ;
      rule : access MSSyst.Security.AccessControl.MutexAccessRule.Typ'Class);
   procedure SetAuditRule(
      This : access Typ;
      rule : access MSSyst.Security.AccessControl.MutexAuditRule.Typ'Class);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_MutexSecurity);
   pragma Import(MSIL,AccessRuleFactory,"AccessRuleFactory");
   pragma Import(MSIL,AddAccessRule,"AddAccessRule");
   pragma Import(MSIL,AddAuditRule,"AddAuditRule");
   pragma Import(MSIL,AuditRuleFactory,"AuditRuleFactory");
   pragma Import(MSIL,get_AccessRightType,"get_AccessRightType");
   pragma Import(MSIL,get_AccessRuleType,"get_AccessRuleType");
   pragma Import(MSIL,get_AuditRuleType,"get_AuditRuleType");
   pragma Import(MSIL,RemoveAccessRule,"RemoveAccessRule");
   pragma Import(MSIL,RemoveAccessRuleAll,"RemoveAccessRuleAll");
   pragma Import(MSIL,RemoveAccessRuleSpecific,"RemoveAccessRuleSpecific");
   pragma Import(MSIL,RemoveAuditRule,"RemoveAuditRule");
   pragma Import(MSIL,RemoveAuditRuleAll,"RemoveAuditRuleAll");
   pragma Import(MSIL,RemoveAuditRuleSpecific,"RemoveAuditRuleSpecific");
   pragma Import(MSIL,ResetAccessRule,"ResetAccessRule");
   pragma Import(MSIL,SetAccessRule,"SetAccessRule");
   pragma Import(MSIL,SetAuditRule,"SetAuditRule");
end MSSyst.Security.AccessControl.MutexSecurity;
pragma Import(MSIL,MSSyst.Security.AccessControl.MutexSecurity,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.AccessControl.MutexSecurity");
