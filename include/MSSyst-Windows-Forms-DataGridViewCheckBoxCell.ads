-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.ComponentModel.TypeConverter;
limited with MSSyst.Drawing.Rectangle;
limited with MSSyst.Drawing.Size;
with MSSyst.ICloneable;
with MSSyst.IDisposable;
limited with MSSyst.String;
limited with MSSyst.Type_k;
limited with MSSyst.Windows.Forms.AccessibleObject;
limited with MSSyst.Windows.Forms.ContextMenuStrip;
limited with MSSyst.Windows.Forms.DataGridViewAdvancedBorderStyle;
with MSSyst.Windows.Forms.DataGridViewCell;
limited with MSSyst.Windows.Forms.DataGridViewCellStyle;
limited with MSSyst.Windows.Forms.DataGridViewColumn;
limited with MSSyst.Windows.Forms.DataGridViewDataErrorContexts;
with MSSyst.Windows.Forms.DataGridViewElement;
limited with MSSyst.Windows.Forms.DataGridViewElementStates;
limited with MSSyst.Windows.Forms.DataGridViewRow;
limited with MSSyst.Windows.Forms.DataGridView;
limited with MSSyst.Windows.Forms.FlatStyle;
with MSSyst.Windows.Forms.IDataGridViewEditingCell;
limited with MSSyst.Windows.Forms.KeyEventArgs;
package MSSyst.Windows.Forms.DataGridViewCheckBoxCell is
   type Typ is new MSSyst.Windows.Forms.DataGridViewCell.Typ
         and MSSyst.ICloneable.Typ
         and MSSyst.IDisposable.Typ
         and MSSyst.Windows.Forms.IDataGridViewEditingCell.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_DataGridViewCheckBoxCell(
      This : Ref := null) return Ref;
   function new_DataGridViewCheckBoxCell(
      This : Ref := null;
      threeState : Standard.Boolean) return Ref;
   function Clone(
      This : access Typ) return access MSSyst.Object.Typ'Class;
   function get_EditingCellFormattedValue(
      This : access Typ) return access MSSyst.Object.Typ'Class;
   function get_EditingCellValueChanged(
      This : access Typ) return Standard.Boolean;
   function get_EditType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function get_FalseValue(
      This : access Typ) return access MSSyst.Object.Typ'Class;
   function get_FlatStyle(
      This : access Typ) return MSSyst.Windows.Forms.FlatStyle.Valuetype;
   function get_FormattedValueType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function get_IndeterminateValue(
      This : access Typ) return access MSSyst.Object.Typ'Class;
   function get_ThreeState(
      This : access Typ) return Standard.Boolean;
   function get_TrueValue(
      This : access Typ) return access MSSyst.Object.Typ'Class;
   function get_ValueType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function GetEditingCellFormattedValue(
      This : access Typ;
      context : MSSyst.Windows.Forms.DataGridViewDataErrorContexts.Valuetype) return access MSSyst.Object.Typ'Class;
   function ParseFormattedValue(
      This : access Typ;
      formattedValue : access MSSyst.Object.Typ'Class;
      cellStyle : access MSSyst.Windows.Forms.DataGridViewCellStyle.Typ'Class;
      formattedValueTypeConverter : access MSSyst.ComponentModel.TypeConverter.Typ'Class;
      valueTypeConverter : access MSSyst.ComponentModel.TypeConverter.Typ'Class) return access MSSyst.Object.Typ'Class;
   procedure PrepareEditingCellForEdit(
      This : access Typ;
      selectAll : Standard.Boolean);
   procedure set_EditingCellFormattedValue(
      This : access Typ;
      value : access MSSyst.Object.Typ'Class);
   procedure set_EditingCellValueChanged(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_FalseValue(
      This : access Typ;
      value : access MSSyst.Object.Typ'Class);
   procedure set_FlatStyle(
      This : access Typ;
      value : MSSyst.Windows.Forms.FlatStyle.Valuetype);
   procedure set_IndeterminateValue(
      This : access Typ;
      value : access MSSyst.Object.Typ'Class);
   procedure set_ThreeState(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_TrueValue(
      This : access Typ;
      value : access MSSyst.Object.Typ'Class);
   procedure set_ValueType(
      This : access Typ;
      value : access MSSyst.Type_k.Typ'Class);
   function ToString(
      This : access Typ) return access MSSyst.String.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_DataGridViewCheckBoxCell);
   pragma Import(MSIL,Clone,"Clone");
   pragma Import(MSIL,get_EditingCellFormattedValue,"get_EditingCellFormattedValue");
   pragma Import(MSIL,get_EditingCellValueChanged,"get_EditingCellValueChanged");
   pragma Import(MSIL,get_EditType,"get_EditType");
   pragma Import(MSIL,get_FalseValue,"get_FalseValue");
   pragma Import(MSIL,get_FlatStyle,"get_FlatStyle");
   pragma Import(MSIL,get_FormattedValueType,"get_FormattedValueType");
   pragma Import(MSIL,get_IndeterminateValue,"get_IndeterminateValue");
   pragma Import(MSIL,get_ThreeState,"get_ThreeState");
   pragma Import(MSIL,get_TrueValue,"get_TrueValue");
   pragma Import(MSIL,get_ValueType,"get_ValueType");
   pragma Import(MSIL,GetEditingCellFormattedValue,"GetEditingCellFormattedValue");
   pragma Import(MSIL,ParseFormattedValue,"ParseFormattedValue");
   pragma Import(MSIL,PrepareEditingCellForEdit,"PrepareEditingCellForEdit");
   pragma Import(MSIL,set_EditingCellFormattedValue,"set_EditingCellFormattedValue");
   pragma Import(MSIL,set_EditingCellValueChanged,"set_EditingCellValueChanged");
   pragma Import(MSIL,set_FalseValue,"set_FalseValue");
   pragma Import(MSIL,set_FlatStyle,"set_FlatStyle");
   pragma Import(MSIL,set_IndeterminateValue,"set_IndeterminateValue");
   pragma Import(MSIL,set_ThreeState,"set_ThreeState");
   pragma Import(MSIL,set_TrueValue,"set_TrueValue");
   pragma Import(MSIL,set_ValueType,"set_ValueType");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Windows.Forms.DataGridViewCheckBoxCell;
pragma Import(MSIL,MSSyst.Windows.Forms.DataGridViewCheckBoxCell,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System.Windows.Forms]System.Windows.Forms.DataGridViewCheckBoxCell");
