-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Collections.IDictionary;
limited with MSSyst.MarshalByRefObject;
limited with MSSyst.Runtime.Remoting.Channels.IChannelReceiver;
limited with MSSyst.Runtime.Remoting.Channels.IChannel;
limited with MSSyst.Runtime.Remoting.Channels.IServerChannelSinkProvider;
limited with MSSyst.Runtime.Remoting.Channels.IServerChannelSinkStack;
limited with MSSyst.Runtime.Remoting.Channels.IServerChannelSink;
limited with MSSyst.Runtime.Remoting.Channels.ServerProcessing;
limited with MSSyst.Runtime.Remoting.Messaging.IMessageCtrl;
limited with MSSyst.Runtime.Remoting.Messaging.IMessageSink;
limited with MSSyst.Runtime.Remoting.Messaging.IMessage;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Runtime.Remoting.Channels.ChannelServices is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function AsyncDispatchMessage(
      msg : access MSSyst.Runtime.Remoting.Messaging.IMessage.Typ'Class;
      replySink : access MSSyst.Runtime.Remoting.Messaging.IMessageSink.Typ'Class) return access MSSyst.Runtime.Remoting.Messaging.IMessageCtrl.Typ'Class;
   function CreateServerChannelSinkChain(
      provider : access MSSyst.Runtime.Remoting.Channels.IServerChannelSinkProvider.Typ'Class;
      channel : access MSSyst.Runtime.Remoting.Channels.IChannelReceiver.Typ'Class) return access MSSyst.Runtime.Remoting.Channels.IServerChannelSink.Typ'Class;
   function DispatchMessage(
      sinkStack : access MSSyst.Runtime.Remoting.Channels.IServerChannelSinkStack.Typ'Class;
      msg : access MSSyst.Runtime.Remoting.Messaging.IMessage.Typ'Class;
      replyMsg : access MSSyst.Runtime.Remoting.Messaging.IMessage.Ref) return MSSyst.Runtime.Remoting.Channels.ServerProcessing.Valuetype;
   function get_RegisteredChannels return access MSSyst.Runtime.Remoting.Channels.IChannel.Ref_arr;
   function GetChannel(
      name : access MSSyst.String.Typ'Class) return access MSSyst.Runtime.Remoting.Channels.IChannel.Typ'Class;
   function GetChannelSinkProperties(
      obj : access MSSyst.Object.Typ'Class) return access MSSyst.Collections.IDictionary.Typ'Class;
   function GetUrlsForObject(
      obj : access MSSyst.MarshalByRefObject.Typ'Class) return access MSSyst.String.Ref_arr;
   procedure RegisterChannel(
      chnl : access MSSyst.Runtime.Remoting.Channels.IChannel.Typ'Class;
      ensureSecurity : Standard.Boolean);
   procedure RegisterChannel(
      chnl : access MSSyst.Runtime.Remoting.Channels.IChannel.Typ'Class);
   function SyncDispatchMessage(
      msg : access MSSyst.Runtime.Remoting.Messaging.IMessage.Typ'Class) return access MSSyst.Runtime.Remoting.Messaging.IMessage.Typ'Class;
   procedure UnregisterChannel(
      chnl : access MSSyst.Runtime.Remoting.Channels.IChannel.Typ'Class);
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,AsyncDispatchMessage,"AsyncDispatchMessage");
   pragma Import(MSIL,CreateServerChannelSinkChain,"CreateServerChannelSinkChain");
   pragma Import(MSIL,DispatchMessage,"DispatchMessage");
   pragma Import(MSIL,get_RegisteredChannels,"get_RegisteredChannels");
   pragma Import(MSIL,GetChannel,"GetChannel");
   pragma Import(MSIL,GetChannelSinkProperties,"GetChannelSinkProperties");
   pragma Import(MSIL,GetUrlsForObject,"GetUrlsForObject");
   pragma Import(MSIL,RegisterChannel,"RegisterChannel");
   pragma Import(MSIL,SyncDispatchMessage,"SyncDispatchMessage");
   pragma Import(MSIL,UnregisterChannel,"UnregisterChannel");
end MSSyst.Runtime.Remoting.Channels.ChannelServices;
pragma Import(MSIL,MSSyst.Runtime.Remoting.Channels.ChannelServices,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Runtime.Remoting.Channels.ChannelServices");
