-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.DateTime;
limited with MSSyst.IO.DirectoryInfo;
limited with MSSyst.IO.FileAccess;
limited with MSSyst.IO.FileAttributes;
limited with MSSyst.IO.FileMode;
limited with MSSyst.IO.FileShare;
limited with MSSyst.IO.FileStream;
with MSSyst.IO.FileSystemInfo;
limited with MSSyst.IO.StreamReader;
limited with MSSyst.IO.StreamWriter;
with MSSyst.MarshalByRefObject;
limited with MSSyst.Runtime.Remoting.ObjRef;
with MSSyst.Runtime.Serialization.ISerializable;
limited with MSSyst.Runtime.Serialization.SerializationInfo;
limited with MSSyst.Runtime.Serialization.StreamingContext;
limited with MSSyst.Security.AccessControl.AccessControlSections;
limited with MSSyst.Security.AccessControl.FileSecurity;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.IO.FileInfo is
   type Typ is new MSSyst.IO.FileSystemInfo.Typ
         and MSSyst.Runtime.Serialization.ISerializable.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_FileInfo(
      This : Ref := null;
      fileName : access MSSyst.String.Typ'Class) return Ref;
   function AppendText(
      This : access Typ) return access MSSyst.IO.StreamWriter.Typ'Class;
   function CopyTo(
      This : access Typ;
      destFileName : access MSSyst.String.Typ'Class;
      overwrite : Standard.Boolean) return access MSSyst.IO.FileInfo.Typ'Class;
   function CopyTo(
      This : access Typ;
      destFileName : access MSSyst.String.Typ'Class) return access MSSyst.IO.FileInfo.Typ'Class;
   function Create(
      This : access Typ) return access MSSyst.IO.FileStream.Typ'Class;
   function CreateText(
      This : access Typ) return access MSSyst.IO.StreamWriter.Typ'Class;
   procedure Decrypt(
      This : access Typ);
   procedure Delete(
      This : access Typ);
   procedure Encrypt(
      This : access Typ);
   function get_Directory(
      This : access Typ) return access MSSyst.IO.DirectoryInfo.Typ'Class;
   function get_DirectoryName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_Exists(
      This : access Typ) return Standard.Boolean;
   function get_IsReadOnly(
      This : access Typ) return Standard.Boolean;
   function get_Length(
      This : access Typ) return Long_Long_Integer;
   function get_Name(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function GetAccessControl(
      This : access Typ) return access MSSyst.Security.AccessControl.FileSecurity.Typ'Class;
   function GetAccessControl(
      This : access Typ;
      includeSections : MSSyst.Security.AccessControl.AccessControlSections.Valuetype) return access MSSyst.Security.AccessControl.FileSecurity.Typ'Class;
   procedure MoveTo(
      This : access Typ;
      destFileName : access MSSyst.String.Typ'Class);
   function Open(
      This : access Typ;
      mode : MSSyst.IO.FileMode.Valuetype;
      access_k : MSSyst.IO.FileAccess.Valuetype) return access MSSyst.IO.FileStream.Typ'Class;
   function Open(
      This : access Typ;
      mode : MSSyst.IO.FileMode.Valuetype) return access MSSyst.IO.FileStream.Typ'Class;
   function Open(
      This : access Typ;
      mode : MSSyst.IO.FileMode.Valuetype;
      access_k : MSSyst.IO.FileAccess.Valuetype;
      share : MSSyst.IO.FileShare.Valuetype) return access MSSyst.IO.FileStream.Typ'Class;
   function OpenRead(
      This : access Typ) return access MSSyst.IO.FileStream.Typ'Class;
   function OpenText(
      This : access Typ) return access MSSyst.IO.StreamReader.Typ'Class;
   function OpenWrite(
      This : access Typ) return access MSSyst.IO.FileStream.Typ'Class;
   function Replace(
      This : access Typ;
      destinationFileName : access MSSyst.String.Typ'Class;
      destinationBackupFileName : access MSSyst.String.Typ'Class;
      ignoreMetadataErrors : Standard.Boolean) return access MSSyst.IO.FileInfo.Typ'Class;
   function Replace(
      This : access Typ;
      destinationFileName : access MSSyst.String.Typ'Class;
      destinationBackupFileName : access MSSyst.String.Typ'Class) return access MSSyst.IO.FileInfo.Typ'Class;
   procedure set_IsReadOnly(
      This : access Typ;
      value : Standard.Boolean);
   procedure SetAccessControl(
      This : access Typ;
      fileSecurity : access MSSyst.Security.AccessControl.FileSecurity.Typ'Class);
   function ToString(
      This : access Typ) return access MSSyst.String.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_FileInfo);
   pragma Import(MSIL,AppendText,"AppendText");
   pragma Import(MSIL,CopyTo,"CopyTo");
   pragma Import(MSIL,Create,"Create");
   pragma Import(MSIL,CreateText,"CreateText");
   pragma Import(MSIL,Decrypt,"Decrypt");
   pragma Import(MSIL,Delete,"Delete");
   pragma Import(MSIL,Encrypt,"Encrypt");
   pragma Import(MSIL,get_Directory,"get_Directory");
   pragma Import(MSIL,get_DirectoryName,"get_DirectoryName");
   pragma Import(MSIL,get_Exists,"get_Exists");
   pragma Import(MSIL,get_IsReadOnly,"get_IsReadOnly");
   pragma Import(MSIL,get_Length,"get_Length");
   pragma Import(MSIL,get_Name,"get_Name");
   pragma Import(MSIL,GetAccessControl,"GetAccessControl");
   pragma Import(MSIL,MoveTo,"MoveTo");
   pragma Import(MSIL,Open,"Open");
   pragma Import(MSIL,OpenRead,"OpenRead");
   pragma Import(MSIL,OpenText,"OpenText");
   pragma Import(MSIL,OpenWrite,"OpenWrite");
   pragma Import(MSIL,Replace,"Replace");
   pragma Import(MSIL,set_IsReadOnly,"set_IsReadOnly");
   pragma Import(MSIL,SetAccessControl,"SetAccessControl");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.IO.FileInfo;
pragma Import(MSIL,MSSyst.IO.FileInfo,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.IO.FileInfo");
