-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Guid;
limited with MSSyst.Security.AccessControl.AceFlags;
limited with MSSyst.Security.AccessControl.AceQualifier;
limited with MSSyst.Security.AccessControl.AceType;
limited with MSSyst.Security.AccessControl.AuditFlags;
with MSSyst.Security.AccessControl.GenericAce;
limited with MSSyst.Security.AccessControl.InheritanceFlags;
with MSSyst.Security.AccessControl.KnownAce;
limited with MSSyst.Security.AccessControl.ObjectAceFlags;
limited with MSSyst.Security.AccessControl.PropagationFlags;
with MSSyst.Security.AccessControl.QualifiedAce;
limited with MSSyst.Security.Principal.SecurityIdentifier;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.AccessControl.ObjectAce is
   type Typ is new MSSyst.Security.AccessControl.QualifiedAce.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_ObjectAce(
      This : Ref := null;
      aceFlags : MSSyst.Security.AccessControl.AceFlags.Valuetype;
      qualifier : MSSyst.Security.AccessControl.AceQualifier.Valuetype;
      accessMask : Integer;
      sid : access MSSyst.Security.Principal.SecurityIdentifier.Typ'Class;
      flags : MSSyst.Security.AccessControl.ObjectAceFlags.Valuetype;
      type_k : MSSyst.Guid.Valuetype;
      inheritedType : MSSyst.Guid.Valuetype;
      isCallback : Standard.Boolean;
      opaque : MSIL_Types.unsigned_int8_Arr) return Ref;
   function get_BinaryLength(
      This : access Typ) return Integer;
   function get_InheritedObjectAceType(
      This : access Typ) return MSSyst.Guid.Valuetype;
   function get_ObjectAceFlags(
      This : access Typ) return MSSyst.Security.AccessControl.ObjectAceFlags.Valuetype;
   function get_ObjectAceType(
      This : access Typ) return MSSyst.Guid.Valuetype;
   procedure GetBinaryForm(
      This : access Typ;
      binaryForm : MSIL_Types.unsigned_int8_Arr;
      offset : Integer);
   function MaxOpaqueLength(
      isCallback : Standard.Boolean) return Integer;
   procedure set_InheritedObjectAceType(
      This : access Typ;
      value : MSSyst.Guid.Valuetype);
   procedure set_ObjectAceFlags(
      This : access Typ;
      value : MSSyst.Security.AccessControl.ObjectAceFlags.Valuetype);
   procedure set_ObjectAceType(
      This : access Typ;
      value : MSSyst.Guid.Valuetype);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_ObjectAce);
   pragma Import(MSIL,get_BinaryLength,"get_BinaryLength");
   pragma Import(MSIL,get_InheritedObjectAceType,"get_InheritedObjectAceType");
   pragma Import(MSIL,get_ObjectAceFlags,"get_ObjectAceFlags");
   pragma Import(MSIL,get_ObjectAceType,"get_ObjectAceType");
   pragma Import(MSIL,GetBinaryForm,"GetBinaryForm");
   pragma Import(MSIL,MaxOpaqueLength,"MaxOpaqueLength");
   pragma Import(MSIL,set_InheritedObjectAceType,"set_InheritedObjectAceType");
   pragma Import(MSIL,set_ObjectAceFlags,"set_ObjectAceFlags");
   pragma Import(MSIL,set_ObjectAceType,"set_ObjectAceType");
end MSSyst.Security.AccessControl.ObjectAce;
pragma Import(MSIL,MSSyst.Security.AccessControl.ObjectAce,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.AccessControl.ObjectAce");
