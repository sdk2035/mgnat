-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Collections.Specialized.BitVector32.Section;
limited with MSSyst.String;
limited with MSSyst.Type_k;
with MSSyst.ValueType;
package MSSyst.Collections.Specialized.BitVector32 is
   type ValueType is new MSSyst.ValueType.Typ with null record;
   type ValueType_Arr is array (Natural range <>) of ValueType; -- start at 0
   type ValueType_Array is access all ValueType_Arr;
   type ValueType_addrof is access all ValueType;
   type ValueType_array_addrof is access all ValueType_Array;
   function new_BitVector32(
      data : Integer) return Valuetype;
   function new_BitVector32(
      value : MSSyst.Collections.Specialized.BitVector32.Valuetype) return Valuetype;
   function CreateMask return Integer;
   function CreateMask(
      previous : Integer) return Integer;
   function CreateSection(
      maxValue : MSIL_Types.int16) return MSSyst.Collections.Specialized.BitVector32.Section.Valuetype;
   function CreateSection(
      maxValue : MSIL_Types.int16;
      previous : MSSyst.Collections.Specialized.BitVector32.Section.Valuetype) return MSSyst.Collections.Specialized.BitVector32.Section.Valuetype;
   function Equals(
      This : Valuetype;
      o : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function get_Data(
      This : Valuetype) return Integer;
   function get_Item(
      This : Valuetype;
      section : MSSyst.Collections.Specialized.BitVector32.Section.Valuetype) return Integer;
   function get_Item(
      This : Valuetype;
      bit : Integer) return Standard.Boolean;
   function GetHashCode(
      This : Valuetype) return Integer;
   procedure set_Item(
      This : Valuetype;
      section : MSSyst.Collections.Specialized.BitVector32.Section.Valuetype;
      value : Integer);
   procedure set_Item(
      This : Valuetype;
      bit : Integer;
      value : Standard.Boolean);
   function ToString(
      This : Valuetype) return access MSSyst.String.Typ'Class;
   function ToString(
      value : MSSyst.Collections.Specialized.BitVector32.Valuetype) return access MSSyst.String.Typ'Class;
private
   pragma MSIL_Constructor(new_BitVector32);
   pragma Import(MSIL,CreateMask,"CreateMask");
   pragma Import(MSIL,CreateSection,"CreateSection");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_Data,"get_Data");
   pragma Import(MSIL,get_Item,"get_Item");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,set_Item,"set_Item");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Collections.Specialized.BitVector32;
pragma Import(MSIL,MSSyst.Collections.Specialized.BitVector32,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Collections.Specialized.BitVector32");
