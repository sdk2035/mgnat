-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Security.AccessControl.AceFlags;
limited with MSSyst.Security.AccessControl.AceType;
limited with MSSyst.Security.AccessControl.AuditFlags;
limited with MSSyst.Security.AccessControl.CompoundAceType;
with MSSyst.Security.AccessControl.GenericAce;
limited with MSSyst.Security.AccessControl.InheritanceFlags;
with MSSyst.Security.AccessControl.KnownAce;
limited with MSSyst.Security.AccessControl.PropagationFlags;
limited with MSSyst.Security.Principal.SecurityIdentifier;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.AccessControl.CompoundAce is
   type Typ is new MSSyst.Security.AccessControl.KnownAce.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_CompoundAce(
      This : Ref := null;
      flags : MSSyst.Security.AccessControl.AceFlags.Valuetype;
      accessMask : Integer;
      compoundAceType : MSSyst.Security.AccessControl.CompoundAceType.Valuetype;
      sid : access MSSyst.Security.Principal.SecurityIdentifier.Typ'Class) return Ref;
   function get_BinaryLength(
      This : access Typ) return Integer;
   function get_CompoundAceType(
      This : access Typ) return MSSyst.Security.AccessControl.CompoundAceType.Valuetype;
   procedure GetBinaryForm(
      This : access Typ;
      binaryForm : MSIL_Types.unsigned_int8_Arr;
      offset : Integer);
   procedure set_CompoundAceType(
      This : access Typ;
      value : MSSyst.Security.AccessControl.CompoundAceType.Valuetype);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_CompoundAce);
   pragma Import(MSIL,get_BinaryLength,"get_BinaryLength");
   pragma Import(MSIL,get_CompoundAceType,"get_CompoundAceType");
   pragma Import(MSIL,GetBinaryForm,"GetBinaryForm");
   pragma Import(MSIL,set_CompoundAceType,"set_CompoundAceType");
end MSSyst.Security.AccessControl.CompoundAce;
pragma Import(MSIL,MSSyst.Security.AccessControl.CompoundAce,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.AccessControl.CompoundAce");
