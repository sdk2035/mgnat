-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.ComponentModel.Design.DesignerTransactionCloseEventHandler;
limited with MSSyst.ComponentModel.Design.DesignerTransaction;
limited with MSSyst.ComponentModel.Design.IDesigner;
with MSSyst.ComponentModel.Design.IServiceContainer;
limited with MSSyst.ComponentModel.IComponent;
limited with MSSyst.ComponentModel.IContainer;
limited with MSSyst.EventHandler;
with MSSyst.IServiceProvider;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.ComponentModel.Design.IDesignerHost is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure Activate(
      This : access Typ) is abstract;
   procedure add_Activated(
      This : access Typ;
      value : access MSSyst.EventHandler.Typ'Class) is abstract;
   procedure add_Deactivated(
      This : access Typ;
      value : access MSSyst.EventHandler.Typ'Class) is abstract;
   procedure add_LoadComplete(
      This : access Typ;
      value : access MSSyst.EventHandler.Typ'Class) is abstract;
   procedure add_TransactionClosed(
      This : access Typ;
      value : access MSSyst.ComponentModel.Design.DesignerTransactionCloseEventHandler.Typ'Class) is abstract;
   procedure add_TransactionClosing(
      This : access Typ;
      value : access MSSyst.ComponentModel.Design.DesignerTransactionCloseEventHandler.Typ'Class) is abstract;
   procedure add_TransactionOpened(
      This : access Typ;
      value : access MSSyst.EventHandler.Typ'Class) is abstract;
   procedure add_TransactionOpening(
      This : access Typ;
      value : access MSSyst.EventHandler.Typ'Class) is abstract;
   function CreateComponent(
      This : access Typ;
      componentClass : access MSSyst.Type_k.Typ'Class) return access MSSyst.ComponentModel.IComponent.Typ'Class is abstract;
   function CreateComponent(
      This : access Typ;
      componentClass : access MSSyst.Type_k.Typ'Class;
      name : access MSSyst.String.Typ'Class) return access MSSyst.ComponentModel.IComponent.Typ'Class is abstract;
   function CreateTransaction(
      This : access Typ;
      description : access MSSyst.String.Typ'Class) return access MSSyst.ComponentModel.Design.DesignerTransaction.Typ'Class is abstract;
   function CreateTransaction(
      This : access Typ) return access MSSyst.ComponentModel.Design.DesignerTransaction.Typ'Class is abstract;
   procedure DestroyComponent(
      This : access Typ;
      component : access MSSyst.ComponentModel.IComponent.Typ'Class) is abstract;
   function get_Container(
      This : access Typ) return access MSSyst.ComponentModel.IContainer.Typ'Class is abstract;
   function get_InTransaction(
      This : access Typ) return Standard.Boolean is abstract;
   function get_Loading(
      This : access Typ) return Standard.Boolean is abstract;
   function get_RootComponent(
      This : access Typ) return access MSSyst.ComponentModel.IComponent.Typ'Class is abstract;
   function get_RootComponentClassName(
      This : access Typ) return access MSSyst.String.Typ'Class is abstract;
   function get_TransactionDescription(
      This : access Typ) return access MSSyst.String.Typ'Class is abstract;
   function GetDesigner(
      This : access Typ;
      component : access MSSyst.ComponentModel.IComponent.Typ'Class) return access MSSyst.ComponentModel.Design.IDesigner.Typ'Class is abstract;
   function GetType(
      This : access Typ;
      typeName : access MSSyst.String.Typ'Class) return access MSSyst.Type_k.Typ'Class is abstract;
   procedure remove_Activated(
      This : access Typ;
      value : access MSSyst.EventHandler.Typ'Class) is abstract;
   procedure remove_Deactivated(
      This : access Typ;
      value : access MSSyst.EventHandler.Typ'Class) is abstract;
   procedure remove_LoadComplete(
      This : access Typ;
      value : access MSSyst.EventHandler.Typ'Class) is abstract;
   procedure remove_TransactionClosed(
      This : access Typ;
      value : access MSSyst.ComponentModel.Design.DesignerTransactionCloseEventHandler.Typ'Class) is abstract;
   procedure remove_TransactionClosing(
      This : access Typ;
      value : access MSSyst.ComponentModel.Design.DesignerTransactionCloseEventHandler.Typ'Class) is abstract;
   procedure remove_TransactionOpened(
      This : access Typ;
      value : access MSSyst.EventHandler.Typ'Class) is abstract;
   procedure remove_TransactionOpening(
      This : access Typ;
      value : access MSSyst.EventHandler.Typ'Class) is abstract;
private
   pragma Import(MSIL,Activate,"Activate");
   pragma Import(MSIL,add_Activated,"add_Activated");
   pragma Import(MSIL,add_Deactivated,"add_Deactivated");
   pragma Import(MSIL,add_LoadComplete,"add_LoadComplete");
   pragma Import(MSIL,add_TransactionClosed,"add_TransactionClosed");
   pragma Import(MSIL,add_TransactionClosing,"add_TransactionClosing");
   pragma Import(MSIL,add_TransactionOpened,"add_TransactionOpened");
   pragma Import(MSIL,add_TransactionOpening,"add_TransactionOpening");
   pragma Import(MSIL,CreateComponent,"CreateComponent");
   pragma Import(MSIL,CreateTransaction,"CreateTransaction");
   pragma Import(MSIL,DestroyComponent,"DestroyComponent");
   pragma Import(MSIL,get_Container,"get_Container");
   pragma Import(MSIL,get_InTransaction,"get_InTransaction");
   pragma Import(MSIL,get_Loading,"get_Loading");
   pragma Import(MSIL,get_RootComponent,"get_RootComponent");
   pragma Import(MSIL,get_RootComponentClassName,"get_RootComponentClassName");
   pragma Import(MSIL,get_TransactionDescription,"get_TransactionDescription");
   pragma Import(MSIL,GetDesigner,"GetDesigner");
   pragma Import(MSIL,GetType,"GetType");
   pragma Import(MSIL,remove_Activated,"remove_Activated");
   pragma Import(MSIL,remove_Deactivated,"remove_Deactivated");
   pragma Import(MSIL,remove_LoadComplete,"remove_LoadComplete");
   pragma Import(MSIL,remove_TransactionClosed,"remove_TransactionClosed");
   pragma Import(MSIL,remove_TransactionClosing,"remove_TransactionClosing");
   pragma Import(MSIL,remove_TransactionOpened,"remove_TransactionOpened");
   pragma Import(MSIL,remove_TransactionOpening,"remove_TransactionOpening");
end MSSyst.ComponentModel.Design.IDesignerHost;
pragma Import(MSIL,MSSyst.ComponentModel.Design.IDesignerHost,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.ComponentModel.Design.IDesignerHost");
