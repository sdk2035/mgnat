-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Globalization.CultureInfo;
limited with MSSyst.Guid;
limited with MSSyst.Reflection.Assembly;
limited with MSSyst.Reflection.Binder;
limited with MSSyst.Reflection.BindingFlags;
limited with MSSyst.Reflection.CallingConventions;
limited with MSSyst.Reflection.ConstructorInfo;
limited with MSSyst.Reflection.EventInfo;
limited with MSSyst.Reflection.FieldInfo;
limited with MSSyst.Reflection.GenericParameterAttributes;
with MSSyst.Reflection.ICustomAttributeProvider;
with MSSyst.Reflection.IReflect;
limited with MSSyst.Reflection.InterfaceMapping;
limited with MSSyst.Reflection.MemberFilter;
with MSSyst.Reflection.MemberInfo;
limited with MSSyst.Reflection.MemberTypes;
limited with MSSyst.Reflection.MethodBase;
limited with MSSyst.Reflection.MethodInfo;
limited with MSSyst.Reflection.Module;
with MSSyst.Reflection.ParameterModifier;
limited with MSSyst.Reflection.PropertyInfo;
limited with MSSyst.Reflection.TypeAttributes;
limited with MSSyst.Reflection.TypeFilter;
limited with MSSyst.Runtime.InteropServices.StructLayoutAttribute;
with MSSyst.Runtime.InteropServices.uMemberInfo;
with MSSyst.Runtime.InteropServices.uType;
limited with MSSyst.RuntimeTypeHandle;
limited with MSSyst.String;
limited with MSSyst.TypeCode;
package MSSyst.Type_k is
   type Typ is abstract new MSSyst.Reflection.MemberInfo.Typ
         and MSSyst.Reflection.ICustomAttributeProvider.Typ
         and MSSyst.Runtime.InteropServices.uMemberInfo.Typ
         and MSSyst.Runtime.InteropServices.uType.Typ
         and MSSyst.Reflection.IReflect.Typ
   with record
      null;
   end record;
   FilterAttribute : access MSSyst.Reflection.MemberFilter.Typ'Class;
   pragma Import(MSIL,FilterAttribute,"FilterAttribute");
   FilterName : access MSSyst.Reflection.MemberFilter.Typ'Class;
   pragma Import(MSIL,FilterName,"FilterName");
   FilterNameIgnoreCase : access MSSyst.Reflection.MemberFilter.Typ'Class;
   pragma Import(MSIL,FilterNameIgnoreCase,"FilterNameIgnoreCase");
   Missing : access MSSyst.Object.Typ'Class;
   pragma Import(MSIL,Missing,"Missing");
   Delimiter : Wide_Character;
   pragma Import(MSIL,Delimiter,"Delimiter");
   EmptyTypes : access MSSyst.Type_k.Ref_arr;
   pragma Import(MSIL,EmptyTypes,"EmptyTypes");
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function Equals(
      This : access Typ;
      o : access MSSyst.Type_k.Typ'Class) return Standard.Boolean;
   function Equals(
      This : access Typ;
      o : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function FindInterfaces(
      This : access Typ;
      filter : access MSSyst.Reflection.TypeFilter.Typ'Class;
      filterCriteria : access MSSyst.Object.Typ'Class) return access MSSyst.Type_k.Ref_arr;
   function FindMembers(
      This : access Typ;
      memberType : MSSyst.Reflection.MemberTypes.Valuetype;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype;
      filter : access MSSyst.Reflection.MemberFilter.Typ'Class;
      filterCriteria : access MSSyst.Object.Typ'Class) return access MSSyst.Reflection.MemberInfo.Ref_arr;
   function get_Assembly(
      This : access Typ) return access MSSyst.Reflection.Assembly.Typ'Class;
   function get_AssemblyQualifiedName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_Attributes(
      This : access Typ) return MSSyst.Reflection.TypeAttributes.Valuetype;
   function get_BaseType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function get_ContainsGenericParameters(
      This : access Typ) return Standard.Boolean;
   function get_DeclaringMethod(
      This : access Typ) return access MSSyst.Reflection.MethodBase.Typ'Class;
   function get_DeclaringType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function get_DefaultBinder return access MSSyst.Reflection.Binder.Typ'Class;
   function get_FullName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_GenericParameterAttributes(
      This : access Typ) return MSSyst.Reflection.GenericParameterAttributes.Valuetype;
   function get_GenericParameterPosition(
      This : access Typ) return Integer;
   function get_GUID(
      This : access Typ) return MSSyst.Guid.Valuetype;
   function get_HasElementType(
      This : access Typ) return Standard.Boolean;
   function get_IsAbstract(
      This : access Typ) return Standard.Boolean;
   function get_IsAnsiClass(
      This : access Typ) return Standard.Boolean;
   function get_IsArray(
      This : access Typ) return Standard.Boolean;
   function get_IsAutoClass(
      This : access Typ) return Standard.Boolean;
   function get_IsAutoLayout(
      This : access Typ) return Standard.Boolean;
   function get_IsByRef(
      This : access Typ) return Standard.Boolean;
   function get_IsClass(
      This : access Typ) return Standard.Boolean;
   function get_IsCOMObject(
      This : access Typ) return Standard.Boolean;
   function get_IsContextful(
      This : access Typ) return Standard.Boolean;
   function get_IsEnum(
      This : access Typ) return Standard.Boolean;
   function get_IsExplicitLayout(
      This : access Typ) return Standard.Boolean;
   function get_IsGenericParameter(
      This : access Typ) return Standard.Boolean;
   function get_IsGenericType(
      This : access Typ) return Standard.Boolean;
   function get_IsGenericTypeDefinition(
      This : access Typ) return Standard.Boolean;
   function get_IsImport(
      This : access Typ) return Standard.Boolean;
   function get_IsInterface(
      This : access Typ) return Standard.Boolean;
   function get_IsLayoutSequential(
      This : access Typ) return Standard.Boolean;
   function get_IsMarshalByRef(
      This : access Typ) return Standard.Boolean;
   function get_IsNested(
      This : access Typ) return Standard.Boolean;
   function get_IsNestedAssembly(
      This : access Typ) return Standard.Boolean;
   function get_IsNestedFamANDAssem(
      This : access Typ) return Standard.Boolean;
   function get_IsNestedFamily(
      This : access Typ) return Standard.Boolean;
   function get_IsNestedFamORAssem(
      This : access Typ) return Standard.Boolean;
   function get_IsNestedPrivate(
      This : access Typ) return Standard.Boolean;
   function get_IsNestedPublic(
      This : access Typ) return Standard.Boolean;
   function get_IsNotPublic(
      This : access Typ) return Standard.Boolean;
   function get_IsPointer(
      This : access Typ) return Standard.Boolean;
   function get_IsPrimitive(
      This : access Typ) return Standard.Boolean;
   function get_IsPublic(
      This : access Typ) return Standard.Boolean;
   function get_IsSealed(
      This : access Typ) return Standard.Boolean;
   function get_IsSerializable(
      This : access Typ) return Standard.Boolean;
   function get_IsSpecialName(
      This : access Typ) return Standard.Boolean;
   function get_IsUnicodeClass(
      This : access Typ) return Standard.Boolean;
   function get_IsValueType(
      This : access Typ) return Standard.Boolean;
   function get_IsVisible(
      This : access Typ) return Standard.Boolean;
   function get_MemberType(
      This : access Typ) return MSSyst.Reflection.MemberTypes.Valuetype;
   function get_Module(
      This : access Typ) return access MSSyst.Reflection.Module.Typ'Class;
   function get_Namespace(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_ReflectedType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function get_StructLayoutAttribute(
      This : access Typ) return access MSSyst.Runtime.InteropServices.StructLayoutAttribute.Typ'Class;
   function get_TypeHandle(
      This : access Typ) return MSSyst.RuntimeTypeHandle.Valuetype;
   function get_TypeInitializer(
      This : access Typ) return access MSSyst.Reflection.ConstructorInfo.Typ'Class;
   function get_UnderlyingSystemType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function GetArrayRank(
      This : access Typ) return Integer;
   function GetConstructor(
      This : access Typ;
      types : access MSSyst.Type_k.Ref_arr) return access MSSyst.Reflection.ConstructorInfo.Typ'Class;
   function GetConstructor(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype;
      binder : access MSSyst.Reflection.Binder.Typ'Class;
      types : access MSSyst.Type_k.Ref_arr;
      modifiers : access MSSyst.Reflection.ParameterModifier.Valuetype_arr) return access MSSyst.Reflection.ConstructorInfo.Typ'Class;
   function GetConstructor(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype;
      binder : access MSSyst.Reflection.Binder.Typ'Class;
      callConvention : MSSyst.Reflection.CallingConventions.Valuetype;
      types : access MSSyst.Type_k.Ref_arr;
      modifiers : access MSSyst.Reflection.ParameterModifier.Valuetype_arr) return access MSSyst.Reflection.ConstructorInfo.Typ'Class;
   function GetConstructors(
      This : access Typ) return access MSSyst.Reflection.ConstructorInfo.Ref_arr;
   function GetConstructors(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.ConstructorInfo.Ref_arr;
   function GetDefaultMembers(
      This : access Typ) return access MSSyst.Reflection.MemberInfo.Ref_arr;
   function GetElementType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function GetEvent(
      This : access Typ;
      name : access MSSyst.String.Typ'Class) return access MSSyst.Reflection.EventInfo.Typ'Class;
   function GetEvent(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.EventInfo.Typ'Class;
   function GetEvents(
      This : access Typ) return access MSSyst.Reflection.EventInfo.Ref_arr;
   function GetEvents(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.EventInfo.Ref_arr;
   function GetField(
      This : access Typ;
      name : access MSSyst.String.Typ'Class) return access MSSyst.Reflection.FieldInfo.Typ'Class;
   function GetField(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.FieldInfo.Typ'Class;
   function GetFields(
      This : access Typ) return access MSSyst.Reflection.FieldInfo.Ref_arr;
   function GetFields(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.FieldInfo.Ref_arr;
   function GetGenericArguments(
      This : access Typ) return access MSSyst.Type_k.Ref_arr;
   function GetGenericParameterConstraints(
      This : access Typ) return access MSSyst.Type_k.Ref_arr;
   function GetGenericTypeDefinition(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function GetHashCode(
      This : access Typ) return Integer;
   function GetInterface(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      ignoreCase : Standard.Boolean) return access MSSyst.Type_k.Typ'Class;
   function GetInterface(
      This : access Typ;
      name : access MSSyst.String.Typ'Class) return access MSSyst.Type_k.Typ'Class;
   function GetInterfaceMap(
      This : access Typ;
      interfaceType : access MSSyst.Type_k.Typ'Class) return MSSyst.Reflection.InterfaceMapping.Valuetype;
   function GetInterfaces(
      This : access Typ) return access MSSyst.Type_k.Ref_arr;
   function GetMember(
      This : access Typ;
      name : access MSSyst.String.Typ'Class) return access MSSyst.Reflection.MemberInfo.Ref_arr;
   function GetMember(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.MemberInfo.Ref_arr;
   function GetMember(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      type_k : MSSyst.Reflection.MemberTypes.Valuetype;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.MemberInfo.Ref_arr;
   function GetMembers(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.MemberInfo.Ref_arr;
   function GetMembers(
      This : access Typ) return access MSSyst.Reflection.MemberInfo.Ref_arr;
   function GetMethod(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      types : access MSSyst.Type_k.Ref_arr;
      modifiers : access MSSyst.Reflection.ParameterModifier.Valuetype_arr) return access MSSyst.Reflection.MethodInfo.Typ'Class;
   function GetMethod(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype;
      binder : access MSSyst.Reflection.Binder.Typ'Class;
      types : access MSSyst.Type_k.Ref_arr;
      modifiers : access MSSyst.Reflection.ParameterModifier.Valuetype_arr) return access MSSyst.Reflection.MethodInfo.Typ'Class;
   function GetMethod(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype;
      binder : access MSSyst.Reflection.Binder.Typ'Class;
      callConvention : MSSyst.Reflection.CallingConventions.Valuetype;
      types : access MSSyst.Type_k.Ref_arr;
      modifiers : access MSSyst.Reflection.ParameterModifier.Valuetype_arr) return access MSSyst.Reflection.MethodInfo.Typ'Class;
   function GetMethod(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      types : access MSSyst.Type_k.Ref_arr) return access MSSyst.Reflection.MethodInfo.Typ'Class;
   function GetMethod(
      This : access Typ;
      name : access MSSyst.String.Typ'Class) return access MSSyst.Reflection.MethodInfo.Typ'Class;
   function GetMethod(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.MethodInfo.Typ'Class;
   function GetMethods(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.MethodInfo.Ref_arr;
   function GetMethods(
      This : access Typ) return access MSSyst.Reflection.MethodInfo.Ref_arr;
   function GetNestedType(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Type_k.Typ'Class;
   function GetNestedType(
      This : access Typ;
      name : access MSSyst.String.Typ'Class) return access MSSyst.Type_k.Typ'Class;
   function GetNestedTypes(
      This : access Typ) return access MSSyst.Type_k.Ref_arr;
   function GetNestedTypes(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Type_k.Ref_arr;
   function GetProperties(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.PropertyInfo.Ref_arr;
   function GetProperties(
      This : access Typ) return access MSSyst.Reflection.PropertyInfo.Ref_arr;
   function GetProperty(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.PropertyInfo.Typ'Class;
   function GetProperty(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      returnType : access MSSyst.Type_k.Typ'Class;
      types : access MSSyst.Type_k.Ref_arr;
      modifiers : access MSSyst.Reflection.ParameterModifier.Valuetype_arr) return access MSSyst.Reflection.PropertyInfo.Typ'Class;
   function GetProperty(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype;
      binder : access MSSyst.Reflection.Binder.Typ'Class;
      returnType : access MSSyst.Type_k.Typ'Class;
      types : access MSSyst.Type_k.Ref_arr;
      modifiers : access MSSyst.Reflection.ParameterModifier.Valuetype_arr) return access MSSyst.Reflection.PropertyInfo.Typ'Class;
   function GetProperty(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      returnType : access MSSyst.Type_k.Typ'Class;
      types : access MSSyst.Type_k.Ref_arr) return access MSSyst.Reflection.PropertyInfo.Typ'Class;
   function GetProperty(
      This : access Typ;
      name : access MSSyst.String.Typ'Class) return access MSSyst.Reflection.PropertyInfo.Typ'Class;
   function GetProperty(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      returnType : access MSSyst.Type_k.Typ'Class) return access MSSyst.Reflection.PropertyInfo.Typ'Class;
   function GetProperty(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      types : access MSSyst.Type_k.Ref_arr) return access MSSyst.Reflection.PropertyInfo.Typ'Class;
   function GetType(
      typeName : access MSSyst.String.Typ'Class) return access MSSyst.Type_k.Typ'Class;
   function GetType(
      typeName : access MSSyst.String.Typ'Class;
      throwOnError : Standard.Boolean) return access MSSyst.Type_k.Typ'Class;
   function GetType(
      typeName : access MSSyst.String.Typ'Class;
      throwOnError : Standard.Boolean;
      ignoreCase : Standard.Boolean) return access MSSyst.Type_k.Typ'Class;
   function GetType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function GetTypeArray(
      args : access MSSyst.Object.Ref_arr) return access MSSyst.Type_k.Ref_arr;
   function GetTypeCode(
      type_k : access MSSyst.Type_k.Typ'Class) return MSSyst.TypeCode.Valuetype;
   function GetTypeFromCLSID(
      clsid : MSSyst.Guid.Valuetype) return access MSSyst.Type_k.Typ'Class;
   function GetTypeFromCLSID(
      clsid : MSSyst.Guid.Valuetype;
      server : access MSSyst.String.Typ'Class;
      throwOnError : Standard.Boolean) return access MSSyst.Type_k.Typ'Class;
   function GetTypeFromCLSID(
      clsid : MSSyst.Guid.Valuetype;
      server : access MSSyst.String.Typ'Class) return access MSSyst.Type_k.Typ'Class;
   function GetTypeFromCLSID(
      clsid : MSSyst.Guid.Valuetype;
      throwOnError : Standard.Boolean) return access MSSyst.Type_k.Typ'Class;
   function GetTypeFromHandle(
      handle : MSSyst.RuntimeTypeHandle.Valuetype) return access MSSyst.Type_k.Typ'Class;
   function GetTypeFromProgID(
      progID : access MSSyst.String.Typ'Class) return access MSSyst.Type_k.Typ'Class;
   function GetTypeFromProgID(
      progID : access MSSyst.String.Typ'Class;
      throwOnError : Standard.Boolean) return access MSSyst.Type_k.Typ'Class;
   function GetTypeFromProgID(
      progID : access MSSyst.String.Typ'Class;
      server : access MSSyst.String.Typ'Class) return access MSSyst.Type_k.Typ'Class;
   function GetTypeFromProgID(
      progID : access MSSyst.String.Typ'Class;
      server : access MSSyst.String.Typ'Class;
      throwOnError : Standard.Boolean) return access MSSyst.Type_k.Typ'Class;
   function GetTypeHandle(
      o : access MSSyst.Object.Typ'Class) return MSSyst.RuntimeTypeHandle.Valuetype;
   function InvokeMember(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      invokeAttr : MSSyst.Reflection.BindingFlags.Valuetype;
      binder : access MSSyst.Reflection.Binder.Typ'Class;
      target : access MSSyst.Object.Typ'Class;
      args : access MSSyst.Object.Ref_arr;
      culture : access MSSyst.Globalization.CultureInfo.Typ'Class) return access MSSyst.Object.Typ'Class;
   function InvokeMember(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      invokeAttr : MSSyst.Reflection.BindingFlags.Valuetype;
      binder : access MSSyst.Reflection.Binder.Typ'Class;
      target : access MSSyst.Object.Typ'Class;
      args : access MSSyst.Object.Ref_arr;
      modifiers : access MSSyst.Reflection.ParameterModifier.Valuetype_arr;
      culture : access MSSyst.Globalization.CultureInfo.Typ'Class;
      namedParameters : access MSSyst.String.Ref_arr) return access MSSyst.Object.Typ'Class;
   function InvokeMember(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      invokeAttr : MSSyst.Reflection.BindingFlags.Valuetype;
      binder : access MSSyst.Reflection.Binder.Typ'Class;
      target : access MSSyst.Object.Typ'Class;
      args : access MSSyst.Object.Ref_arr) return access MSSyst.Object.Typ'Class;
   function IsAssignableFrom(
      This : access Typ;
      c : access MSSyst.Type_k.Typ'Class) return Standard.Boolean;
   function IsInstanceOfType(
      This : access Typ;
      o : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function IsSubclassOf(
      This : access Typ;
      c : access MSSyst.Type_k.Typ'Class) return Standard.Boolean;
   function MakeArrayType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function MakeArrayType(
      This : access Typ;
      rank : Integer) return access MSSyst.Type_k.Typ'Class;
   function MakeByRefType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function MakeGenericType(
      This : access Typ;
      typeArguments : access MSSyst.Type_k.Ref_arr) return access MSSyst.Type_k.Typ'Class;
   function MakePointerType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function ReflectionOnlyGetType(
      typeName : access MSSyst.String.Typ'Class;
      throwIfNotFound : Standard.Boolean;
      ignoreCase : Standard.Boolean) return access MSSyst.Type_k.Typ'Class;
   function ToString(
      This : access Typ) return access MSSyst.String.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,FindInterfaces,"FindInterfaces");
   pragma Import(MSIL,FindMembers,"FindMembers");
   pragma Import(MSIL,get_Assembly,"get_Assembly");
   pragma Import(MSIL,get_AssemblyQualifiedName,"get_AssemblyQualifiedName");
   pragma Import(MSIL,get_Attributes,"get_Attributes");
   pragma Import(MSIL,get_BaseType,"get_BaseType");
   pragma Import(MSIL,get_ContainsGenericParameters,"get_ContainsGenericParameters");
   pragma Import(MSIL,get_DeclaringMethod,"get_DeclaringMethod");
   pragma Import(MSIL,get_DeclaringType,"get_DeclaringType");
   pragma Import(MSIL,get_DefaultBinder,"get_DefaultBinder");
   pragma Import(MSIL,get_FullName,"get_FullName");
   pragma Import(MSIL,get_GenericParameterAttributes,"get_GenericParameterAttributes");
   pragma Import(MSIL,get_GenericParameterPosition,"get_GenericParameterPosition");
   pragma Import(MSIL,get_GUID,"get_GUID");
   pragma Import(MSIL,get_HasElementType,"get_HasElementType");
   pragma Import(MSIL,get_IsAbstract,"get_IsAbstract");
   pragma Import(MSIL,get_IsAnsiClass,"get_IsAnsiClass");
   pragma Import(MSIL,get_IsArray,"get_IsArray");
   pragma Import(MSIL,get_IsAutoClass,"get_IsAutoClass");
   pragma Import(MSIL,get_IsAutoLayout,"get_IsAutoLayout");
   pragma Import(MSIL,get_IsByRef,"get_IsByRef");
   pragma Import(MSIL,get_IsClass,"get_IsClass");
   pragma Import(MSIL,get_IsCOMObject,"get_IsCOMObject");
   pragma Import(MSIL,get_IsContextful,"get_IsContextful");
   pragma Import(MSIL,get_IsEnum,"get_IsEnum");
   pragma Import(MSIL,get_IsExplicitLayout,"get_IsExplicitLayout");
   pragma Import(MSIL,get_IsGenericParameter,"get_IsGenericParameter");
   pragma Import(MSIL,get_IsGenericType,"get_IsGenericType");
   pragma Import(MSIL,get_IsGenericTypeDefinition,"get_IsGenericTypeDefinition");
   pragma Import(MSIL,get_IsImport,"get_IsImport");
   pragma Import(MSIL,get_IsInterface,"get_IsInterface");
   pragma Import(MSIL,get_IsLayoutSequential,"get_IsLayoutSequential");
   pragma Import(MSIL,get_IsMarshalByRef,"get_IsMarshalByRef");
   pragma Import(MSIL,get_IsNested,"get_IsNested");
   pragma Import(MSIL,get_IsNestedAssembly,"get_IsNestedAssembly");
   pragma Import(MSIL,get_IsNestedFamANDAssem,"get_IsNestedFamANDAssem");
   pragma Import(MSIL,get_IsNestedFamily,"get_IsNestedFamily");
   pragma Import(MSIL,get_IsNestedFamORAssem,"get_IsNestedFamORAssem");
   pragma Import(MSIL,get_IsNestedPrivate,"get_IsNestedPrivate");
   pragma Import(MSIL,get_IsNestedPublic,"get_IsNestedPublic");
   pragma Import(MSIL,get_IsNotPublic,"get_IsNotPublic");
   pragma Import(MSIL,get_IsPointer,"get_IsPointer");
   pragma Import(MSIL,get_IsPrimitive,"get_IsPrimitive");
   pragma Import(MSIL,get_IsPublic,"get_IsPublic");
   pragma Import(MSIL,get_IsSealed,"get_IsSealed");
   pragma Import(MSIL,get_IsSerializable,"get_IsSerializable");
   pragma Import(MSIL,get_IsSpecialName,"get_IsSpecialName");
   pragma Import(MSIL,get_IsUnicodeClass,"get_IsUnicodeClass");
   pragma Import(MSIL,get_IsValueType,"get_IsValueType");
   pragma Import(MSIL,get_IsVisible,"get_IsVisible");
   pragma Import(MSIL,get_MemberType,"get_MemberType");
   pragma Import(MSIL,get_Module,"get_Module");
   pragma Import(MSIL,get_Namespace,"get_Namespace");
   pragma Import(MSIL,get_ReflectedType,"get_ReflectedType");
   pragma Import(MSIL,get_StructLayoutAttribute,"get_StructLayoutAttribute");
   pragma Import(MSIL,get_TypeHandle,"get_TypeHandle");
   pragma Import(MSIL,get_TypeInitializer,"get_TypeInitializer");
   pragma Import(MSIL,get_UnderlyingSystemType,"get_UnderlyingSystemType");
   pragma Import(MSIL,GetArrayRank,"GetArrayRank");
   pragma Import(MSIL,GetConstructor,"GetConstructor");
   pragma Import(MSIL,GetConstructors,"GetConstructors");
   pragma Import(MSIL,GetDefaultMembers,"GetDefaultMembers");
   pragma Import(MSIL,GetElementType,"GetElementType");
   pragma Import(MSIL,GetEvent,"GetEvent");
   pragma Import(MSIL,GetEvents,"GetEvents");
   pragma Import(MSIL,GetField,"GetField");
   pragma Import(MSIL,GetFields,"GetFields");
   pragma Import(MSIL,GetGenericArguments,"GetGenericArguments");
   pragma Import(MSIL,GetGenericParameterConstraints,"GetGenericParameterConstraints");
   pragma Import(MSIL,GetGenericTypeDefinition,"GetGenericTypeDefinition");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetInterface,"GetInterface");
   pragma Import(MSIL,GetInterfaceMap,"GetInterfaceMap");
   pragma Import(MSIL,GetInterfaces,"GetInterfaces");
   pragma Import(MSIL,GetMember,"GetMember");
   pragma Import(MSIL,GetMembers,"GetMembers");
   pragma Import(MSIL,GetMethod,"GetMethod");
   pragma Import(MSIL,GetMethods,"GetMethods");
   pragma Import(MSIL,GetNestedType,"GetNestedType");
   pragma Import(MSIL,GetNestedTypes,"GetNestedTypes");
   pragma Import(MSIL,GetProperties,"GetProperties");
   pragma Import(MSIL,GetProperty,"GetProperty");
   pragma Import(MSIL,GetType,"GetType");
   pragma Import(MSIL,GetTypeArray,"GetTypeArray");
   pragma Import(MSIL,GetTypeCode,"GetTypeCode");
   pragma Import(MSIL,GetTypeFromCLSID,"GetTypeFromCLSID");
   pragma Import(MSIL,GetTypeFromHandle,"GetTypeFromHandle");
   pragma Import(MSIL,GetTypeFromProgID,"GetTypeFromProgID");
   pragma Import(MSIL,GetTypeHandle,"GetTypeHandle");
   pragma Import(MSIL,InvokeMember,"InvokeMember");
   pragma Import(MSIL,IsAssignableFrom,"IsAssignableFrom");
   pragma Import(MSIL,IsInstanceOfType,"IsInstanceOfType");
   pragma Import(MSIL,IsSubclassOf,"IsSubclassOf");
   pragma Import(MSIL,MakeArrayType,"MakeArrayType");
   pragma Import(MSIL,MakeByRefType,"MakeByRefType");
   pragma Import(MSIL,MakeGenericType,"MakeGenericType");
   pragma Import(MSIL,MakePointerType,"MakePointerType");
   pragma Import(MSIL,ReflectionOnlyGetType,"ReflectionOnlyGetType");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Type_k;
pragma Import(MSIL,MSSyst.Type_k,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Type");
