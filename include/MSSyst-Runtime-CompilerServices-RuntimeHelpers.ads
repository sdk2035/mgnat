-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Array_k;
limited with MSSyst.Delegate;
limited with MSSyst.ModuleHandle;
limited with MSSyst.Runtime.CompilerServices.RuntimeHelpers.CleanupCode;
limited with MSSyst.Runtime.CompilerServices.RuntimeHelpers.TryCode;
limited with MSSyst.RuntimeFieldHandle;
limited with MSSyst.RuntimeMethodHandle;
with MSSyst.RuntimeTypeHandle;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Runtime.CompilerServices.RuntimeHelpers is
   type Typ is abstract new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function Equals(
      o1 : access MSSyst.Object.Typ'Class;
      o2 : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   procedure ExecuteCodeWithGuaranteedCleanup(
      code : access MSSyst.Runtime.CompilerServices.RuntimeHelpers.TryCode.Typ'Class;
      backoutCode : access MSSyst.Runtime.CompilerServices.RuntimeHelpers.CleanupCode.Typ'Class;
      userData : access MSSyst.Object.Typ'Class);
   function get_OffsetToStringData return Integer;
   function GetHashCode(
      o : access MSSyst.Object.Typ'Class) return Integer;
   function GetObjectValue(
      obj : access MSSyst.Object.Typ'Class) return access MSSyst.Object.Typ'Class;
   procedure InitializeArray(
      array_k : access MSSyst.Array_k.Typ'Class;
      fldHandle : MSSyst.RuntimeFieldHandle.Valuetype);
   procedure PrepareConstrainedRegions;
   procedure PrepareConstrainedRegionsNoOP;
   procedure PrepareDelegate(
      d : access MSSyst.Delegate.Typ'Class);
   procedure PrepareMethod(
      method : MSSyst.RuntimeMethodHandle.Valuetype);
   procedure PrepareMethod(
      method : MSSyst.RuntimeMethodHandle.Valuetype;
      instantiation : access MSSyst.RuntimeTypeHandle.Valuetype_arr);
   procedure ProbeForSufficientStack;
   procedure RunClassConstructor(
      type_k : MSSyst.RuntimeTypeHandle.Valuetype);
   procedure RunModuleConstructor(
      module : MSSyst.ModuleHandle.Valuetype);
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,ExecuteCodeWithGuaranteedCleanup,"ExecuteCodeWithGuaranteedCleanup");
   pragma Import(MSIL,get_OffsetToStringData,"get_OffsetToStringData");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetObjectValue,"GetObjectValue");
   pragma Import(MSIL,InitializeArray,"InitializeArray");
   pragma Import(MSIL,PrepareConstrainedRegions,"PrepareConstrainedRegions");
   pragma Import(MSIL,PrepareConstrainedRegionsNoOP,"PrepareConstrainedRegionsNoOP");
   pragma Import(MSIL,PrepareDelegate,"PrepareDelegate");
   pragma Import(MSIL,PrepareMethod,"PrepareMethod");
   pragma Import(MSIL,ProbeForSufficientStack,"ProbeForSufficientStack");
   pragma Import(MSIL,RunClassConstructor,"RunClassConstructor");
   pragma Import(MSIL,RunModuleConstructor,"RunModuleConstructor");
end MSSyst.Runtime.CompilerServices.RuntimeHelpers;
pragma Import(MSIL,MSSyst.Runtime.CompilerServices.RuntimeHelpers,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Runtime.CompilerServices.RuntimeHelpers");
