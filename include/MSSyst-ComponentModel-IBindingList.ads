-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Collections.ICollection;
with MSSyst.Collections.IEnumerable;
with MSSyst.Collections.IList;
limited with MSSyst.ComponentModel.ListChangedEventHandler;
limited with MSSyst.ComponentModel.ListSortDirection;
limited with MSSyst.ComponentModel.PropertyDescriptor;
package MSSyst.ComponentModel.IBindingList is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure add_ListChanged(
      This : access Typ;
      value : access MSSyst.ComponentModel.ListChangedEventHandler.Typ'Class) is abstract;
   procedure AddIndex(
      This : access Typ;
      property : access MSSyst.ComponentModel.PropertyDescriptor.Typ'Class) is abstract;
   function AddNew(
      This : access Typ) return access MSSyst.Object.Typ'Class is abstract;
   procedure ApplySort(
      This : access Typ;
      property : access MSSyst.ComponentModel.PropertyDescriptor.Typ'Class;
      direction : MSSyst.ComponentModel.ListSortDirection.Valuetype) is abstract;
   function Find(
      This : access Typ;
      property : access MSSyst.ComponentModel.PropertyDescriptor.Typ'Class;
      key : access MSSyst.Object.Typ'Class) return Integer is abstract;
   function get_AllowEdit(
      This : access Typ) return Standard.Boolean is abstract;
   function get_AllowNew(
      This : access Typ) return Standard.Boolean is abstract;
   function get_AllowRemove(
      This : access Typ) return Standard.Boolean is abstract;
   function get_IsSorted(
      This : access Typ) return Standard.Boolean is abstract;
   function get_SortDirection(
      This : access Typ) return MSSyst.ComponentModel.ListSortDirection.Valuetype is abstract;
   function get_SortProperty(
      This : access Typ) return access MSSyst.ComponentModel.PropertyDescriptor.Typ'Class is abstract;
   function get_SupportsChangeNotification(
      This : access Typ) return Standard.Boolean is abstract;
   function get_SupportsSearching(
      This : access Typ) return Standard.Boolean is abstract;
   function get_SupportsSorting(
      This : access Typ) return Standard.Boolean is abstract;
   procedure remove_ListChanged(
      This : access Typ;
      value : access MSSyst.ComponentModel.ListChangedEventHandler.Typ'Class) is abstract;
   procedure RemoveIndex(
      This : access Typ;
      property : access MSSyst.ComponentModel.PropertyDescriptor.Typ'Class) is abstract;
   procedure RemoveSort(
      This : access Typ) is abstract;
private
   pragma Import(MSIL,add_ListChanged,"add_ListChanged");
   pragma Import(MSIL,AddIndex,"AddIndex");
   pragma Import(MSIL,AddNew,"AddNew");
   pragma Import(MSIL,ApplySort,"ApplySort");
   pragma Import(MSIL,Find,"Find");
   pragma Import(MSIL,get_AllowEdit,"get_AllowEdit");
   pragma Import(MSIL,get_AllowNew,"get_AllowNew");
   pragma Import(MSIL,get_AllowRemove,"get_AllowRemove");
   pragma Import(MSIL,get_IsSorted,"get_IsSorted");
   pragma Import(MSIL,get_SortDirection,"get_SortDirection");
   pragma Import(MSIL,get_SortProperty,"get_SortProperty");
   pragma Import(MSIL,get_SupportsChangeNotification,"get_SupportsChangeNotification");
   pragma Import(MSIL,get_SupportsSearching,"get_SupportsSearching");
   pragma Import(MSIL,get_SupportsSorting,"get_SupportsSorting");
   pragma Import(MSIL,remove_ListChanged,"remove_ListChanged");
   pragma Import(MSIL,RemoveIndex,"RemoveIndex");
   pragma Import(MSIL,RemoveSort,"RemoveSort");
end MSSyst.ComponentModel.IBindingList;
pragma Import(MSIL,MSSyst.ComponentModel.IBindingList,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.ComponentModel.IBindingList");
