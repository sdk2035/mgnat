-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.IDisposable;
limited with MSSyst.IO.Stream;
limited with MSSyst.IO.TextWriter;
limited with MSSyst.Reflection.AssemblyName;
with MSSyst.Resources.IResourceWriter;
limited with MSSyst.Resources.ResXDataNode;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Resources.ResXResourceWriter is
   type Typ is new MSSyst.Object.Typ
         and MSSyst.Resources.IResourceWriter.Typ
         and MSSyst.IDisposable.Typ
   with record
      null;
   end record;
   BinSerializedObjectMimeType : access MSSyst.String.Typ'Class;
   pragma Import(MSIL,BinSerializedObjectMimeType,"BinSerializedObjectMimeType");
   SoapSerializedObjectMimeType : access MSSyst.String.Typ'Class;
   pragma Import(MSIL,SoapSerializedObjectMimeType,"SoapSerializedObjectMimeType");
   DefaultSerializedObjectMimeType : access MSSyst.String.Typ'Class;
   pragma Import(MSIL,DefaultSerializedObjectMimeType,"DefaultSerializedObjectMimeType");
   ByteArraySerializedObjectMimeType : access MSSyst.String.Typ'Class;
   pragma Import(MSIL,ByteArraySerializedObjectMimeType,"ByteArraySerializedObjectMimeType");
   ResMimeType : access MSSyst.String.Typ'Class;
   pragma Import(MSIL,ResMimeType,"ResMimeType");
   Version : access MSSyst.String.Typ'Class;
   pragma Import(MSIL,Version,"Version");
   ResourceSchema : access MSSyst.String.Typ'Class;
   pragma Import(MSIL,ResourceSchema,"ResourceSchema");
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_ResXResourceWriter(
      This : Ref := null;
      fileName : access MSSyst.String.Typ'Class) return Ref;
   function new_ResXResourceWriter(
      This : Ref := null;
      stream : access MSSyst.IO.Stream.Typ'Class) return Ref;
   function new_ResXResourceWriter(
      This : Ref := null;
      textWriter : access MSSyst.IO.TextWriter.Typ'Class) return Ref;
   procedure AddAlias(
      This : access Typ;
      aliasName : access MSSyst.String.Typ'Class;
      assemblyName : access MSSyst.Reflection.AssemblyName.Typ'Class);
   procedure AddMetadata(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      value : access MSSyst.String.Typ'Class);
   procedure AddMetadata(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      value : access MSSyst.Object.Typ'Class);
   procedure AddMetadata(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      value : MSIL_Types.unsigned_int8_Arr);
   procedure AddResource(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      value : access MSSyst.Object.Typ'Class);
   procedure AddResource(
      This : access Typ;
      node : access MSSyst.Resources.ResXDataNode.Typ'Class);
   procedure AddResource(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      value : access MSSyst.String.Typ'Class);
   procedure AddResource(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      value : MSIL_Types.unsigned_int8_Arr);
   procedure Close(
      This : access Typ);
   procedure Dispose(
      This : access Typ);
   procedure Generate(
      This : access Typ);
   function get_BasePath(
      This : access Typ) return access MSSyst.String.Typ'Class;
   procedure set_BasePath(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_ResXResourceWriter);
   pragma Import(MSIL,AddAlias,"AddAlias");
   pragma Import(MSIL,AddMetadata,"AddMetadata");
   pragma Import(MSIL,AddResource,"AddResource");
   pragma Import(MSIL,Close,"Close");
   pragma Import(MSIL,Dispose,"Dispose");
   pragma Import(MSIL,Generate,"Generate");
   pragma Import(MSIL,get_BasePath,"get_BasePath");
   pragma Import(MSIL,set_BasePath,"set_BasePath");
end MSSyst.Resources.ResXResourceWriter;
pragma Import(MSIL,MSSyst.Resources.ResXResourceWriter,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System.Windows.Forms]System.Resources.ResXResourceWriter");
