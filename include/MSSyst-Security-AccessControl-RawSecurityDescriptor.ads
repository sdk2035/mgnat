-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Security.AccessControl.AccessControlSections;
limited with MSSyst.Security.AccessControl.ControlFlags;
with MSSyst.Security.AccessControl.GenericSecurityDescriptor;
limited with MSSyst.Security.AccessControl.RawAcl;
limited with MSSyst.Security.Principal.SecurityIdentifier;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.AccessControl.RawSecurityDescriptor is
   type Typ is new MSSyst.Security.AccessControl.GenericSecurityDescriptor.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_RawSecurityDescriptor(
      This : Ref := null;
      flags : MSSyst.Security.AccessControl.ControlFlags.Valuetype;
      owner : access MSSyst.Security.Principal.SecurityIdentifier.Typ'Class;
      group : access MSSyst.Security.Principal.SecurityIdentifier.Typ'Class;
      systemAcl : access MSSyst.Security.AccessControl.RawAcl.Typ'Class;
      discretionaryAcl : access MSSyst.Security.AccessControl.RawAcl.Typ'Class) return Ref;
   function new_RawSecurityDescriptor(
      This : Ref := null;
      sddlForm : access MSSyst.String.Typ'Class) return Ref;
   function new_RawSecurityDescriptor(
      This : Ref := null;
      binaryForm : MSIL_Types.unsigned_int8_Arr;
      offset : Integer) return Ref;
   function get_ControlFlags(
      This : access Typ) return MSSyst.Security.AccessControl.ControlFlags.Valuetype;
   function get_DiscretionaryAcl(
      This : access Typ) return access MSSyst.Security.AccessControl.RawAcl.Typ'Class;
   function get_Group(
      This : access Typ) return access MSSyst.Security.Principal.SecurityIdentifier.Typ'Class;
   function get_Owner(
      This : access Typ) return access MSSyst.Security.Principal.SecurityIdentifier.Typ'Class;
   function get_ResourceManagerControl(
      This : access Typ) return MSIL_Types.unsigned_int8;
   function get_SystemAcl(
      This : access Typ) return access MSSyst.Security.AccessControl.RawAcl.Typ'Class;
   procedure set_DiscretionaryAcl(
      This : access Typ;
      value : access MSSyst.Security.AccessControl.RawAcl.Typ'Class);
   procedure set_Group(
      This : access Typ;
      value : access MSSyst.Security.Principal.SecurityIdentifier.Typ'Class);
   procedure set_Owner(
      This : access Typ;
      value : access MSSyst.Security.Principal.SecurityIdentifier.Typ'Class);
   procedure set_ResourceManagerControl(
      This : access Typ;
      value : MSIL_Types.unsigned_int8);
   procedure set_SystemAcl(
      This : access Typ;
      value : access MSSyst.Security.AccessControl.RawAcl.Typ'Class);
   procedure SetFlags(
      This : access Typ;
      flags : MSSyst.Security.AccessControl.ControlFlags.Valuetype);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_RawSecurityDescriptor);
   pragma Import(MSIL,get_ControlFlags,"get_ControlFlags");
   pragma Import(MSIL,get_DiscretionaryAcl,"get_DiscretionaryAcl");
   pragma Import(MSIL,get_Group,"get_Group");
   pragma Import(MSIL,get_Owner,"get_Owner");
   pragma Import(MSIL,get_ResourceManagerControl,"get_ResourceManagerControl");
   pragma Import(MSIL,get_SystemAcl,"get_SystemAcl");
   pragma Import(MSIL,set_DiscretionaryAcl,"set_DiscretionaryAcl");
   pragma Import(MSIL,set_Group,"set_Group");
   pragma Import(MSIL,set_Owner,"set_Owner");
   pragma Import(MSIL,set_ResourceManagerControl,"set_ResourceManagerControl");
   pragma Import(MSIL,set_SystemAcl,"set_SystemAcl");
   pragma Import(MSIL,SetFlags,"SetFlags");
end MSSyst.Security.AccessControl.RawSecurityDescriptor;
pragma Import(MSIL,MSSyst.Security.AccessControl.RawSecurityDescriptor,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.AccessControl.RawSecurityDescriptor");
