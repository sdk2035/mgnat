-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Security.Cryptography.MaskGenerationMethod;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.Cryptography.PKCS1MaskGenerationMethod is
   type Typ is new MSSyst.Security.Cryptography.MaskGenerationMethod.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_PKCS1MaskGenerationMethod(
      This : Ref := null) return Ref;
   function GenerateMask(
      This : access Typ;
      rgbSeed : MSIL_Types.unsigned_int8_Arr;
      cbReturn : Integer) return MSIL_Types.unsigned_int8_Array;
   function get_HashName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   procedure set_HashName(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_PKCS1MaskGenerationMethod);
   pragma Import(MSIL,GenerateMask,"GenerateMask");
   pragma Import(MSIL,get_HashName,"get_HashName");
   pragma Import(MSIL,set_HashName,"set_HashName");
end MSSyst.Security.Cryptography.PKCS1MaskGenerationMethod;
pragma Import(MSIL,MSSyst.Security.Cryptography.PKCS1MaskGenerationMethod,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.Cryptography.PKCS1MaskGenerationMethod");
