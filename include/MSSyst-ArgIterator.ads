-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.RuntimeArgumentHandle;
limited with MSSyst.RuntimeTypeHandle;
limited with MSSyst.String;
limited with MSSyst.Type_k;
limited with MSSyst.TypedReference;
with MSSyst.ValueType;
with MSSyst.Void;
package MSSyst.ArgIterator is
   type ValueType is new MSSyst.ValueType.Typ with null record;
   type ValueType_Arr is array (Natural range <>) of ValueType; -- start at 0
   type ValueType_Array is access all ValueType_Arr;
   type ValueType_addrof is access all ValueType;
   type ValueType_array_addrof is access all ValueType_Array;
   function new_ArgIterator(
      arglist : MSSyst.RuntimeArgumentHandle.Valuetype) return Valuetype;
   function new_ArgIterator(
      arglist : MSSyst.RuntimeArgumentHandle.Valuetype;
      ptr : MSIL_Types.void_addrof) return Valuetype;
   procedure End_k(
      This : Valuetype);
   function Equals(
      This : Valuetype;
      o : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function GetHashCode(
      This : Valuetype) return Integer;
   function GetNextArg(
      This : Valuetype) return MSSyst.TypedReference.Valuetype;
   function GetNextArg(
      This : Valuetype;
      rth : MSSyst.RuntimeTypeHandle.Valuetype) return MSSyst.TypedReference.Valuetype;
   function GetNextArgType(
      This : Valuetype) return MSSyst.RuntimeTypeHandle.Valuetype;
   function GetRemainingCount(
      This : Valuetype) return Integer;
private
   pragma MSIL_Constructor(new_ArgIterator);
   pragma Import(MSIL,End_k,"End");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetNextArg,"GetNextArg");
   pragma Import(MSIL,GetNextArgType,"GetNextArgType");
   pragma Import(MSIL,GetRemainingCount,"GetRemainingCount");
end MSSyst.ArgIterator;
pragma Import(MSIL,MSSyst.ArgIterator,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.ArgIterator");
