-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.ComponentModel.LicenseUsageMode;
with MSSyst.IServiceProvider;
limited with MSSyst.Reflection.Assembly;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.ComponentModel.LicenseContext is
   type Typ is new MSSyst.Object.Typ
         and MSSyst.IServiceProvider.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_LicenseContext(
      This : Ref := null) return Ref;
   function get_UsageMode(
      This : access Typ) return MSSyst.ComponentModel.LicenseUsageMode.Valuetype;
   function GetSavedLicenseKey(
      This : access Typ;
      type_k : access MSSyst.Type_k.Typ'Class;
      resourceAssembly : access MSSyst.Reflection.Assembly.Typ'Class) return access MSSyst.String.Typ'Class;
   function GetService(
      This : access Typ;
      type_k : access MSSyst.Type_k.Typ'Class) return access MSSyst.Object.Typ'Class;
   procedure SetSavedLicenseKey(
      This : access Typ;
      type_k : access MSSyst.Type_k.Typ'Class;
      key : access MSSyst.String.Typ'Class);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_LicenseContext);
   pragma Import(MSIL,get_UsageMode,"get_UsageMode");
   pragma Import(MSIL,GetSavedLicenseKey,"GetSavedLicenseKey");
   pragma Import(MSIL,GetService,"GetService");
   pragma Import(MSIL,SetSavedLicenseKey,"SetSavedLicenseKey");
end MSSyst.ComponentModel.LicenseContext;
pragma Import(MSIL,MSSyst.ComponentModel.LicenseContext,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.ComponentModel.LicenseContext");
