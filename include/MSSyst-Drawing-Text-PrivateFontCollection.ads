-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Drawing.FontFamily;
with MSSyst.Drawing.Text.FontCollection;
with MSSyst.IDisposable;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Drawing.Text.PrivateFontCollection is
   type Typ is new MSSyst.Drawing.Text.FontCollection.Typ
         and MSSyst.IDisposable.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_PrivateFontCollection(
      This : Ref := null) return Ref;
   procedure AddFontFile(
      This : access Typ;
      filename : access MSSyst.String.Typ'Class);
   procedure AddMemoryFont(
      This : access Typ;
      memory : MSIL_Types.native_int;
      length : Integer);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_PrivateFontCollection);
   pragma Import(MSIL,AddFontFile,"AddFontFile");
   pragma Import(MSIL,AddMemoryFont,"AddMemoryFont");
end MSSyst.Drawing.Text.PrivateFontCollection;
pragma Import(MSIL,MSSyst.Drawing.Text.PrivateFontCollection,
   ".ver 2:0:0:0 .publickeytoken=( b0 3f 5f 7f 11 d5 0a 3a )",
   "[System.Drawing]System.Drawing.Text.PrivateFontCollection");
