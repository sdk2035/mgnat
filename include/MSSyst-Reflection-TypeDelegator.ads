-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Globalization.CultureInfo;
limited with MSSyst.Guid;
limited with MSSyst.Reflection.Assembly;
limited with MSSyst.Reflection.Binder;
limited with MSSyst.Reflection.BindingFlags;
limited with MSSyst.Reflection.CallingConventions;
limited with MSSyst.Reflection.ConstructorInfo;
limited with MSSyst.Reflection.EventInfo;
limited with MSSyst.Reflection.FieldInfo;
limited with MSSyst.Reflection.GenericParameterAttributes;
with MSSyst.Reflection.ICustomAttributeProvider;
with MSSyst.Reflection.IReflect;
limited with MSSyst.Reflection.InterfaceMapping;
limited with MSSyst.Reflection.MemberFilter;
with MSSyst.Reflection.MemberInfo;
limited with MSSyst.Reflection.MemberTypes;
limited with MSSyst.Reflection.MethodBase;
limited with MSSyst.Reflection.MethodInfo;
limited with MSSyst.Reflection.Module;
with MSSyst.Reflection.ParameterModifier;
limited with MSSyst.Reflection.PropertyInfo;
limited with MSSyst.Reflection.TypeAttributes;
limited with MSSyst.Reflection.TypeFilter;
limited with MSSyst.Runtime.InteropServices.StructLayoutAttribute;
with MSSyst.Runtime.InteropServices.uMemberInfo;
with MSSyst.Runtime.InteropServices.uType;
limited with MSSyst.RuntimeTypeHandle;
limited with MSSyst.String;
with MSSyst.Type_k;
package MSSyst.Reflection.TypeDelegator is
   type Typ is new MSSyst.Type_k.Typ
         and MSSyst.Reflection.ICustomAttributeProvider.Typ
         and MSSyst.Runtime.InteropServices.uMemberInfo.Typ
         and MSSyst.Runtime.InteropServices.uType.Typ
         and MSSyst.Reflection.IReflect.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_TypeDelegator(
      This : Ref := null;
      delegatingType : access MSSyst.Type_k.Typ'Class) return Ref;
   function get_Assembly(
      This : access Typ) return access MSSyst.Reflection.Assembly.Typ'Class;
   function get_AssemblyQualifiedName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_BaseType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function get_FullName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_GUID(
      This : access Typ) return MSSyst.Guid.Valuetype;
   function get_MetadataToken(
      This : access Typ) return Integer;
   function get_Module(
      This : access Typ) return access MSSyst.Reflection.Module.Typ'Class;
   function get_Name(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_Namespace(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_TypeHandle(
      This : access Typ) return MSSyst.RuntimeTypeHandle.Valuetype;
   function get_UnderlyingSystemType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function GetConstructors(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.ConstructorInfo.Ref_arr;
   function GetCustomAttributes(
      This : access Typ;
      attributeType : access MSSyst.Type_k.Typ'Class;
      inherit : Standard.Boolean) return access MSSyst.Object.Ref_array;
   function GetCustomAttributes(
      This : access Typ;
      inherit : Standard.Boolean) return access MSSyst.Object.Ref_array;
   function GetElementType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function GetEvent(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.EventInfo.Typ'Class;
   function GetEvents(
      This : access Typ) return access MSSyst.Reflection.EventInfo.Ref_arr;
   function GetEvents(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.EventInfo.Ref_arr;
   function GetField(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.FieldInfo.Typ'Class;
   function GetFields(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.FieldInfo.Ref_arr;
   function GetInterface(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      ignoreCase : Standard.Boolean) return access MSSyst.Type_k.Typ'Class;
   function GetInterfaceMap(
      This : access Typ;
      interfaceType : access MSSyst.Type_k.Typ'Class) return MSSyst.Reflection.InterfaceMapping.Valuetype;
   function GetInterfaces(
      This : access Typ) return access MSSyst.Type_k.Ref_arr;
   function GetMember(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      type_k : MSSyst.Reflection.MemberTypes.Valuetype;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.MemberInfo.Ref_arr;
   function GetMembers(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.MemberInfo.Ref_arr;
   function GetMethods(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.MethodInfo.Ref_arr;
   function GetNestedType(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Type_k.Typ'Class;
   function GetNestedTypes(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Type_k.Ref_arr;
   function GetProperties(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.PropertyInfo.Ref_arr;
   function InvokeMember(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      invokeAttr : MSSyst.Reflection.BindingFlags.Valuetype;
      binder : access MSSyst.Reflection.Binder.Typ'Class;
      target : access MSSyst.Object.Typ'Class;
      args : access MSSyst.Object.Ref_arr;
      modifiers : access MSSyst.Reflection.ParameterModifier.Valuetype_arr;
      culture : access MSSyst.Globalization.CultureInfo.Typ'Class;
      namedParameters : access MSSyst.String.Ref_arr) return access MSSyst.Object.Typ'Class;
   function IsDefined(
      This : access Typ;
      attributeType : access MSSyst.Type_k.Typ'Class;
      inherit : Standard.Boolean) return Standard.Boolean;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_TypeDelegator);
   pragma Import(MSIL,get_Assembly,"get_Assembly");
   pragma Import(MSIL,get_AssemblyQualifiedName,"get_AssemblyQualifiedName");
   pragma Import(MSIL,get_BaseType,"get_BaseType");
   pragma Import(MSIL,get_FullName,"get_FullName");
   pragma Import(MSIL,get_GUID,"get_GUID");
   pragma Import(MSIL,get_MetadataToken,"get_MetadataToken");
   pragma Import(MSIL,get_Module,"get_Module");
   pragma Import(MSIL,get_Name,"get_Name");
   pragma Import(MSIL,get_Namespace,"get_Namespace");
   pragma Import(MSIL,get_TypeHandle,"get_TypeHandle");
   pragma Import(MSIL,get_UnderlyingSystemType,"get_UnderlyingSystemType");
   pragma Import(MSIL,GetConstructors,"GetConstructors");
   pragma Import(MSIL,GetCustomAttributes,"GetCustomAttributes");
   pragma Import(MSIL,GetElementType,"GetElementType");
   pragma Import(MSIL,GetEvent,"GetEvent");
   pragma Import(MSIL,GetEvents,"GetEvents");
   pragma Import(MSIL,GetField,"GetField");
   pragma Import(MSIL,GetFields,"GetFields");
   pragma Import(MSIL,GetInterface,"GetInterface");
   pragma Import(MSIL,GetInterfaceMap,"GetInterfaceMap");
   pragma Import(MSIL,GetInterfaces,"GetInterfaces");
   pragma Import(MSIL,GetMember,"GetMember");
   pragma Import(MSIL,GetMembers,"GetMembers");
   pragma Import(MSIL,GetMethods,"GetMethods");
   pragma Import(MSIL,GetNestedType,"GetNestedType");
   pragma Import(MSIL,GetNestedTypes,"GetNestedTypes");
   pragma Import(MSIL,GetProperties,"GetProperties");
   pragma Import(MSIL,InvokeMember,"InvokeMember");
   pragma Import(MSIL,IsDefined,"IsDefined");
end MSSyst.Reflection.TypeDelegator;
pragma Import(MSIL,MSSyst.Reflection.TypeDelegator,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Reflection.TypeDelegator");
