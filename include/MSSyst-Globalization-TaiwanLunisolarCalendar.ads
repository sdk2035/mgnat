-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.DateTime;
limited with MSSyst.DayOfWeek;
with MSSyst.Globalization.Calendar;
limited with MSSyst.Globalization.CalendarAlgorithmType;
limited with MSSyst.Globalization.CalendarWeekRule;
with MSSyst.Globalization.EastAsianLunisolarCalendar;
with MSSyst.ICloneable;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Globalization.TaiwanLunisolarCalendar is
   type Typ is new MSSyst.Globalization.EastAsianLunisolarCalendar.Typ
         and MSSyst.ICloneable.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_TaiwanLunisolarCalendar(
      This : Ref := null) return Ref;
   function get_Eras(
      This : access Typ) return MSIL_Types.Int32_Array;
   function get_MaxSupportedDateTime(
      This : access Typ) return MSSyst.DateTime.Valuetype;
   function get_MinSupportedDateTime(
      This : access Typ) return MSSyst.DateTime.Valuetype;
   function GetEra(
      This : access Typ;
      time : MSSyst.DateTime.Valuetype) return Integer;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_TaiwanLunisolarCalendar);
   pragma Import(MSIL,get_Eras,"get_Eras");
   pragma Import(MSIL,get_MaxSupportedDateTime,"get_MaxSupportedDateTime");
   pragma Import(MSIL,get_MinSupportedDateTime,"get_MinSupportedDateTime");
   pragma Import(MSIL,GetEra,"GetEra");
end MSSyst.Globalization.TaiwanLunisolarCalendar;
pragma Import(MSIL,MSSyst.Globalization.TaiwanLunisolarCalendar,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Globalization.TaiwanLunisolarCalendar");
