-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.ComponentModel.Design.CommandID;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.ComponentModel.Design.StandardCommands is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   AlignBottom : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,AlignBottom,"AlignBottom");
   AlignHorizontalCenters : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,AlignHorizontalCenters,"AlignHorizontalCenters");
   AlignLeft : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,AlignLeft,"AlignLeft");
   AlignRight : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,AlignRight,"AlignRight");
   AlignToGrid : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,AlignToGrid,"AlignToGrid");
   AlignTop : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,AlignTop,"AlignTop");
   AlignVerticalCenters : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,AlignVerticalCenters,"AlignVerticalCenters");
   ArrangeBottom : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,ArrangeBottom,"ArrangeBottom");
   ArrangeRight : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,ArrangeRight,"ArrangeRight");
   BringForward : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,BringForward,"BringForward");
   BringToFront : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,BringToFront,"BringToFront");
   CenterHorizontally : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,CenterHorizontally,"CenterHorizontally");
   CenterVertically : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,CenterVertically,"CenterVertically");
   ViewCode : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,ViewCode,"ViewCode");
   DocumentOutline : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,DocumentOutline,"DocumentOutline");
   Copy : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,Copy,"Copy");
   Cut : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,Cut,"Cut");
   Delete : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,Delete,"Delete");
   Group : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,Group,"Group");
   HorizSpaceConcatenate : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,HorizSpaceConcatenate,"HorizSpaceConcatenate");
   HorizSpaceDecrease : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,HorizSpaceDecrease,"HorizSpaceDecrease");
   HorizSpaceIncrease : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,HorizSpaceIncrease,"HorizSpaceIncrease");
   HorizSpaceMakeEqual : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,HorizSpaceMakeEqual,"HorizSpaceMakeEqual");
   Paste : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,Paste,"Paste");
   Properties : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,Properties,"Properties");
   Redo : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,Redo,"Redo");
   MultiLevelRedo : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,MultiLevelRedo,"MultiLevelRedo");
   SelectAll : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,SelectAll,"SelectAll");
   SendBackward : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,SendBackward,"SendBackward");
   SendToBack : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,SendToBack,"SendToBack");
   SizeToControl : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,SizeToControl,"SizeToControl");
   SizeToControlHeight : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,SizeToControlHeight,"SizeToControlHeight");
   SizeToControlWidth : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,SizeToControlWidth,"SizeToControlWidth");
   SizeToFit : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,SizeToFit,"SizeToFit");
   SizeToGrid : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,SizeToGrid,"SizeToGrid");
   SnapToGrid : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,SnapToGrid,"SnapToGrid");
   TabOrder : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,TabOrder,"TabOrder");
   Undo : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,Undo,"Undo");
   MultiLevelUndo : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,MultiLevelUndo,"MultiLevelUndo");
   Ungroup : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,Ungroup,"Ungroup");
   VertSpaceConcatenate : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,VertSpaceConcatenate,"VertSpaceConcatenate");
   VertSpaceDecrease : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,VertSpaceDecrease,"VertSpaceDecrease");
   VertSpaceIncrease : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,VertSpaceIncrease,"VertSpaceIncrease");
   VertSpaceMakeEqual : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,VertSpaceMakeEqual,"VertSpaceMakeEqual");
   ShowGrid : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,ShowGrid,"ShowGrid");
   ViewGrid : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,ViewGrid,"ViewGrid");
   Replace : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,Replace,"Replace");
   PropertiesWindow : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,PropertiesWindow,"PropertiesWindow");
   LockControls : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,LockControls,"LockControls");
   F1Help : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,F1Help,"F1Help");
   ArrangeIcons : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,ArrangeIcons,"ArrangeIcons");
   LineupIcons : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,LineupIcons,"LineupIcons");
   ShowLargeIcons : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,ShowLargeIcons,"ShowLargeIcons");
   VerbFirst : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,VerbFirst,"VerbFirst");
   VerbLast : access MSSyst.ComponentModel.Design.CommandID.Typ'Class;
   pragma Import(MSIL,VerbLast,"VerbLast");
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_StandardCommands(
      This : Ref := null) return Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_StandardCommands);
end MSSyst.ComponentModel.Design.StandardCommands;
pragma Import(MSIL,MSSyst.ComponentModel.Design.StandardCommands,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.ComponentModel.Design.StandardCommands");
