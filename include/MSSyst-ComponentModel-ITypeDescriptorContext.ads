-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.ComponentModel.IContainer;
limited with MSSyst.ComponentModel.PropertyDescriptor;
with MSSyst.IServiceProvider;
package MSSyst.ComponentModel.ITypeDescriptorContext is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function get_Container(
      This : access Typ) return access MSSyst.ComponentModel.IContainer.Typ'Class is abstract;
   function get_Instance(
      This : access Typ) return access MSSyst.Object.Typ'Class is abstract;
   function get_PropertyDescriptor(
      This : access Typ) return access MSSyst.ComponentModel.PropertyDescriptor.Typ'Class is abstract;
   procedure OnComponentChanged(
      This : access Typ) is abstract;
   function OnComponentChanging(
      This : access Typ) return Standard.Boolean is abstract;
private
   pragma Import(MSIL,get_Container,"get_Container");
   pragma Import(MSIL,get_Instance,"get_Instance");
   pragma Import(MSIL,get_PropertyDescriptor,"get_PropertyDescriptor");
   pragma Import(MSIL,OnComponentChanged,"OnComponentChanged");
   pragma Import(MSIL,OnComponentChanging,"OnComponentChanging");
end MSSyst.ComponentModel.ITypeDescriptorContext;
pragma Import(MSIL,MSSyst.ComponentModel.ITypeDescriptorContext,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.ComponentModel.ITypeDescriptorContext");
