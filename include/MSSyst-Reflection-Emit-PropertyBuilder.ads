-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Globalization.CultureInfo;
limited with MSSyst.Reflection.Binder;
limited with MSSyst.Reflection.BindingFlags;
limited with MSSyst.Reflection.ConstructorInfo;
limited with MSSyst.Reflection.Emit.CustomAttributeBuilder;
limited with MSSyst.Reflection.Emit.MethodBuilder;
limited with MSSyst.Reflection.Emit.PropertyToken;
with MSSyst.Reflection.ICustomAttributeProvider;
with MSSyst.Reflection.MemberInfo;
limited with MSSyst.Reflection.MemberTypes;
limited with MSSyst.Reflection.MethodInfo;
limited with MSSyst.Reflection.Module;
limited with MSSyst.Reflection.ParameterInfo;
limited with MSSyst.Reflection.PropertyAttributes;
with MSSyst.Reflection.PropertyInfo;
with MSSyst.Runtime.InteropServices.uMemberInfo;
with MSSyst.Runtime.InteropServices.uPropertyBuilder;
with MSSyst.Runtime.InteropServices.uPropertyInfo;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Reflection.Emit.PropertyBuilder is
   type Typ is new MSSyst.Reflection.PropertyInfo.Typ
         and MSSyst.Reflection.ICustomAttributeProvider.Typ
         and MSSyst.Runtime.InteropServices.uMemberInfo.Typ
         and MSSyst.Runtime.InteropServices.uPropertyInfo.Typ
         and MSSyst.Runtime.InteropServices.uPropertyBuilder.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure AddOtherMethod(
      This : access Typ;
      mdBuilder : access MSSyst.Reflection.Emit.MethodBuilder.Typ'Class);
   function get_Attributes(
      This : access Typ) return MSSyst.Reflection.PropertyAttributes.Valuetype;
   function get_CanRead(
      This : access Typ) return Standard.Boolean;
   function get_CanWrite(
      This : access Typ) return Standard.Boolean;
   function get_DeclaringType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function get_Module(
      This : access Typ) return access MSSyst.Reflection.Module.Typ'Class;
   function get_Name(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_PropertyToken(
      This : access Typ) return MSSyst.Reflection.Emit.PropertyToken.Valuetype;
   function get_PropertyType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function get_ReflectedType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function GetAccessors(
      This : access Typ;
      nonPublic : Standard.Boolean) return access MSSyst.Reflection.MethodInfo.Ref_arr;
   function GetCustomAttributes(
      This : access Typ;
      attributeType : access MSSyst.Type_k.Typ'Class;
      inherit : Standard.Boolean) return access MSSyst.Object.Ref_array;
   function GetCustomAttributes(
      This : access Typ;
      inherit : Standard.Boolean) return access MSSyst.Object.Ref_array;
   function GetGetMethod(
      This : access Typ;
      nonPublic : Standard.Boolean) return access MSSyst.Reflection.MethodInfo.Typ'Class;
   function GetIndexParameters(
      This : access Typ) return access MSSyst.Reflection.ParameterInfo.Ref_arr;
   function GetSetMethod(
      This : access Typ;
      nonPublic : Standard.Boolean) return access MSSyst.Reflection.MethodInfo.Typ'Class;
   function GetValue(
      This : access Typ;
      obj : access MSSyst.Object.Typ'Class;
      invokeAttr : MSSyst.Reflection.BindingFlags.Valuetype;
      binder : access MSSyst.Reflection.Binder.Typ'Class;
      index : access MSSyst.Object.Ref_arr;
      culture : access MSSyst.Globalization.CultureInfo.Typ'Class) return access MSSyst.Object.Typ'Class;
   function GetValue(
      This : access Typ;
      obj : access MSSyst.Object.Typ'Class;
      index : access MSSyst.Object.Ref_arr) return access MSSyst.Object.Typ'Class;
   function IsDefined(
      This : access Typ;
      attributeType : access MSSyst.Type_k.Typ'Class;
      inherit : Standard.Boolean) return Standard.Boolean;
   procedure SetConstant(
      This : access Typ;
      defaultValue : access MSSyst.Object.Typ'Class);
   procedure SetCustomAttribute(
      This : access Typ;
      customBuilder : access MSSyst.Reflection.Emit.CustomAttributeBuilder.Typ'Class);
   procedure SetCustomAttribute(
      This : access Typ;
      con : access MSSyst.Reflection.ConstructorInfo.Typ'Class;
      binaryAttribute : MSIL_Types.unsigned_int8_Arr);
   procedure SetGetMethod(
      This : access Typ;
      mdBuilder : access MSSyst.Reflection.Emit.MethodBuilder.Typ'Class);
   procedure SetSetMethod(
      This : access Typ;
      mdBuilder : access MSSyst.Reflection.Emit.MethodBuilder.Typ'Class);
   procedure SetValue(
      This : access Typ;
      obj : access MSSyst.Object.Typ'Class;
      value : access MSSyst.Object.Typ'Class;
      index : access MSSyst.Object.Ref_arr);
   procedure SetValue(
      This : access Typ;
      obj : access MSSyst.Object.Typ'Class;
      value : access MSSyst.Object.Typ'Class;
      invokeAttr : MSSyst.Reflection.BindingFlags.Valuetype;
      binder : access MSSyst.Reflection.Binder.Typ'Class;
      index : access MSSyst.Object.Ref_arr;
      culture : access MSSyst.Globalization.CultureInfo.Typ'Class);
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,AddOtherMethod,"AddOtherMethod");
   pragma Import(MSIL,get_Attributes,"get_Attributes");
   pragma Import(MSIL,get_CanRead,"get_CanRead");
   pragma Import(MSIL,get_CanWrite,"get_CanWrite");
   pragma Import(MSIL,get_DeclaringType,"get_DeclaringType");
   pragma Import(MSIL,get_Module,"get_Module");
   pragma Import(MSIL,get_Name,"get_Name");
   pragma Import(MSIL,get_PropertyToken,"get_PropertyToken");
   pragma Import(MSIL,get_PropertyType,"get_PropertyType");
   pragma Import(MSIL,get_ReflectedType,"get_ReflectedType");
   pragma Import(MSIL,GetAccessors,"GetAccessors");
   pragma Import(MSIL,GetCustomAttributes,"GetCustomAttributes");
   pragma Import(MSIL,GetGetMethod,"GetGetMethod");
   pragma Import(MSIL,GetIndexParameters,"GetIndexParameters");
   pragma Import(MSIL,GetSetMethod,"GetSetMethod");
   pragma Import(MSIL,GetValue,"GetValue");
   pragma Import(MSIL,IsDefined,"IsDefined");
   pragma Import(MSIL,SetConstant,"SetConstant");
   pragma Import(MSIL,SetCustomAttribute,"SetCustomAttribute");
   pragma Import(MSIL,SetGetMethod,"SetGetMethod");
   pragma Import(MSIL,SetSetMethod,"SetSetMethod");
   pragma Import(MSIL,SetValue,"SetValue");
end MSSyst.Reflection.Emit.PropertyBuilder;
pragma Import(MSIL,MSSyst.Reflection.Emit.PropertyBuilder,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Reflection.Emit.PropertyBuilder");
