-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.IFormatProvider;
limited with MSSyst.String;
limited with MSSyst.TypeCode;
limited with MSSyst.Type_k;
package MSSyst.CodeDom.CodeBinaryOperatorType is
   type ValueType is (
      Add,
      Subtract,
      Multiply,
      Divide,
      Modulus,
      Assign,
      IdentityInequality,
      IdentityEquality,
      ValueEquality,
      BitwiseOr,
      BitwiseAnd,
      BooleanOr,
      BooleanAnd,
      LessThan,
      LessThanOrEqual,
      GreaterThan,
      GreaterThanOrEqual);
   pragma Convention (MSIL, ValueType);
   for ValueType use (
      Add =>  0,
      Subtract =>  1,
      Multiply =>  2,
      Divide =>  3,
      Modulus =>  4,
      Assign =>  5,
      IdentityInequality =>  6,
      IdentityEquality =>  7,
      ValueEquality =>  8,
      BitwiseOr =>  9,
      BitwiseAnd =>  10,
      BooleanOr =>  11,
      BooleanAnd =>  12,
      LessThan =>  13,
      LessThanOrEqual =>  14,
      GreaterThan =>  15,
      GreaterThanOrEqual =>  16);
   type ValueType_Arr is array (Natural range <>) of ValueType; -- start at 0
   type ValueType_Array is access all ValueType_Arr;
   type ValueType_addrof is access all ValueType;
   type ValueType_array_addrof is access all ValueType_Array;
   function CompareTo(
      This : Valuetype;
      target : access MSSyst.Object.Typ'Class) return Integer;
   function Equals(
      This : Valuetype;
      obj : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function GetHashCode(
      This : Valuetype) return Integer;
   function GetType(
      This : Valuetype) return access MSSyst.Type_k.Typ'Class;
   function GetTypeCode(
      This : Valuetype) return MSSyst.TypeCode.Valuetype;
   function ToString(
      This : Valuetype;
      provider : access MSSyst.IFormatProvider.Typ'Class) return access MSSyst.String.Typ'Class;
   function ToString(
      This : Valuetype) return access MSSyst.String.Typ'Class;
   function ToString(
      This : Valuetype;
      format : access MSSyst.String.Typ'Class;
      provider : access MSSyst.IFormatProvider.Typ'Class) return access MSSyst.String.Typ'Class;
   function ToString(
      This : Valuetype;
      format : access MSSyst.String.Typ'Class) return access MSSyst.String.Typ'Class;
private
   pragma Import(MSIL,CompareTo,"CompareTo");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetType,"GetType");
   pragma Import(MSIL,GetTypeCode,"GetTypeCode");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.CodeDom.CodeBinaryOperatorType;
pragma Import(MSIL,MSSyst.CodeDom.CodeBinaryOperatorType,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.CodeDom.CodeBinaryOperatorType");
