-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Security.Cryptography.CspParameters;
limited with MSSyst.Security.Permissions.KeyContainerPermissionFlags;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.Permissions.KeyContainerPermissionAccessEntry is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_KeyContainerPermissionAccessEntry(
      This : Ref := null;
      keyContainerName : access MSSyst.String.Typ'Class;
      flags : MSSyst.Security.Permissions.KeyContainerPermissionFlags.Valuetype) return Ref;
   function new_KeyContainerPermissionAccessEntry(
      This : Ref := null;
      parameters : access MSSyst.Security.Cryptography.CspParameters.Typ'Class;
      flags : MSSyst.Security.Permissions.KeyContainerPermissionFlags.Valuetype) return Ref;
   function new_KeyContainerPermissionAccessEntry(
      This : Ref := null;
      keyStore : access MSSyst.String.Typ'Class;
      providerName : access MSSyst.String.Typ'Class;
      providerType : Integer;
      keyContainerName : access MSSyst.String.Typ'Class;
      keySpec : Integer;
      flags : MSSyst.Security.Permissions.KeyContainerPermissionFlags.Valuetype) return Ref;
   function Equals(
      This : access Typ;
      o : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function get_Flags(
      This : access Typ) return MSSyst.Security.Permissions.KeyContainerPermissionFlags.Valuetype;
   function get_KeyContainerName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_KeySpec(
      This : access Typ) return Integer;
   function get_KeyStore(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_ProviderName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_ProviderType(
      This : access Typ) return Integer;
   function GetHashCode(
      This : access Typ) return Integer;
   procedure set_Flags(
      This : access Typ;
      value : MSSyst.Security.Permissions.KeyContainerPermissionFlags.Valuetype);
   procedure set_KeyContainerName(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_KeySpec(
      This : access Typ;
      value : Integer);
   procedure set_KeyStore(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_ProviderName(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_ProviderType(
      This : access Typ;
      value : Integer);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_KeyContainerPermissionAccessEntry);
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_Flags,"get_Flags");
   pragma Import(MSIL,get_KeyContainerName,"get_KeyContainerName");
   pragma Import(MSIL,get_KeySpec,"get_KeySpec");
   pragma Import(MSIL,get_KeyStore,"get_KeyStore");
   pragma Import(MSIL,get_ProviderName,"get_ProviderName");
   pragma Import(MSIL,get_ProviderType,"get_ProviderType");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,set_Flags,"set_Flags");
   pragma Import(MSIL,set_KeyContainerName,"set_KeyContainerName");
   pragma Import(MSIL,set_KeySpec,"set_KeySpec");
   pragma Import(MSIL,set_KeyStore,"set_KeyStore");
   pragma Import(MSIL,set_ProviderName,"set_ProviderName");
   pragma Import(MSIL,set_ProviderType,"set_ProviderType");
end MSSyst.Security.Permissions.KeyContainerPermissionAccessEntry;
pragma Import(MSIL,MSSyst.Security.Permissions.KeyContainerPermissionAccessEntry,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.Permissions.KeyContainerPermissionAccessEntry");
