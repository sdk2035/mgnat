-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Collections.Specialized.StringDictionary;
limited with MSSyst.Diagnostics.ProcessWindowStyle;
limited with MSSyst.Security.SecureString;
limited with MSSyst.String;
limited with MSSyst.Text.Encoding;
limited with MSSyst.Type_k;
package MSSyst.Diagnostics.ProcessStartInfo is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_ProcessStartInfo(
      This : Ref := null) return Ref;
   function new_ProcessStartInfo(
      This : Ref := null;
      fileName : access MSSyst.String.Typ'Class) return Ref;
   function new_ProcessStartInfo(
      This : Ref := null;
      fileName : access MSSyst.String.Typ'Class;
      arguments : access MSSyst.String.Typ'Class) return Ref;
   function get_Arguments(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_CreateNoWindow(
      This : access Typ) return Standard.Boolean;
   function get_Domain(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_EnvironmentVariables(
      This : access Typ) return access MSSyst.Collections.Specialized.StringDictionary.Typ'Class;
   function get_ErrorDialog(
      This : access Typ) return Standard.Boolean;
   function get_ErrorDialogParentHandle(
      This : access Typ) return MSIL_Types.native_int;
   function get_FileName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_LoadUserProfile(
      This : access Typ) return Standard.Boolean;
   function get_Password(
      This : access Typ) return access MSSyst.Security.SecureString.Typ'Class;
   function get_RedirectStandardError(
      This : access Typ) return Standard.Boolean;
   function get_RedirectStandardInput(
      This : access Typ) return Standard.Boolean;
   function get_RedirectStandardOutput(
      This : access Typ) return Standard.Boolean;
   function get_StandardErrorEncoding(
      This : access Typ) return access MSSyst.Text.Encoding.Typ'Class;
   function get_StandardOutputEncoding(
      This : access Typ) return access MSSyst.Text.Encoding.Typ'Class;
   function get_UserName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_UseShellExecute(
      This : access Typ) return Standard.Boolean;
   function get_Verb(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_Verbs(
      This : access Typ) return access MSSyst.String.Ref_arr;
   function get_WindowStyle(
      This : access Typ) return MSSyst.Diagnostics.ProcessWindowStyle.Valuetype;
   function get_WorkingDirectory(
      This : access Typ) return access MSSyst.String.Typ'Class;
   procedure set_Arguments(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_CreateNoWindow(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_Domain(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_ErrorDialog(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_ErrorDialogParentHandle(
      This : access Typ;
      value : MSIL_Types.native_int);
   procedure set_FileName(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_LoadUserProfile(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_Password(
      This : access Typ;
      value : access MSSyst.Security.SecureString.Typ'Class);
   procedure set_RedirectStandardError(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_RedirectStandardInput(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_RedirectStandardOutput(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_StandardErrorEncoding(
      This : access Typ;
      value : access MSSyst.Text.Encoding.Typ'Class);
   procedure set_StandardOutputEncoding(
      This : access Typ;
      value : access MSSyst.Text.Encoding.Typ'Class);
   procedure set_UserName(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_UseShellExecute(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_Verb(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_WindowStyle(
      This : access Typ;
      value : MSSyst.Diagnostics.ProcessWindowStyle.Valuetype);
   procedure set_WorkingDirectory(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_ProcessStartInfo);
   pragma Import(MSIL,get_Arguments,"get_Arguments");
   pragma Import(MSIL,get_CreateNoWindow,"get_CreateNoWindow");
   pragma Import(MSIL,get_Domain,"get_Domain");
   pragma Import(MSIL,get_EnvironmentVariables,"get_EnvironmentVariables");
   pragma Import(MSIL,get_ErrorDialog,"get_ErrorDialog");
   pragma Import(MSIL,get_ErrorDialogParentHandle,"get_ErrorDialogParentHandle");
   pragma Import(MSIL,get_FileName,"get_FileName");
   pragma Import(MSIL,get_LoadUserProfile,"get_LoadUserProfile");
   pragma Import(MSIL,get_Password,"get_Password");
   pragma Import(MSIL,get_RedirectStandardError,"get_RedirectStandardError");
   pragma Import(MSIL,get_RedirectStandardInput,"get_RedirectStandardInput");
   pragma Import(MSIL,get_RedirectStandardOutput,"get_RedirectStandardOutput");
   pragma Import(MSIL,get_StandardErrorEncoding,"get_StandardErrorEncoding");
   pragma Import(MSIL,get_StandardOutputEncoding,"get_StandardOutputEncoding");
   pragma Import(MSIL,get_UserName,"get_UserName");
   pragma Import(MSIL,get_UseShellExecute,"get_UseShellExecute");
   pragma Import(MSIL,get_Verb,"get_Verb");
   pragma Import(MSIL,get_Verbs,"get_Verbs");
   pragma Import(MSIL,get_WindowStyle,"get_WindowStyle");
   pragma Import(MSIL,get_WorkingDirectory,"get_WorkingDirectory");
   pragma Import(MSIL,set_Arguments,"set_Arguments");
   pragma Import(MSIL,set_CreateNoWindow,"set_CreateNoWindow");
   pragma Import(MSIL,set_Domain,"set_Domain");
   pragma Import(MSIL,set_ErrorDialog,"set_ErrorDialog");
   pragma Import(MSIL,set_ErrorDialogParentHandle,"set_ErrorDialogParentHandle");
   pragma Import(MSIL,set_FileName,"set_FileName");
   pragma Import(MSIL,set_LoadUserProfile,"set_LoadUserProfile");
   pragma Import(MSIL,set_Password,"set_Password");
   pragma Import(MSIL,set_RedirectStandardError,"set_RedirectStandardError");
   pragma Import(MSIL,set_RedirectStandardInput,"set_RedirectStandardInput");
   pragma Import(MSIL,set_RedirectStandardOutput,"set_RedirectStandardOutput");
   pragma Import(MSIL,set_StandardErrorEncoding,"set_StandardErrorEncoding");
   pragma Import(MSIL,set_StandardOutputEncoding,"set_StandardOutputEncoding");
   pragma Import(MSIL,set_UserName,"set_UserName");
   pragma Import(MSIL,set_UseShellExecute,"set_UseShellExecute");
   pragma Import(MSIL,set_Verb,"set_Verb");
   pragma Import(MSIL,set_WindowStyle,"set_WindowStyle");
   pragma Import(MSIL,set_WorkingDirectory,"set_WorkingDirectory");
end MSSyst.Diagnostics.ProcessStartInfo;
pragma Import(MSIL,MSSyst.Diagnostics.ProcessStartInfo,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Diagnostics.ProcessStartInfo");
