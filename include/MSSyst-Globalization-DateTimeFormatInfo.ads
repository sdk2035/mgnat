-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.DayOfWeek;
limited with MSSyst.Globalization.CalendarWeekRule;
limited with MSSyst.Globalization.Calendar;
with MSSyst.ICloneable;
with MSSyst.IFormatProvider;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Globalization.DateTimeFormatInfo is
   type Typ is new MSSyst.Object.Typ
         and MSSyst.ICloneable.Typ
         and MSSyst.IFormatProvider.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_DateTimeFormatInfo(
      This : Ref := null) return Ref;
   function Clone(
      This : access Typ) return access MSSyst.Object.Typ'Class;
   function get_AbbreviatedDayNames(
      This : access Typ) return access MSSyst.String.Ref_arr;
   function get_AbbreviatedMonthGenitiveNames(
      This : access Typ) return access MSSyst.String.Ref_arr;
   function get_AbbreviatedMonthNames(
      This : access Typ) return access MSSyst.String.Ref_arr;
   function get_AMDesignator(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_Calendar(
      This : access Typ) return access MSSyst.Globalization.Calendar.Typ'Class;
   function get_CalendarWeekRule(
      This : access Typ) return MSSyst.Globalization.CalendarWeekRule.Valuetype;
   function get_CurrentInfo return access MSSyst.Globalization.DateTimeFormatInfo.Typ'Class;
   function get_DateSeparator(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_DayNames(
      This : access Typ) return access MSSyst.String.Ref_arr;
   function get_FirstDayOfWeek(
      This : access Typ) return MSSyst.DayOfWeek.Valuetype;
   function get_FullDateTimePattern(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_InvariantInfo return access MSSyst.Globalization.DateTimeFormatInfo.Typ'Class;
   function get_IsReadOnly(
      This : access Typ) return Standard.Boolean;
   function get_LongDatePattern(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_LongTimePattern(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_MonthDayPattern(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_MonthGenitiveNames(
      This : access Typ) return access MSSyst.String.Ref_arr;
   function get_MonthNames(
      This : access Typ) return access MSSyst.String.Ref_arr;
   function get_NativeCalendarName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_PMDesignator(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_RFC1123Pattern(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_ShortDatePattern(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_ShortestDayNames(
      This : access Typ) return access MSSyst.String.Ref_arr;
   function get_ShortTimePattern(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_SortableDateTimePattern(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_TimeSeparator(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_UniversalSortableDateTimePattern(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_YearMonthPattern(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function GetAbbreviatedDayName(
      This : access Typ;
      dayofweek : MSSyst.DayOfWeek.Valuetype) return access MSSyst.String.Typ'Class;
   function GetAbbreviatedEraName(
      This : access Typ;
      era : Integer) return access MSSyst.String.Typ'Class;
   function GetAbbreviatedMonthName(
      This : access Typ;
      month : Integer) return access MSSyst.String.Typ'Class;
   function GetAllDateTimePatterns(
      This : access Typ) return access MSSyst.String.Ref_arr;
   function GetAllDateTimePatterns(
      This : access Typ;
      format : Wide_Character) return access MSSyst.String.Ref_arr;
   function GetDayName(
      This : access Typ;
      dayofweek : MSSyst.DayOfWeek.Valuetype) return access MSSyst.String.Typ'Class;
   function GetEra(
      This : access Typ;
      eraName : access MSSyst.String.Typ'Class) return Integer;
   function GetEraName(
      This : access Typ;
      era : Integer) return access MSSyst.String.Typ'Class;
   function GetFormat(
      This : access Typ;
      formatType : access MSSyst.Type_k.Typ'Class) return access MSSyst.Object.Typ'Class;
   function GetInstance(
      provider : access MSSyst.IFormatProvider.Typ'Class) return access MSSyst.Globalization.DateTimeFormatInfo.Typ'Class;
   function GetMonthName(
      This : access Typ;
      month : Integer) return access MSSyst.String.Typ'Class;
   function GetShortestDayName(
      This : access Typ;
      dayOfWeek : MSSyst.DayOfWeek.Valuetype) return access MSSyst.String.Typ'Class;
   function ReadOnly(
      dtfi : access MSSyst.Globalization.DateTimeFormatInfo.Typ'Class) return access MSSyst.Globalization.DateTimeFormatInfo.Typ'Class;
   procedure set_AbbreviatedDayNames(
      This : access Typ;
      value : access MSSyst.String.Ref_arr);
   procedure set_AbbreviatedMonthGenitiveNames(
      This : access Typ;
      value : access MSSyst.String.Ref_arr);
   procedure set_AbbreviatedMonthNames(
      This : access Typ;
      value : access MSSyst.String.Ref_arr);
   procedure set_AMDesignator(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_Calendar(
      This : access Typ;
      value : access MSSyst.Globalization.Calendar.Typ'Class);
   procedure set_CalendarWeekRule(
      This : access Typ;
      value : MSSyst.Globalization.CalendarWeekRule.Valuetype);
   procedure set_DateSeparator(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_DayNames(
      This : access Typ;
      value : access MSSyst.String.Ref_arr);
   procedure set_FirstDayOfWeek(
      This : access Typ;
      value : MSSyst.DayOfWeek.Valuetype);
   procedure set_FullDateTimePattern(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_LongDatePattern(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_LongTimePattern(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_MonthDayPattern(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_MonthGenitiveNames(
      This : access Typ;
      value : access MSSyst.String.Ref_arr);
   procedure set_MonthNames(
      This : access Typ;
      value : access MSSyst.String.Ref_arr);
   procedure set_PMDesignator(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_ShortDatePattern(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_ShortestDayNames(
      This : access Typ;
      value : access MSSyst.String.Ref_arr);
   procedure set_ShortTimePattern(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_TimeSeparator(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure set_YearMonthPattern(
      This : access Typ;
      value : access MSSyst.String.Typ'Class);
   procedure SetAllDateTimePatterns(
      This : access Typ;
      patterns : access MSSyst.String.Ref_arr;
      format : Wide_Character);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_DateTimeFormatInfo);
   pragma Import(MSIL,Clone,"Clone");
   pragma Import(MSIL,get_AbbreviatedDayNames,"get_AbbreviatedDayNames");
   pragma Import(MSIL,get_AbbreviatedMonthGenitiveNames,"get_AbbreviatedMonthGenitiveNames");
   pragma Import(MSIL,get_AbbreviatedMonthNames,"get_AbbreviatedMonthNames");
   pragma Import(MSIL,get_AMDesignator,"get_AMDesignator");
   pragma Import(MSIL,get_Calendar,"get_Calendar");
   pragma Import(MSIL,get_CalendarWeekRule,"get_CalendarWeekRule");
   pragma Import(MSIL,get_CurrentInfo,"get_CurrentInfo");
   pragma Import(MSIL,get_DateSeparator,"get_DateSeparator");
   pragma Import(MSIL,get_DayNames,"get_DayNames");
   pragma Import(MSIL,get_FirstDayOfWeek,"get_FirstDayOfWeek");
   pragma Import(MSIL,get_FullDateTimePattern,"get_FullDateTimePattern");
   pragma Import(MSIL,get_InvariantInfo,"get_InvariantInfo");
   pragma Import(MSIL,get_IsReadOnly,"get_IsReadOnly");
   pragma Import(MSIL,get_LongDatePattern,"get_LongDatePattern");
   pragma Import(MSIL,get_LongTimePattern,"get_LongTimePattern");
   pragma Import(MSIL,get_MonthDayPattern,"get_MonthDayPattern");
   pragma Import(MSIL,get_MonthGenitiveNames,"get_MonthGenitiveNames");
   pragma Import(MSIL,get_MonthNames,"get_MonthNames");
   pragma Import(MSIL,get_NativeCalendarName,"get_NativeCalendarName");
   pragma Import(MSIL,get_PMDesignator,"get_PMDesignator");
   pragma Import(MSIL,get_RFC1123Pattern,"get_RFC1123Pattern");
   pragma Import(MSIL,get_ShortDatePattern,"get_ShortDatePattern");
   pragma Import(MSIL,get_ShortestDayNames,"get_ShortestDayNames");
   pragma Import(MSIL,get_ShortTimePattern,"get_ShortTimePattern");
   pragma Import(MSIL,get_SortableDateTimePattern,"get_SortableDateTimePattern");
   pragma Import(MSIL,get_TimeSeparator,"get_TimeSeparator");
   pragma Import(MSIL,get_UniversalSortableDateTimePattern,"get_UniversalSortableDateTimePattern");
   pragma Import(MSIL,get_YearMonthPattern,"get_YearMonthPattern");
   pragma Import(MSIL,GetAbbreviatedDayName,"GetAbbreviatedDayName");
   pragma Import(MSIL,GetAbbreviatedEraName,"GetAbbreviatedEraName");
   pragma Import(MSIL,GetAbbreviatedMonthName,"GetAbbreviatedMonthName");
   pragma Import(MSIL,GetAllDateTimePatterns,"GetAllDateTimePatterns");
   pragma Import(MSIL,GetDayName,"GetDayName");
   pragma Import(MSIL,GetEra,"GetEra");
   pragma Import(MSIL,GetEraName,"GetEraName");
   pragma Import(MSIL,GetFormat,"GetFormat");
   pragma Import(MSIL,GetInstance,"GetInstance");
   pragma Import(MSIL,GetMonthName,"GetMonthName");
   pragma Import(MSIL,GetShortestDayName,"GetShortestDayName");
   pragma Import(MSIL,ReadOnly,"ReadOnly");
   pragma Import(MSIL,set_AbbreviatedDayNames,"set_AbbreviatedDayNames");
   pragma Import(MSIL,set_AbbreviatedMonthGenitiveNames,"set_AbbreviatedMonthGenitiveNames");
   pragma Import(MSIL,set_AbbreviatedMonthNames,"set_AbbreviatedMonthNames");
   pragma Import(MSIL,set_AMDesignator,"set_AMDesignator");
   pragma Import(MSIL,set_Calendar,"set_Calendar");
   pragma Import(MSIL,set_CalendarWeekRule,"set_CalendarWeekRule");
   pragma Import(MSIL,set_DateSeparator,"set_DateSeparator");
   pragma Import(MSIL,set_DayNames,"set_DayNames");
   pragma Import(MSIL,set_FirstDayOfWeek,"set_FirstDayOfWeek");
   pragma Import(MSIL,set_FullDateTimePattern,"set_FullDateTimePattern");
   pragma Import(MSIL,set_LongDatePattern,"set_LongDatePattern");
   pragma Import(MSIL,set_LongTimePattern,"set_LongTimePattern");
   pragma Import(MSIL,set_MonthDayPattern,"set_MonthDayPattern");
   pragma Import(MSIL,set_MonthGenitiveNames,"set_MonthGenitiveNames");
   pragma Import(MSIL,set_MonthNames,"set_MonthNames");
   pragma Import(MSIL,set_PMDesignator,"set_PMDesignator");
   pragma Import(MSIL,set_ShortDatePattern,"set_ShortDatePattern");
   pragma Import(MSIL,set_ShortestDayNames,"set_ShortestDayNames");
   pragma Import(MSIL,set_ShortTimePattern,"set_ShortTimePattern");
   pragma Import(MSIL,set_TimeSeparator,"set_TimeSeparator");
   pragma Import(MSIL,set_YearMonthPattern,"set_YearMonthPattern");
   pragma Import(MSIL,SetAllDateTimePatterns,"SetAllDateTimePatterns");
end MSSyst.Globalization.DateTimeFormatInfo;
pragma Import(MSIL,MSSyst.Globalization.DateTimeFormatInfo,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Globalization.DateTimeFormatInfo");
