-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.Principal.IdentityReference is
   type Typ is abstract new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function Equals(
      This : access Typ;
      o : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function get_Value(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function GetHashCode(
      This : access Typ) return Integer;
   function IsValidTargetType(
      This : access Typ;
      targetType : access MSSyst.Type_k.Typ'Class) return Standard.Boolean;
   function op_Equality(
      left : access MSSyst.Security.Principal.IdentityReference.Typ'Class;
      right : access MSSyst.Security.Principal.IdentityReference.Typ'Class) return Standard.Boolean;
   function op_Inequality(
      left : access MSSyst.Security.Principal.IdentityReference.Typ'Class;
      right : access MSSyst.Security.Principal.IdentityReference.Typ'Class) return Standard.Boolean;
   function ToString(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function Translate(
      This : access Typ;
      targetType : access MSSyst.Type_k.Typ'Class) return access MSSyst.Security.Principal.IdentityReference.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_Value,"get_Value");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,IsValidTargetType,"IsValidTargetType");
   pragma Import(MSIL,op_Equality,"op_Equality");
   pragma Import(MSIL,op_Inequality,"op_Inequality");
   pragma Import(MSIL,ToString,"ToString");
   pragma Import(MSIL,Translate,"Translate");
end MSSyst.Security.Principal.IdentityReference;
pragma Import(MSIL,MSSyst.Security.Principal.IdentityReference,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.Principal.IdentityReference");
