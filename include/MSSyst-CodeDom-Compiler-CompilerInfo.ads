-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.CodeDom.Compiler.CodeDomProvider;
limited with MSSyst.CodeDom.Compiler.CompilerParameters;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.CodeDom.Compiler.CompilerInfo is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function CreateDefaultCompilerParameters(
      This : access Typ) return access MSSyst.CodeDom.Compiler.CompilerParameters.Typ'Class;
   function CreateProvider(
      This : access Typ) return access MSSyst.CodeDom.Compiler.CodeDomProvider.Typ'Class;
   function Equals(
      This : access Typ;
      o : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function get_CodeDomProviderType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function get_IsCodeDomProviderTypeValid(
      This : access Typ) return Standard.Boolean;
   function GetExtensions(
      This : access Typ) return access MSSyst.String.Ref_arr;
   function GetHashCode(
      This : access Typ) return Integer;
   function GetLanguages(
      This : access Typ) return access MSSyst.String.Ref_arr;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,CreateDefaultCompilerParameters,"CreateDefaultCompilerParameters");
   pragma Import(MSIL,CreateProvider,"CreateProvider");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,get_CodeDomProviderType,"get_CodeDomProviderType");
   pragma Import(MSIL,get_IsCodeDomProviderTypeValid,"get_IsCodeDomProviderTypeValid");
   pragma Import(MSIL,GetExtensions,"GetExtensions");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetLanguages,"GetLanguages");
end MSSyst.CodeDom.Compiler.CompilerInfo;
pragma Import(MSIL,MSSyst.CodeDom.Compiler.CompilerInfo,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.CodeDom.Compiler.CompilerInfo");
