-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Reflection.Assembly;
limited with MSSyst.Security.HostSecurityManagerOptions;
limited with MSSyst.Security.PermissionSet;
limited with MSSyst.Security.Policy.ApplicationTrust;
limited with MSSyst.Security.Policy.Evidence;
limited with MSSyst.Security.Policy.PolicyLevel;
limited with MSSyst.Security.Policy.TrustManagerContext;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.HostSecurityManager is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_HostSecurityManager(
      This : Ref := null) return Ref;
   function DetermineApplicationTrust(
      This : access Typ;
      applicationEvidence : access MSSyst.Security.Policy.Evidence.Typ'Class;
      activatorEvidence : access MSSyst.Security.Policy.Evidence.Typ'Class;
      context : access MSSyst.Security.Policy.TrustManagerContext.Typ'Class) return access MSSyst.Security.Policy.ApplicationTrust.Typ'Class;
   function get_DomainPolicy(
      This : access Typ) return access MSSyst.Security.Policy.PolicyLevel.Typ'Class;
   function get_Flags(
      This : access Typ) return MSSyst.Security.HostSecurityManagerOptions.Valuetype;
   function ProvideAppDomainEvidence(
      This : access Typ;
      inputEvidence : access MSSyst.Security.Policy.Evidence.Typ'Class) return access MSSyst.Security.Policy.Evidence.Typ'Class;
   function ProvideAssemblyEvidence(
      This : access Typ;
      loadedAssembly : access MSSyst.Reflection.Assembly.Typ'Class;
      inputEvidence : access MSSyst.Security.Policy.Evidence.Typ'Class) return access MSSyst.Security.Policy.Evidence.Typ'Class;
   function ResolvePolicy(
      This : access Typ;
      evidence : access MSSyst.Security.Policy.Evidence.Typ'Class) return access MSSyst.Security.PermissionSet.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_HostSecurityManager);
   pragma Import(MSIL,DetermineApplicationTrust,"DetermineApplicationTrust");
   pragma Import(MSIL,get_DomainPolicy,"get_DomainPolicy");
   pragma Import(MSIL,get_Flags,"get_Flags");
   pragma Import(MSIL,ProvideAppDomainEvidence,"ProvideAppDomainEvidence");
   pragma Import(MSIL,ProvideAssemblyEvidence,"ProvideAssemblyEvidence");
   pragma Import(MSIL,ResolvePolicy,"ResolvePolicy");
end MSSyst.Security.HostSecurityManager;
pragma Import(MSIL,MSSyst.Security.HostSecurityManager,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.HostSecurityManager");
