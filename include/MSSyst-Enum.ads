-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Array_k;
with MSSyst.IComparable;
with MSSyst.IConvertible;
limited with MSSyst.IFormatProvider;
with MSSyst.IFormattable;
limited with MSSyst.SByte;
limited with MSSyst.String;
limited with MSSyst.TypeCode;
limited with MSSyst.Type_k;
with MSSyst.ValueType;
package MSSyst.Enum is
   type Typ is abstract new MSSyst.ValueType.Typ
         and MSSyst.IComparable.Typ
         and MSSyst.IFormattable.Typ
         and MSSyst.IConvertible.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function CompareTo(
      This : access Typ;
      target : access MSSyst.Object.Typ'Class) return Integer;
   function Equals(
      This : access Typ;
      obj : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function Format(
      enumType : access MSSyst.Type_k.Typ'Class;
      value : access MSSyst.Object.Typ'Class;
      format : access MSSyst.String.Typ'Class) return access MSSyst.String.Typ'Class;
   function GetHashCode(
      This : access Typ) return Integer;
   function GetName(
      enumType : access MSSyst.Type_k.Typ'Class;
      value : access MSSyst.Object.Typ'Class) return access MSSyst.String.Typ'Class;
   function GetNames(
      enumType : access MSSyst.Type_k.Typ'Class) return access MSSyst.String.Ref_arr;
   function GetTypeCode(
      This : access Typ) return MSSyst.TypeCode.Valuetype;
   function GetUnderlyingType(
      enumType : access MSSyst.Type_k.Typ'Class) return access MSSyst.Type_k.Typ'Class;
   function GetValues(
      enumType : access MSSyst.Type_k.Typ'Class) return access MSSyst.Array_k.Typ'Class;
   function IsDefined(
      enumType : access MSSyst.Type_k.Typ'Class;
      value : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function Parse(
      enumType : access MSSyst.Type_k.Typ'Class;
      value : access MSSyst.String.Typ'Class) return access MSSyst.Object.Typ'Class;
   function Parse(
      enumType : access MSSyst.Type_k.Typ'Class;
      value : access MSSyst.String.Typ'Class;
      ignoreCase : Standard.Boolean) return access MSSyst.Object.Typ'Class;
   function ToObject(
      enumType : access MSSyst.Type_k.Typ'Class;
      value : MSIL_Types.int16) return access MSSyst.Object.Typ'Class;
   function ToObject(
      enumType : access MSSyst.Type_k.Typ'Class;
      value : MSIL_Types.unsigned_int16) return access MSSyst.Object.Typ'Class;
   function ToObject(
      enumType : access MSSyst.Type_k.Typ'Class;
      value : MSIL_Types.unsigned_int8) return access MSSyst.Object.Typ'Class;
   function ToObject(
      enumType : access MSSyst.Type_k.Typ'Class;
      value : Integer) return access MSSyst.Object.Typ'Class;
   function ToObject(
      enumType : access MSSyst.Type_k.Typ'Class;
      value : MSSyst.SByte.Valuetype) return access MSSyst.Object.Typ'Class;
   function ToObject(
      enumType : access MSSyst.Type_k.Typ'Class;
      value : MSIL_Types.Unsigned_Long_Long_Integer) return access MSSyst.Object.Typ'Class;
   function ToObject(
      enumType : access MSSyst.Type_k.Typ'Class;
      value : access MSSyst.Object.Typ'Class) return access MSSyst.Object.Typ'Class;
   function ToObject(
      enumType : access MSSyst.Type_k.Typ'Class;
      value : MSIL_Types.Unsigned_Integer) return access MSSyst.Object.Typ'Class;
   function ToObject(
      enumType : access MSSyst.Type_k.Typ'Class;
      value : Long_Long_Integer) return access MSSyst.Object.Typ'Class;
   function ToString(
      This : access Typ;
      format : access MSSyst.String.Typ'Class;
      provider : access MSSyst.IFormatProvider.Typ'Class) return access MSSyst.String.Typ'Class;
   function ToString(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function ToString(
      This : access Typ;
      provider : access MSSyst.IFormatProvider.Typ'Class) return access MSSyst.String.Typ'Class;
   function ToString(
      This : access Typ;
      format : access MSSyst.String.Typ'Class) return access MSSyst.String.Typ'Class;
private
   pragma Import(MSIL,CompareTo,"CompareTo");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,Format,"Format");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetName,"GetName");
   pragma Import(MSIL,GetNames,"GetNames");
   pragma Import(MSIL,GetTypeCode,"GetTypeCode");
   pragma Import(MSIL,GetUnderlyingType,"GetUnderlyingType");
   pragma Import(MSIL,GetValues,"GetValues");
   pragma Import(MSIL,IsDefined,"IsDefined");
   pragma Import(MSIL,Parse,"Parse");
   pragma Import(MSIL,ToObject,"ToObject");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Enum;
pragma Import(MSIL,MSSyst.Enum,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Enum");
