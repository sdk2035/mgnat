-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Net.SocketAddress;
limited with MSSyst.Net.Sockets.AddressFamily;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Net.EndPoint is
   type Typ is abstract new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function Create(
      This : access Typ;
      socketAddress : access MSSyst.Net.SocketAddress.Typ'Class) return access MSSyst.Net.EndPoint.Typ'Class;
   function get_AddressFamily(
      This : access Typ) return MSSyst.Net.Sockets.AddressFamily.Valuetype;
   function Serialize(
      This : access Typ) return access MSSyst.Net.SocketAddress.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,Create,"Create");
   pragma Import(MSIL,get_AddressFamily,"get_AddressFamily");
   pragma Import(MSIL,Serialize,"Serialize");
end MSSyst.Net.EndPoint;
pragma Import(MSIL,MSSyst.Net.EndPoint,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Net.EndPoint");
