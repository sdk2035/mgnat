-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.CodeDom.CodeCompileUnit;
limited with MSSyst.CodeDom.Compiler.CompilerParameters;
limited with MSSyst.CodeDom.Compiler.CompilerResults;
limited with MSSyst.String;
package MSSyst.CodeDom.Compiler.ICodeCompiler is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function CompileAssemblyFromDom(
      This : access Typ;
      options : access MSSyst.CodeDom.Compiler.CompilerParameters.Typ'Class;
      compilationUnit : access MSSyst.CodeDom.CodeCompileUnit.Typ'Class) return access MSSyst.CodeDom.Compiler.CompilerResults.Typ'Class is abstract;
   function CompileAssemblyFromDomBatch(
      This : access Typ;
      options : access MSSyst.CodeDom.Compiler.CompilerParameters.Typ'Class;
      compilationUnits : access MSSyst.CodeDom.CodeCompileUnit.Ref_arr) return access MSSyst.CodeDom.Compiler.CompilerResults.Typ'Class is abstract;
   function CompileAssemblyFromFile(
      This : access Typ;
      options : access MSSyst.CodeDom.Compiler.CompilerParameters.Typ'Class;
      fileName : access MSSyst.String.Typ'Class) return access MSSyst.CodeDom.Compiler.CompilerResults.Typ'Class is abstract;
   function CompileAssemblyFromFileBatch(
      This : access Typ;
      options : access MSSyst.CodeDom.Compiler.CompilerParameters.Typ'Class;
      fileNames : access MSSyst.String.Ref_arr) return access MSSyst.CodeDom.Compiler.CompilerResults.Typ'Class is abstract;
   function CompileAssemblyFromSource(
      This : access Typ;
      options : access MSSyst.CodeDom.Compiler.CompilerParameters.Typ'Class;
      source : access MSSyst.String.Typ'Class) return access MSSyst.CodeDom.Compiler.CompilerResults.Typ'Class is abstract;
   function CompileAssemblyFromSourceBatch(
      This : access Typ;
      options : access MSSyst.CodeDom.Compiler.CompilerParameters.Typ'Class;
      sources : access MSSyst.String.Ref_arr) return access MSSyst.CodeDom.Compiler.CompilerResults.Typ'Class is abstract;
private
   pragma Import(MSIL,CompileAssemblyFromDom,"CompileAssemblyFromDom");
   pragma Import(MSIL,CompileAssemblyFromDomBatch,"CompileAssemblyFromDomBatch");
   pragma Import(MSIL,CompileAssemblyFromFile,"CompileAssemblyFromFile");
   pragma Import(MSIL,CompileAssemblyFromFileBatch,"CompileAssemblyFromFileBatch");
   pragma Import(MSIL,CompileAssemblyFromSource,"CompileAssemblyFromSource");
   pragma Import(MSIL,CompileAssemblyFromSourceBatch,"CompileAssemblyFromSourceBatch");
end MSSyst.CodeDom.Compiler.ICodeCompiler;
pragma Import(MSIL,MSSyst.CodeDom.Compiler.ICodeCompiler,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.CodeDom.Compiler.ICodeCompiler");
