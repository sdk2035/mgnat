-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.IFormatProvider;
limited with MSSyst.String;
limited with MSSyst.TypeCode;
limited with MSSyst.Type_k;
package MSSyst.Globalization.NumberStyles is
   type ValueType is (
      None,
      AllowLeadingWhite,
      AllowTrailingWhite,
      AllowLeadingSign,
      Integer_k,
      AllowTrailingSign,
      AllowParentheses,
      AllowDecimalPoint,
      AllowThousands,
      Number,
      AllowExponent,
      Float_k,
      AllowCurrencySymbol,
      Currency,
      Any,
      AllowHexSpecifier,
      HexNumber);
   pragma Convention (MSIL, ValueType);
   for ValueType use (
      None =>  0,
      AllowLeadingWhite =>  1,
      AllowTrailingWhite =>  2,
      AllowLeadingSign =>  4,
      Integer_k =>  7,
      AllowTrailingSign =>  8,
      AllowParentheses =>  16,
      AllowDecimalPoint =>  32,
      AllowThousands =>  64,
      Number =>  111,
      AllowExponent =>  128,
      Float_k =>  167,
      AllowCurrencySymbol =>  256,
      Currency =>  383,
      Any =>  511,
      AllowHexSpecifier =>  512,
      HexNumber =>  515);
   type ValueType_Arr is array (Natural range <>) of ValueType; -- start at 0
   type ValueType_Array is access all ValueType_Arr;
   type ValueType_addrof is access all ValueType;
   type ValueType_array_addrof is access all ValueType_Array;
   function "+" (L,R : Valuetype) return Valuetype;
   pragma Import (MSIL, "+", "+");
   function CompareTo(
      This : Valuetype;
      target : access MSSyst.Object.Typ'Class) return Integer;
   function Equals(
      This : Valuetype;
      obj : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function GetHashCode(
      This : Valuetype) return Integer;
   function GetType(
      This : Valuetype) return access MSSyst.Type_k.Typ'Class;
   function GetTypeCode(
      This : Valuetype) return MSSyst.TypeCode.Valuetype;
   function ToString(
      This : Valuetype;
      provider : access MSSyst.IFormatProvider.Typ'Class) return access MSSyst.String.Typ'Class;
   function ToString(
      This : Valuetype) return access MSSyst.String.Typ'Class;
   function ToString(
      This : Valuetype;
      format : access MSSyst.String.Typ'Class;
      provider : access MSSyst.IFormatProvider.Typ'Class) return access MSSyst.String.Typ'Class;
   function ToString(
      This : Valuetype;
      format : access MSSyst.String.Typ'Class) return access MSSyst.String.Typ'Class;
private
   pragma Import(MSIL,CompareTo,"CompareTo");
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetType,"GetType");
   pragma Import(MSIL,GetTypeCode,"GetTypeCode");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Globalization.NumberStyles;
pragma Import(MSIL,MSSyst.Globalization.NumberStyles,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Globalization.NumberStyles");
