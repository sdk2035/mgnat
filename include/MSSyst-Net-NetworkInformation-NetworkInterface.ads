-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Net.NetworkInformation.IPInterfaceProperties;
limited with MSSyst.Net.NetworkInformation.IPv4InterfaceStatistics;
limited with MSSyst.Net.NetworkInformation.NetworkInterfaceComponent;
limited with MSSyst.Net.NetworkInformation.NetworkInterfaceType;
limited with MSSyst.Net.NetworkInformation.OperationalStatus;
limited with MSSyst.Net.NetworkInformation.PhysicalAddress;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Net.NetworkInformation.NetworkInterface is
   type Typ is abstract new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function get_Description(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_Id(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_IsReceiveOnly(
      This : access Typ) return Standard.Boolean;
   function get_LoopbackInterfaceIndex return Integer;
   function get_Name(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_NetworkInterfaceType(
      This : access Typ) return MSSyst.Net.NetworkInformation.NetworkInterfaceType.Valuetype;
   function get_OperationalStatus(
      This : access Typ) return MSSyst.Net.NetworkInformation.OperationalStatus.Valuetype;
   function get_Speed(
      This : access Typ) return Long_Long_Integer;
   function get_SupportsMulticast(
      This : access Typ) return Standard.Boolean;
   function GetAllNetworkInterfaces return access MSSyst.Net.NetworkInformation.NetworkInterface.Ref_arr;
   function GetIPProperties(
      This : access Typ) return access MSSyst.Net.NetworkInformation.IPInterfaceProperties.Typ'Class;
   function GetIPv4Statistics(
      This : access Typ) return access MSSyst.Net.NetworkInformation.IPv4InterfaceStatistics.Typ'Class;
   function GetIsNetworkAvailable return Standard.Boolean;
   function GetPhysicalAddress(
      This : access Typ) return access MSSyst.Net.NetworkInformation.PhysicalAddress.Typ'Class;
   function Supports(
      This : access Typ;
      networkInterfaceComponent : MSSyst.Net.NetworkInformation.NetworkInterfaceComponent.Valuetype) return Standard.Boolean;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,get_Description,"get_Description");
   pragma Import(MSIL,get_Id,"get_Id");
   pragma Import(MSIL,get_IsReceiveOnly,"get_IsReceiveOnly");
   pragma Import(MSIL,get_LoopbackInterfaceIndex,"get_LoopbackInterfaceIndex");
   pragma Import(MSIL,get_Name,"get_Name");
   pragma Import(MSIL,get_NetworkInterfaceType,"get_NetworkInterfaceType");
   pragma Import(MSIL,get_OperationalStatus,"get_OperationalStatus");
   pragma Import(MSIL,get_Speed,"get_Speed");
   pragma Import(MSIL,get_SupportsMulticast,"get_SupportsMulticast");
   pragma Import(MSIL,GetAllNetworkInterfaces,"GetAllNetworkInterfaces");
   pragma Import(MSIL,GetIPProperties,"GetIPProperties");
   pragma Import(MSIL,GetIPv4Statistics,"GetIPv4Statistics");
   pragma Import(MSIL,GetIsNetworkAvailable,"GetIsNetworkAvailable");
   pragma Import(MSIL,GetPhysicalAddress,"GetPhysicalAddress");
   pragma Import(MSIL,Supports,"Supports");
end MSSyst.Net.NetworkInformation.NetworkInterface;
pragma Import(MSIL,MSSyst.Net.NetworkInformation.NetworkInterface,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Net.NetworkInformation.NetworkInterface");
