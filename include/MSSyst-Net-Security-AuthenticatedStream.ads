-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.AsyncCallback;
limited with MSSyst.IAsyncResult;
with MSSyst.IDisposable;
limited with MSSyst.IO.SeekOrigin;
with MSSyst.IO.Stream;
with MSSyst.MarshalByRefObject;
limited with MSSyst.Runtime.Remoting.ObjRef;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Net.Security.AuthenticatedStream is
   type Typ is abstract new MSSyst.IO.Stream.Typ
         and MSSyst.IDisposable.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function get_IsAuthenticated(
      This : access Typ) return Standard.Boolean;
   function get_IsEncrypted(
      This : access Typ) return Standard.Boolean;
   function get_IsMutuallyAuthenticated(
      This : access Typ) return Standard.Boolean;
   function get_IsServer(
      This : access Typ) return Standard.Boolean;
   function get_IsSigned(
      This : access Typ) return Standard.Boolean;
   function get_LeaveInnerStreamOpen(
      This : access Typ) return Standard.Boolean;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,get_IsAuthenticated,"get_IsAuthenticated");
   pragma Import(MSIL,get_IsEncrypted,"get_IsEncrypted");
   pragma Import(MSIL,get_IsMutuallyAuthenticated,"get_IsMutuallyAuthenticated");
   pragma Import(MSIL,get_IsServer,"get_IsServer");
   pragma Import(MSIL,get_IsSigned,"get_IsSigned");
   pragma Import(MSIL,get_LeaveInnerStreamOpen,"get_LeaveInnerStreamOpen");
end MSSyst.Net.Security.AuthenticatedStream;
pragma Import(MSIL,MSSyst.Net.Security.AuthenticatedStream,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.Net.Security.AuthenticatedStream");
