-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Collections.IEnumerable;
generic
   type T is private;
package MSSyst.Collections.Generic_k.ICollection is
   type T_Array is array(Integer range <>) of T;
   type T_Ref is access all T;
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure Add(
      This : access Typ;
      item : T) is abstract;
   procedure Clear(
      This : access Typ) is abstract;
   function Contains(
      This : access Typ;
      item : T) return Standard.Boolean is abstract;
   procedure CopyTo(
      This : access Typ;
      array_k : T_Array;
      arrayIndex : Integer) is abstract;
   function get_Count(
      This : access Typ) return Integer is abstract;
   function get_IsReadOnly(
      This : access Typ) return Standard.Boolean is abstract;
   function Remove(
      This : access Typ;
      item : T) return Standard.Boolean is abstract;
private
   pragma Import(MSIL,Add,"Add");
   pragma Import(MSIL,Clear,"Clear");
   pragma Import(MSIL,Contains,"Contains");
   pragma Import(MSIL,CopyTo,"CopyTo");
   pragma Import(MSIL,get_Count,"get_Count");
   pragma Import(MSIL,get_IsReadOnly,"get_IsReadOnly");
   pragma Import(MSIL,Remove,"Remove");
end MSSyst.Collections.Generic_k.ICollection;
pragma Import(MSIL,MSSyst.Collections.Generic_k.ICollection,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Collections.Generic.ICollection`1");
