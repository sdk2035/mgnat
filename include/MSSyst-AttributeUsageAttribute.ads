-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Attribute;
limited with MSSyst.AttributeTargets;
with MSSyst.Runtime.InteropServices.uAttribute;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.AttributeUsageAttribute is
   type Typ is new MSSyst.Attribute.Typ
         and MSSyst.Runtime.InteropServices.uAttribute.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_AttributeUsageAttribute(
      This : Ref := null;
      validOn : MSSyst.AttributeTargets.Valuetype) return Ref;
   function get_AllowMultiple(
      This : access Typ) return Standard.Boolean;
   function get_Inherited(
      This : access Typ) return Standard.Boolean;
   function get_ValidOn(
      This : access Typ) return MSSyst.AttributeTargets.Valuetype;
   procedure set_AllowMultiple(
      This : access Typ;
      value : Standard.Boolean);
   procedure set_Inherited(
      This : access Typ;
      value : Standard.Boolean);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_AttributeUsageAttribute);
   pragma Import(MSIL,get_AllowMultiple,"get_AllowMultiple");
   pragma Import(MSIL,get_Inherited,"get_Inherited");
   pragma Import(MSIL,get_ValidOn,"get_ValidOn");
   pragma Import(MSIL,set_AllowMultiple,"set_AllowMultiple");
   pragma Import(MSIL,set_Inherited,"set_Inherited");
end MSSyst.AttributeUsageAttribute;
pragma Import(MSIL,MSSyst.AttributeUsageAttribute,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.AttributeUsageAttribute");
