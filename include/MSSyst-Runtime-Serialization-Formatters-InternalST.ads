-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Reflection.Assembly;
limited with MSSyst.Reflection.FieldInfo;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Runtime.Serialization.Formatters.InternalST is
   type Typ is new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure InfoSoap(
      messages : access MSSyst.Object.Ref_arr);
   function LoadAssemblyFromString(
      assemblyString : access MSSyst.String.Typ'Class) return access MSSyst.Reflection.Assembly.Typ'Class;
   procedure SerializationSetValue(
      fi : access MSSyst.Reflection.FieldInfo.Typ'Class;
      target : access MSSyst.Object.Typ'Class;
      value : access MSSyst.Object.Typ'Class);
   procedure Soap(
      messages : access MSSyst.Object.Ref_arr);
   procedure SoapAssert(
      condition : Standard.Boolean;
      message : access MSSyst.String.Typ'Class);
   function SoapCheckEnabled return Standard.Boolean;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,InfoSoap,"InfoSoap");
   pragma Import(MSIL,LoadAssemblyFromString,"LoadAssemblyFromString");
   pragma Import(MSIL,SerializationSetValue,"SerializationSetValue");
   pragma Import(MSIL,Soap,"Soap");
   pragma Import(MSIL,SoapAssert,"SoapAssert");
   pragma Import(MSIL,SoapCheckEnabled,"SoapCheckEnabled");
end MSSyst.Runtime.Serialization.Formatters.InternalST;
pragma Import(MSIL,MSSyst.Runtime.Serialization.Formatters.InternalST,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Runtime.Serialization.Formatters.InternalST");
