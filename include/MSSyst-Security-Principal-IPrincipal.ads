-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Security.Principal.IIdentity;
limited with MSSyst.String;
package MSSyst.Security.Principal.IPrincipal is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function get_Identity(
      This : access Typ) return access MSSyst.Security.Principal.IIdentity.Typ'Class is abstract;
   function IsInRole(
      This : access Typ;
      role : access MSSyst.String.Typ'Class) return Standard.Boolean is abstract;
private
   pragma Import(MSIL,get_Identity,"get_Identity");
   pragma Import(MSIL,IsInRole,"IsInRole");
end MSSyst.Security.Principal.IPrincipal;
pragma Import(MSIL,MSSyst.Security.Principal.IPrincipal,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.Principal.IPrincipal");
