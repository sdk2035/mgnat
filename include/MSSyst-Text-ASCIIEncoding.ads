-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.ICloneable;
limited with MSSyst.String;
limited with MSSyst.Text.DecoderFallback;
limited with MSSyst.Text.Decoder;
limited with MSSyst.Text.EncoderFallback;
limited with MSSyst.Text.Encoder;
with MSSyst.Text.Encoding;
limited with MSSyst.Text.NormalizationForm;
limited with MSSyst.Type_k;
package MSSyst.Text.ASCIIEncoding is
   type Typ is new MSSyst.Text.Encoding.Typ
         and MSSyst.ICloneable.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_ASCIIEncoding(
      This : Ref := null) return Ref;
   function get_IsSingleByte(
      This : access Typ) return Standard.Boolean;
   function GetByteCount(
      This : access Typ;
      chars : MSIL_Types.Char_Arr;
      index : Integer;
      count : Integer) return Integer;
   function GetByteCount(
      This : access Typ;
      chars : access MSSyst.String.Typ'Class) return Integer;
   function GetByteCount(
      This : access Typ;
      chars : MSIL_Types.char_addrof;
      count : Integer) return Integer;
   function GetBytes(
      This : access Typ;
      chars : MSIL_Types.Char_Arr;
      charIndex : Integer;
      charCount : Integer;
      bytes : MSIL_Types.unsigned_int8_Arr;
      byteIndex : Integer) return Integer;
   function GetBytes(
      This : access Typ;
      chars : access MSSyst.String.Typ'Class;
      charIndex : Integer;
      charCount : Integer;
      bytes : MSIL_Types.unsigned_int8_Arr;
      byteIndex : Integer) return Integer;
   function GetBytes(
      This : access Typ;
      chars : MSIL_Types.char_addrof;
      charCount : Integer;
      bytes : MSIL_Types.unsigned_int8_addrof;
      byteCount : Integer) return Integer;
   function GetCharCount(
      This : access Typ;
      bytes : MSIL_Types.unsigned_int8_addrof;
      count : Integer) return Integer;
   function GetCharCount(
      This : access Typ;
      bytes : MSIL_Types.unsigned_int8_Arr;
      index : Integer;
      count : Integer) return Integer;
   function GetChars(
      This : access Typ;
      bytes : MSIL_Types.unsigned_int8_addrof;
      byteCount : Integer;
      chars : MSIL_Types.char_addrof;
      charCount : Integer) return Integer;
   function GetChars(
      This : access Typ;
      bytes : MSIL_Types.unsigned_int8_Arr;
      byteIndex : Integer;
      byteCount : Integer;
      chars : MSIL_Types.Char_Arr;
      charIndex : Integer) return Integer;
   function GetDecoder(
      This : access Typ) return access MSSyst.Text.Decoder.Typ'Class;
   function GetEncoder(
      This : access Typ) return access MSSyst.Text.Encoder.Typ'Class;
   function GetMaxByteCount(
      This : access Typ;
      charCount : Integer) return Integer;
   function GetMaxCharCount(
      This : access Typ;
      byteCount : Integer) return Integer;
   function GetString(
      This : access Typ;
      bytes : MSIL_Types.unsigned_int8_Arr;
      byteIndex : Integer;
      byteCount : Integer) return access MSSyst.String.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_ASCIIEncoding);
   pragma Import(MSIL,get_IsSingleByte,"get_IsSingleByte");
   pragma Import(MSIL,GetByteCount,"GetByteCount");
   pragma Import(MSIL,GetBytes,"GetBytes");
   pragma Import(MSIL,GetCharCount,"GetCharCount");
   pragma Import(MSIL,GetChars,"GetChars");
   pragma Import(MSIL,GetDecoder,"GetDecoder");
   pragma Import(MSIL,GetEncoder,"GetEncoder");
   pragma Import(MSIL,GetMaxByteCount,"GetMaxByteCount");
   pragma Import(MSIL,GetMaxCharCount,"GetMaxCharCount");
   pragma Import(MSIL,GetString,"GetString");
end MSSyst.Text.ASCIIEncoding;
pragma Import(MSIL,MSSyst.Text.ASCIIEncoding,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Text.ASCIIEncoding");
