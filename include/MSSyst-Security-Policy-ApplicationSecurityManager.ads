-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.ActivationContext;
limited with MSSyst.Security.Policy.ApplicationTrustCollection;
limited with MSSyst.Security.Policy.IApplicationTrustManager;
limited with MSSyst.Security.Policy.TrustManagerContext;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.Policy.ApplicationSecurityManager is
   type Typ is abstract new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function DetermineApplicationTrust(
      activationContext : access MSSyst.ActivationContext.Typ'Class;
      context : access MSSyst.Security.Policy.TrustManagerContext.Typ'Class) return Standard.Boolean;
   function get_ApplicationTrustManager return access MSSyst.Security.Policy.IApplicationTrustManager.Typ'Class;
   function get_UserApplicationTrusts return access MSSyst.Security.Policy.ApplicationTrustCollection.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,DetermineApplicationTrust,"DetermineApplicationTrust");
   pragma Import(MSIL,get_ApplicationTrustManager,"get_ApplicationTrustManager");
   pragma Import(MSIL,get_UserApplicationTrusts,"get_UserApplicationTrusts");
end MSSyst.Security.Policy.ApplicationSecurityManager;
pragma Import(MSIL,MSSyst.Security.Policy.ApplicationSecurityManager,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.Policy.ApplicationSecurityManager");
