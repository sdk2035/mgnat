-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.ComponentModel.ComponentCollection;
with MSSyst.ComponentModel.Container;
limited with MSSyst.ComponentModel.IComponent;
with MSSyst.ComponentModel.IContainer;
with MSSyst.ComponentModel.INestedContainer;
with MSSyst.IDisposable;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.ComponentModel.NestedContainer is
   type Typ is new MSSyst.ComponentModel.Container.Typ
         and MSSyst.ComponentModel.IContainer.Typ
         and MSSyst.IDisposable.Typ
         and MSSyst.ComponentModel.INestedContainer.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_NestedContainer(
      This : Ref := null;
      owner : access MSSyst.ComponentModel.IComponent.Typ'Class) return Ref;
   function get_Owner(
      This : access Typ) return access MSSyst.ComponentModel.IComponent.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_NestedContainer);
   pragma Import(MSIL,get_Owner,"get_Owner");
end MSSyst.ComponentModel.NestedContainer;
pragma Import(MSIL,MSSyst.ComponentModel.NestedContainer,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[System]System.ComponentModel.NestedContainer");
