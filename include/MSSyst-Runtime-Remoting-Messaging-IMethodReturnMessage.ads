-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Exception_k;
with MSSyst.Runtime.Remoting.Messaging.IMessage;
with MSSyst.Runtime.Remoting.Messaging.IMethodMessage;
limited with MSSyst.String;
package MSSyst.Runtime.Remoting.Messaging.IMethodReturnMessage is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function get_Exception(
      This : access Typ) return access MSSyst.Exception_k.Typ'Class is abstract;
   function get_OutArgCount(
      This : access Typ) return Integer is abstract;
   function get_OutArgs(
      This : access Typ) return access MSSyst.Object.Ref_array is abstract;
   function get_ReturnValue(
      This : access Typ) return access MSSyst.Object.Typ'Class is abstract;
   function GetOutArg(
      This : access Typ;
      argNum : Integer) return access MSSyst.Object.Typ'Class is abstract;
   function GetOutArgName(
      This : access Typ;
      index : Integer) return access MSSyst.String.Typ'Class is abstract;
private
   pragma Import(MSIL,get_Exception,"get_Exception");
   pragma Import(MSIL,get_OutArgCount,"get_OutArgCount");
   pragma Import(MSIL,get_OutArgs,"get_OutArgs");
   pragma Import(MSIL,get_ReturnValue,"get_ReturnValue");
   pragma Import(MSIL,GetOutArg,"GetOutArg");
   pragma Import(MSIL,GetOutArgName,"GetOutArgName");
end MSSyst.Runtime.Remoting.Messaging.IMethodReturnMessage;
pragma Import(MSIL,MSSyst.Runtime.Remoting.Messaging.IMethodReturnMessage,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Runtime.Remoting.Messaging.IMethodReturnMessage");
