-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Drawing.Brush;
limited with MSSyst.Drawing.Color;
with MSSyst.ICloneable;
with MSSyst.IDisposable;
with MSSyst.MarshalByRefObject;
limited with MSSyst.Runtime.Remoting.ObjRef;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Drawing.SolidBrush is
   type Typ is new MSSyst.Drawing.Brush.Typ
         and MSSyst.ICloneable.Typ
         and MSSyst.IDisposable.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_SolidBrush(
      This : Ref := null;
      color : MSSyst.Drawing.Color.Valuetype) return Ref;
   function Clone(
      This : access Typ) return access MSSyst.Object.Typ'Class;
   function get_Color(
      This : access Typ) return MSSyst.Drawing.Color.Valuetype;
   procedure set_Color(
      This : access Typ;
      value : MSSyst.Drawing.Color.Valuetype);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_SolidBrush);
   pragma Import(MSIL,Clone,"Clone");
   pragma Import(MSIL,get_Color,"get_Color");
   pragma Import(MSIL,set_Color,"set_Color");
end MSSyst.Drawing.SolidBrush;
pragma Import(MSIL,MSSyst.Drawing.SolidBrush,
   ".ver 2:0:0:0 .publickeytoken=( b0 3f 5f 7f 11 d5 0a 3a )",
   "[System.Drawing]System.Drawing.SolidBrush");
