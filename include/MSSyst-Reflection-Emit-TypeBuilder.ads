-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Globalization.CultureInfo;
limited with MSSyst.Guid;
limited with MSSyst.Reflection.Assembly;
limited with MSSyst.Reflection.Binder;
limited with MSSyst.Reflection.BindingFlags;
limited with MSSyst.Reflection.CallingConventions;
limited with MSSyst.Reflection.ConstructorInfo;
limited with MSSyst.Reflection.Emit.ConstructorBuilder;
limited with MSSyst.Reflection.Emit.CustomAttributeBuilder;
limited with MSSyst.Reflection.Emit.EventBuilder;
limited with MSSyst.Reflection.Emit.FieldBuilder;
limited with MSSyst.Reflection.Emit.GenericTypeParameterBuilder;
limited with MSSyst.Reflection.Emit.MethodBuilder;
limited with MSSyst.Reflection.Emit.PackingSize;
limited with MSSyst.Reflection.Emit.PropertyBuilder;
limited with MSSyst.Reflection.Emit.TypeToken;
limited with MSSyst.Reflection.EventAttributes;
limited with MSSyst.Reflection.EventInfo;
limited with MSSyst.Reflection.FieldAttributes;
limited with MSSyst.Reflection.FieldInfo;
limited with MSSyst.Reflection.GenericParameterAttributes;
with MSSyst.Reflection.ICustomAttributeProvider;
with MSSyst.Reflection.IReflect;
limited with MSSyst.Reflection.InterfaceMapping;
limited with MSSyst.Reflection.MemberFilter;
with MSSyst.Reflection.MemberInfo;
limited with MSSyst.Reflection.MemberTypes;
limited with MSSyst.Reflection.MethodAttributes;
limited with MSSyst.Reflection.MethodBase;
limited with MSSyst.Reflection.MethodInfo;
limited with MSSyst.Reflection.Module;
with MSSyst.Reflection.ParameterModifier;
limited with MSSyst.Reflection.PropertyAttributes;
limited with MSSyst.Reflection.PropertyInfo;
limited with MSSyst.Reflection.TypeAttributes;
limited with MSSyst.Reflection.TypeFilter;
limited with MSSyst.Runtime.InteropServices.CallingConvention;
limited with MSSyst.Runtime.InteropServices.CharSet;
limited with MSSyst.Runtime.InteropServices.StructLayoutAttribute;
with MSSyst.Runtime.InteropServices.uMemberInfo;
with MSSyst.Runtime.InteropServices.uType;
with MSSyst.Runtime.InteropServices.uTypeBuilder;
limited with MSSyst.RuntimeTypeHandle;
limited with MSSyst.Security.PermissionSet;
limited with MSSyst.Security.Permissions.SecurityAction;
limited with MSSyst.String;
with MSSyst.Type_k;
package MSSyst.Reflection.Emit.TypeBuilder is
   type Typ is new MSSyst.Type_k.Typ
         and MSSyst.Reflection.ICustomAttributeProvider.Typ
         and MSSyst.Runtime.InteropServices.uMemberInfo.Typ
         and MSSyst.Runtime.InteropServices.uType.Typ
         and MSSyst.Reflection.IReflect.Typ
         and MSSyst.Runtime.InteropServices.uTypeBuilder.Typ
   with record
      null;
   end record;
   UnspecifiedTypeSize : Integer;
   pragma Import(MSIL,UnspecifiedTypeSize,"UnspecifiedTypeSize");
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure AddDeclarativeSecurity(
      This : access Typ;
      action : MSSyst.Security.Permissions.SecurityAction.Valuetype;
      pset : access MSSyst.Security.PermissionSet.Typ'Class);
   procedure AddInterfaceImplementation(
      This : access Typ;
      interfaceType : access MSSyst.Type_k.Typ'Class);
   function CreateType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function DefineConstructor(
      This : access Typ;
      attributes : MSSyst.Reflection.MethodAttributes.Valuetype;
      callingConvention : MSSyst.Reflection.CallingConventions.Valuetype;
      parameterTypes : access MSSyst.Type_k.Ref_arr) return access MSSyst.Reflection.Emit.ConstructorBuilder.Typ'Class;
   function DefineConstructor(
      This : access Typ;
      attributes : MSSyst.Reflection.MethodAttributes.Valuetype;
      callingConvention : MSSyst.Reflection.CallingConventions.Valuetype;
      parameterTypes : access MSSyst.Type_k.Ref_arr;
      requiredCustomModifiers : access MSSyst.Type_k.Ref_array;
      optionalCustomModifiers : access MSSyst.Type_k.Ref_array) return access MSSyst.Reflection.Emit.ConstructorBuilder.Typ'Class;
   function DefineDefaultConstructor(
      This : access Typ;
      attributes : MSSyst.Reflection.MethodAttributes.Valuetype) return access MSSyst.Reflection.Emit.ConstructorBuilder.Typ'Class;
   function DefineEvent(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      attributes : MSSyst.Reflection.EventAttributes.Valuetype;
      eventtype : access MSSyst.Type_k.Typ'Class) return access MSSyst.Reflection.Emit.EventBuilder.Typ'Class;
   function DefineField(
      This : access Typ;
      fieldName : access MSSyst.String.Typ'Class;
      type_k : access MSSyst.Type_k.Typ'Class;
      requiredCustomModifiers : access MSSyst.Type_k.Ref_arr;
      optionalCustomModifiers : access MSSyst.Type_k.Ref_arr;
      attributes : MSSyst.Reflection.FieldAttributes.Valuetype) return access MSSyst.Reflection.Emit.FieldBuilder.Typ'Class;
   function DefineField(
      This : access Typ;
      fieldName : access MSSyst.String.Typ'Class;
      type_k : access MSSyst.Type_k.Typ'Class;
      attributes : MSSyst.Reflection.FieldAttributes.Valuetype) return access MSSyst.Reflection.Emit.FieldBuilder.Typ'Class;
   function DefineGenericParameters(
      This : access Typ;
      names : access MSSyst.String.Ref_arr) return access MSSyst.Reflection.Emit.GenericTypeParameterBuilder.Ref_arr;
   function DefineInitializedData(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      data : MSIL_Types.unsigned_int8_Arr;
      attributes : MSSyst.Reflection.FieldAttributes.Valuetype) return access MSSyst.Reflection.Emit.FieldBuilder.Typ'Class;
   function DefineMethod(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      attributes : MSSyst.Reflection.MethodAttributes.Valuetype;
      returnType : access MSSyst.Type_k.Typ'Class;
      parameterTypes : access MSSyst.Type_k.Ref_arr) return access MSSyst.Reflection.Emit.MethodBuilder.Typ'Class;
   function DefineMethod(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      attributes : MSSyst.Reflection.MethodAttributes.Valuetype) return access MSSyst.Reflection.Emit.MethodBuilder.Typ'Class;
   function DefineMethod(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      attributes : MSSyst.Reflection.MethodAttributes.Valuetype;
      callingConvention : MSSyst.Reflection.CallingConventions.Valuetype) return access MSSyst.Reflection.Emit.MethodBuilder.Typ'Class;
   function DefineMethod(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      attributes : MSSyst.Reflection.MethodAttributes.Valuetype;
      callingConvention : MSSyst.Reflection.CallingConventions.Valuetype;
      returnType : access MSSyst.Type_k.Typ'Class;
      returnTypeRequiredCustomModifiers : access MSSyst.Type_k.Ref_arr;
      returnTypeOptionalCustomModifiers : access MSSyst.Type_k.Ref_arr;
      parameterTypes : access MSSyst.Type_k.Ref_arr;
      parameterTypeRequiredCustomModifiers : access MSSyst.Type_k.Ref_array;
      parameterTypeOptionalCustomModifiers : access MSSyst.Type_k.Ref_array) return access MSSyst.Reflection.Emit.MethodBuilder.Typ'Class;
   function DefineMethod(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      attributes : MSSyst.Reflection.MethodAttributes.Valuetype;
      callingConvention : MSSyst.Reflection.CallingConventions.Valuetype;
      returnType : access MSSyst.Type_k.Typ'Class;
      parameterTypes : access MSSyst.Type_k.Ref_arr) return access MSSyst.Reflection.Emit.MethodBuilder.Typ'Class;
   procedure DefineMethodOverride(
      This : access Typ;
      methodInfoBody : access MSSyst.Reflection.MethodInfo.Typ'Class;
      methodInfoDeclaration : access MSSyst.Reflection.MethodInfo.Typ'Class);
   function DefineNestedType(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      attr : MSSyst.Reflection.TypeAttributes.Valuetype) return access MSSyst.Reflection.Emit.TypeBuilder.Typ'Class;
   function DefineNestedType(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      attr : MSSyst.Reflection.TypeAttributes.Valuetype;
      parent : access MSSyst.Type_k.Typ'Class;
      typeSize : Integer) return access MSSyst.Reflection.Emit.TypeBuilder.Typ'Class;
   function DefineNestedType(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      attr : MSSyst.Reflection.TypeAttributes.Valuetype;
      parent : access MSSyst.Type_k.Typ'Class;
      packSize : MSSyst.Reflection.Emit.PackingSize.Valuetype) return access MSSyst.Reflection.Emit.TypeBuilder.Typ'Class;
   function DefineNestedType(
      This : access Typ;
      name : access MSSyst.String.Typ'Class) return access MSSyst.Reflection.Emit.TypeBuilder.Typ'Class;
   function DefineNestedType(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      attr : MSSyst.Reflection.TypeAttributes.Valuetype;
      parent : access MSSyst.Type_k.Typ'Class;
      interfaces : access MSSyst.Type_k.Ref_arr) return access MSSyst.Reflection.Emit.TypeBuilder.Typ'Class;
   function DefineNestedType(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      attr : MSSyst.Reflection.TypeAttributes.Valuetype;
      parent : access MSSyst.Type_k.Typ'Class) return access MSSyst.Reflection.Emit.TypeBuilder.Typ'Class;
   function DefinePInvokeMethod(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      dllName : access MSSyst.String.Typ'Class;
      entryName : access MSSyst.String.Typ'Class;
      attributes : MSSyst.Reflection.MethodAttributes.Valuetype;
      callingConvention : MSSyst.Reflection.CallingConventions.Valuetype;
      returnType : access MSSyst.Type_k.Typ'Class;
      returnTypeRequiredCustomModifiers : access MSSyst.Type_k.Ref_arr;
      returnTypeOptionalCustomModifiers : access MSSyst.Type_k.Ref_arr;
      parameterTypes : access MSSyst.Type_k.Ref_arr;
      parameterTypeRequiredCustomModifiers : access MSSyst.Type_k.Ref_array;
      parameterTypeOptionalCustomModifiers : access MSSyst.Type_k.Ref_array;
      nativeCallConv : MSSyst.Runtime.InteropServices.CallingConvention.Valuetype;
      nativeCharSet : MSSyst.Runtime.InteropServices.CharSet.Valuetype) return access MSSyst.Reflection.Emit.MethodBuilder.Typ'Class;
   function DefinePInvokeMethod(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      dllName : access MSSyst.String.Typ'Class;
      entryName : access MSSyst.String.Typ'Class;
      attributes : MSSyst.Reflection.MethodAttributes.Valuetype;
      callingConvention : MSSyst.Reflection.CallingConventions.Valuetype;
      returnType : access MSSyst.Type_k.Typ'Class;
      parameterTypes : access MSSyst.Type_k.Ref_arr;
      nativeCallConv : MSSyst.Runtime.InteropServices.CallingConvention.Valuetype;
      nativeCharSet : MSSyst.Runtime.InteropServices.CharSet.Valuetype) return access MSSyst.Reflection.Emit.MethodBuilder.Typ'Class;
   function DefinePInvokeMethod(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      dllName : access MSSyst.String.Typ'Class;
      attributes : MSSyst.Reflection.MethodAttributes.Valuetype;
      callingConvention : MSSyst.Reflection.CallingConventions.Valuetype;
      returnType : access MSSyst.Type_k.Typ'Class;
      parameterTypes : access MSSyst.Type_k.Ref_arr;
      nativeCallConv : MSSyst.Runtime.InteropServices.CallingConvention.Valuetype;
      nativeCharSet : MSSyst.Runtime.InteropServices.CharSet.Valuetype) return access MSSyst.Reflection.Emit.MethodBuilder.Typ'Class;
   function DefineProperty(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      attributes : MSSyst.Reflection.PropertyAttributes.Valuetype;
      returnType : access MSSyst.Type_k.Typ'Class;
      parameterTypes : access MSSyst.Type_k.Ref_arr) return access MSSyst.Reflection.Emit.PropertyBuilder.Typ'Class;
   function DefineProperty(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      attributes : MSSyst.Reflection.PropertyAttributes.Valuetype;
      returnType : access MSSyst.Type_k.Typ'Class;
      returnTypeRequiredCustomModifiers : access MSSyst.Type_k.Ref_arr;
      returnTypeOptionalCustomModifiers : access MSSyst.Type_k.Ref_arr;
      parameterTypes : access MSSyst.Type_k.Ref_arr;
      parameterTypeRequiredCustomModifiers : access MSSyst.Type_k.Ref_array;
      parameterTypeOptionalCustomModifiers : access MSSyst.Type_k.Ref_array) return access MSSyst.Reflection.Emit.PropertyBuilder.Typ'Class;
   function DefineTypeInitializer(
      This : access Typ) return access MSSyst.Reflection.Emit.ConstructorBuilder.Typ'Class;
   function DefineUninitializedData(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      size : Integer;
      attributes : MSSyst.Reflection.FieldAttributes.Valuetype) return access MSSyst.Reflection.Emit.FieldBuilder.Typ'Class;
   function get_Assembly(
      This : access Typ) return access MSSyst.Reflection.Assembly.Typ'Class;
   function get_AssemblyQualifiedName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_BaseType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function get_DeclaringMethod(
      This : access Typ) return access MSSyst.Reflection.MethodBase.Typ'Class;
   function get_DeclaringType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function get_FullName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_GenericParameterAttributes(
      This : access Typ) return MSSyst.Reflection.GenericParameterAttributes.Valuetype;
   function get_GenericParameterPosition(
      This : access Typ) return Integer;
   function get_GUID(
      This : access Typ) return MSSyst.Guid.Valuetype;
   function get_IsGenericParameter(
      This : access Typ) return Standard.Boolean;
   function get_IsGenericType(
      This : access Typ) return Standard.Boolean;
   function get_IsGenericTypeDefinition(
      This : access Typ) return Standard.Boolean;
   function get_Module(
      This : access Typ) return access MSSyst.Reflection.Module.Typ'Class;
   function get_Name(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_Namespace(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function get_PackingSize(
      This : access Typ) return MSSyst.Reflection.Emit.PackingSize.Valuetype;
   function get_ReflectedType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function get_Size(
      This : access Typ) return Integer;
   function get_TypeHandle(
      This : access Typ) return MSSyst.RuntimeTypeHandle.Valuetype;
   function get_TypeToken(
      This : access Typ) return MSSyst.Reflection.Emit.TypeToken.Valuetype;
   function get_UnderlyingSystemType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function GetConstructor(
      type_k : access MSSyst.Type_k.Typ'Class;
      constructor : access MSSyst.Reflection.ConstructorInfo.Typ'Class) return access MSSyst.Reflection.ConstructorInfo.Typ'Class;
   function GetConstructors(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.ConstructorInfo.Ref_arr;
   function GetCustomAttributes(
      This : access Typ;
      attributeType : access MSSyst.Type_k.Typ'Class;
      inherit : Standard.Boolean) return access MSSyst.Object.Ref_array;
   function GetCustomAttributes(
      This : access Typ;
      inherit : Standard.Boolean) return access MSSyst.Object.Ref_array;
   function GetElementType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function GetEvent(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.EventInfo.Typ'Class;
   function GetEvents(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.EventInfo.Ref_arr;
   function GetEvents(
      This : access Typ) return access MSSyst.Reflection.EventInfo.Ref_arr;
   function GetField(
      type_k : access MSSyst.Type_k.Typ'Class;
      field : access MSSyst.Reflection.FieldInfo.Typ'Class) return access MSSyst.Reflection.FieldInfo.Typ'Class;
   function GetField(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.FieldInfo.Typ'Class;
   function GetFields(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.FieldInfo.Ref_arr;
   function GetGenericArguments(
      This : access Typ) return access MSSyst.Type_k.Ref_arr;
   function GetGenericTypeDefinition(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function GetInterface(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      ignoreCase : Standard.Boolean) return access MSSyst.Type_k.Typ'Class;
   function GetInterfaceMap(
      This : access Typ;
      interfaceType : access MSSyst.Type_k.Typ'Class) return MSSyst.Reflection.InterfaceMapping.Valuetype;
   function GetInterfaces(
      This : access Typ) return access MSSyst.Type_k.Ref_arr;
   function GetMember(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      type_k : MSSyst.Reflection.MemberTypes.Valuetype;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.MemberInfo.Ref_arr;
   function GetMembers(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.MemberInfo.Ref_arr;
   function GetMethod(
      type_k : access MSSyst.Type_k.Typ'Class;
      method : access MSSyst.Reflection.MethodInfo.Typ'Class) return access MSSyst.Reflection.MethodInfo.Typ'Class;
   function GetMethods(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.MethodInfo.Ref_arr;
   function GetNestedType(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Type_k.Typ'Class;
   function GetNestedTypes(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Type_k.Ref_arr;
   function GetProperties(
      This : access Typ;
      bindingAttr : MSSyst.Reflection.BindingFlags.Valuetype) return access MSSyst.Reflection.PropertyInfo.Ref_arr;
   function InvokeMember(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      invokeAttr : MSSyst.Reflection.BindingFlags.Valuetype;
      binder : access MSSyst.Reflection.Binder.Typ'Class;
      target : access MSSyst.Object.Typ'Class;
      args : access MSSyst.Object.Ref_arr;
      modifiers : access MSSyst.Reflection.ParameterModifier.Valuetype_arr;
      culture : access MSSyst.Globalization.CultureInfo.Typ'Class;
      namedParameters : access MSSyst.String.Ref_arr) return access MSSyst.Object.Typ'Class;
   function IsAssignableFrom(
      This : access Typ;
      c : access MSSyst.Type_k.Typ'Class) return Standard.Boolean;
   function IsCreated(
      This : access Typ) return Standard.Boolean;
   function IsDefined(
      This : access Typ;
      attributeType : access MSSyst.Type_k.Typ'Class;
      inherit : Standard.Boolean) return Standard.Boolean;
   function IsSubclassOf(
      This : access Typ;
      c : access MSSyst.Type_k.Typ'Class) return Standard.Boolean;
   function MakeArrayType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function MakeArrayType(
      This : access Typ;
      rank : Integer) return access MSSyst.Type_k.Typ'Class;
   function MakeByRefType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function MakeGenericType(
      This : access Typ;
      typeArguments : access MSSyst.Type_k.Ref_arr) return access MSSyst.Type_k.Typ'Class;
   function MakePointerType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   procedure SetCustomAttribute(
      This : access Typ;
      con : access MSSyst.Reflection.ConstructorInfo.Typ'Class;
      binaryAttribute : MSIL_Types.unsigned_int8_Arr);
   procedure SetCustomAttribute(
      This : access Typ;
      customBuilder : access MSSyst.Reflection.Emit.CustomAttributeBuilder.Typ'Class);
   procedure SetParent(
      This : access Typ;
      parent : access MSSyst.Type_k.Typ'Class);
   function ToString(
      This : access Typ) return access MSSyst.String.Typ'Class;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,AddDeclarativeSecurity,"AddDeclarativeSecurity");
   pragma Import(MSIL,AddInterfaceImplementation,"AddInterfaceImplementation");
   pragma Import(MSIL,CreateType,"CreateType");
   pragma Import(MSIL,DefineConstructor,"DefineConstructor");
   pragma Import(MSIL,DefineDefaultConstructor,"DefineDefaultConstructor");
   pragma Import(MSIL,DefineEvent,"DefineEvent");
   pragma Import(MSIL,DefineField,"DefineField");
   pragma Import(MSIL,DefineGenericParameters,"DefineGenericParameters");
   pragma Import(MSIL,DefineInitializedData,"DefineInitializedData");
   pragma Import(MSIL,DefineMethod,"DefineMethod");
   pragma Import(MSIL,DefineMethodOverride,"DefineMethodOverride");
   pragma Import(MSIL,DefineNestedType,"DefineNestedType");
   pragma Import(MSIL,DefinePInvokeMethod,"DefinePInvokeMethod");
   pragma Import(MSIL,DefineProperty,"DefineProperty");
   pragma Import(MSIL,DefineTypeInitializer,"DefineTypeInitializer");
   pragma Import(MSIL,DefineUninitializedData,"DefineUninitializedData");
   pragma Import(MSIL,get_Assembly,"get_Assembly");
   pragma Import(MSIL,get_AssemblyQualifiedName,"get_AssemblyQualifiedName");
   pragma Import(MSIL,get_BaseType,"get_BaseType");
   pragma Import(MSIL,get_DeclaringMethod,"get_DeclaringMethod");
   pragma Import(MSIL,get_DeclaringType,"get_DeclaringType");
   pragma Import(MSIL,get_FullName,"get_FullName");
   pragma Import(MSIL,get_GenericParameterAttributes,"get_GenericParameterAttributes");
   pragma Import(MSIL,get_GenericParameterPosition,"get_GenericParameterPosition");
   pragma Import(MSIL,get_GUID,"get_GUID");
   pragma Import(MSIL,get_IsGenericParameter,"get_IsGenericParameter");
   pragma Import(MSIL,get_IsGenericType,"get_IsGenericType");
   pragma Import(MSIL,get_IsGenericTypeDefinition,"get_IsGenericTypeDefinition");
   pragma Import(MSIL,get_Module,"get_Module");
   pragma Import(MSIL,get_Name,"get_Name");
   pragma Import(MSIL,get_Namespace,"get_Namespace");
   pragma Import(MSIL,get_PackingSize,"get_PackingSize");
   pragma Import(MSIL,get_ReflectedType,"get_ReflectedType");
   pragma Import(MSIL,get_Size,"get_Size");
   pragma Import(MSIL,get_TypeHandle,"get_TypeHandle");
   pragma Import(MSIL,get_TypeToken,"get_TypeToken");
   pragma Import(MSIL,get_UnderlyingSystemType,"get_UnderlyingSystemType");
   pragma Import(MSIL,GetConstructor,"GetConstructor");
   pragma Import(MSIL,GetConstructors,"GetConstructors");
   pragma Import(MSIL,GetCustomAttributes,"GetCustomAttributes");
   pragma Import(MSIL,GetElementType,"GetElementType");
   pragma Import(MSIL,GetEvent,"GetEvent");
   pragma Import(MSIL,GetEvents,"GetEvents");
   pragma Import(MSIL,GetField,"GetField");
   pragma Import(MSIL,GetFields,"GetFields");
   pragma Import(MSIL,GetGenericArguments,"GetGenericArguments");
   pragma Import(MSIL,GetGenericTypeDefinition,"GetGenericTypeDefinition");
   pragma Import(MSIL,GetInterface,"GetInterface");
   pragma Import(MSIL,GetInterfaceMap,"GetInterfaceMap");
   pragma Import(MSIL,GetInterfaces,"GetInterfaces");
   pragma Import(MSIL,GetMember,"GetMember");
   pragma Import(MSIL,GetMembers,"GetMembers");
   pragma Import(MSIL,GetMethod,"GetMethod");
   pragma Import(MSIL,GetMethods,"GetMethods");
   pragma Import(MSIL,GetNestedType,"GetNestedType");
   pragma Import(MSIL,GetNestedTypes,"GetNestedTypes");
   pragma Import(MSIL,GetProperties,"GetProperties");
   pragma Import(MSIL,InvokeMember,"InvokeMember");
   pragma Import(MSIL,IsAssignableFrom,"IsAssignableFrom");
   pragma Import(MSIL,IsCreated,"IsCreated");
   pragma Import(MSIL,IsDefined,"IsDefined");
   pragma Import(MSIL,IsSubclassOf,"IsSubclassOf");
   pragma Import(MSIL,MakeArrayType,"MakeArrayType");
   pragma Import(MSIL,MakeByRefType,"MakeByRefType");
   pragma Import(MSIL,MakeGenericType,"MakeGenericType");
   pragma Import(MSIL,MakePointerType,"MakePointerType");
   pragma Import(MSIL,SetCustomAttribute,"SetCustomAttribute");
   pragma Import(MSIL,SetParent,"SetParent");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Reflection.Emit.TypeBuilder;
pragma Import(MSIL,MSSyst.Reflection.Emit.TypeBuilder,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Reflection.Emit.TypeBuilder");
