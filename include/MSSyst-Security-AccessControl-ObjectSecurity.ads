-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Security.AccessControl.AccessControlModification;
limited with MSSyst.Security.AccessControl.AccessControlSections;
limited with MSSyst.Security.AccessControl.AccessControlType;
limited with MSSyst.Security.AccessControl.AccessRule;
limited with MSSyst.Security.AccessControl.AuditFlags;
limited with MSSyst.Security.AccessControl.AuditRule;
limited with MSSyst.Security.AccessControl.InheritanceFlags;
limited with MSSyst.Security.AccessControl.PropagationFlags;
limited with MSSyst.Security.Principal.IdentityReference;
limited with MSSyst.String;
limited with MSSyst.Type_k;
package MSSyst.Security.AccessControl.ObjectSecurity is
   type Typ is abstract new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function AccessRuleFactory(
      This : access Typ;
      identityReference : access MSSyst.Security.Principal.IdentityReference.Typ'Class;
      accessMask : Integer;
      isInherited : Standard.Boolean;
      inheritanceFlags : MSSyst.Security.AccessControl.InheritanceFlags.Valuetype;
      propagationFlags : MSSyst.Security.AccessControl.PropagationFlags.Valuetype;
      type_k : MSSyst.Security.AccessControl.AccessControlType.Valuetype) return access MSSyst.Security.AccessControl.AccessRule.Typ'Class;
   function AuditRuleFactory(
      This : access Typ;
      identityReference : access MSSyst.Security.Principal.IdentityReference.Typ'Class;
      accessMask : Integer;
      isInherited : Standard.Boolean;
      inheritanceFlags : MSSyst.Security.AccessControl.InheritanceFlags.Valuetype;
      propagationFlags : MSSyst.Security.AccessControl.PropagationFlags.Valuetype;
      flags : MSSyst.Security.AccessControl.AuditFlags.Valuetype) return access MSSyst.Security.AccessControl.AuditRule.Typ'Class;
   function get_AccessRightType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function get_AccessRuleType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function get_AreAccessRulesCanonical(
      This : access Typ) return Standard.Boolean;
   function get_AreAccessRulesProtected(
      This : access Typ) return Standard.Boolean;
   function get_AreAuditRulesCanonical(
      This : access Typ) return Standard.Boolean;
   function get_AreAuditRulesProtected(
      This : access Typ) return Standard.Boolean;
   function get_AuditRuleType(
      This : access Typ) return access MSSyst.Type_k.Typ'Class;
   function GetGroup(
      This : access Typ;
      targetType : access MSSyst.Type_k.Typ'Class) return access MSSyst.Security.Principal.IdentityReference.Typ'Class;
   function GetOwner(
      This : access Typ;
      targetType : access MSSyst.Type_k.Typ'Class) return access MSSyst.Security.Principal.IdentityReference.Typ'Class;
   function GetSecurityDescriptorBinaryForm(
      This : access Typ) return MSIL_Types.unsigned_int8_Array;
   function GetSecurityDescriptorSddlForm(
      This : access Typ;
      includeSections : MSSyst.Security.AccessControl.AccessControlSections.Valuetype) return access MSSyst.String.Typ'Class;
   function IsSddlConversionSupported return Standard.Boolean;
   function ModifyAccessRule(
      This : access Typ;
      modification : MSSyst.Security.AccessControl.AccessControlModification.Valuetype;
      rule : access MSSyst.Security.AccessControl.AccessRule.Typ'Class;
      modified : MSIL_Types.Bool_addrof) return Standard.Boolean;
   function ModifyAuditRule(
      This : access Typ;
      modification : MSSyst.Security.AccessControl.AccessControlModification.Valuetype;
      rule : access MSSyst.Security.AccessControl.AuditRule.Typ'Class;
      modified : MSIL_Types.Bool_addrof) return Standard.Boolean;
   procedure PurgeAccessRules(
      This : access Typ;
      identity : access MSSyst.Security.Principal.IdentityReference.Typ'Class);
   procedure PurgeAuditRules(
      This : access Typ;
      identity : access MSSyst.Security.Principal.IdentityReference.Typ'Class);
   procedure SetAccessRuleProtection(
      This : access Typ;
      isProtected : Standard.Boolean;
      preserveInheritance : Standard.Boolean);
   procedure SetAuditRuleProtection(
      This : access Typ;
      isProtected : Standard.Boolean;
      preserveInheritance : Standard.Boolean);
   procedure SetGroup(
      This : access Typ;
      identity : access MSSyst.Security.Principal.IdentityReference.Typ'Class);
   procedure SetOwner(
      This : access Typ;
      identity : access MSSyst.Security.Principal.IdentityReference.Typ'Class);
   procedure SetSecurityDescriptorBinaryForm(
      This : access Typ;
      binaryForm : MSIL_Types.unsigned_int8_Arr;
      includeSections : MSSyst.Security.AccessControl.AccessControlSections.Valuetype);
   procedure SetSecurityDescriptorBinaryForm(
      This : access Typ;
      binaryForm : MSIL_Types.unsigned_int8_Arr);
   procedure SetSecurityDescriptorSddlForm(
      This : access Typ;
      sddlForm : access MSSyst.String.Typ'Class);
   procedure SetSecurityDescriptorSddlForm(
      This : access Typ;
      sddlForm : access MSSyst.String.Typ'Class;
      includeSections : MSSyst.Security.AccessControl.AccessControlSections.Valuetype);
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,AccessRuleFactory,"AccessRuleFactory");
   pragma Import(MSIL,AuditRuleFactory,"AuditRuleFactory");
   pragma Import(MSIL,get_AccessRightType,"get_AccessRightType");
   pragma Import(MSIL,get_AccessRuleType,"get_AccessRuleType");
   pragma Import(MSIL,get_AreAccessRulesCanonical,"get_AreAccessRulesCanonical");
   pragma Import(MSIL,get_AreAccessRulesProtected,"get_AreAccessRulesProtected");
   pragma Import(MSIL,get_AreAuditRulesCanonical,"get_AreAuditRulesCanonical");
   pragma Import(MSIL,get_AreAuditRulesProtected,"get_AreAuditRulesProtected");
   pragma Import(MSIL,get_AuditRuleType,"get_AuditRuleType");
   pragma Import(MSIL,GetGroup,"GetGroup");
   pragma Import(MSIL,GetOwner,"GetOwner");
   pragma Import(MSIL,GetSecurityDescriptorBinaryForm,"GetSecurityDescriptorBinaryForm");
   pragma Import(MSIL,GetSecurityDescriptorSddlForm,"GetSecurityDescriptorSddlForm");
   pragma Import(MSIL,IsSddlConversionSupported,"IsSddlConversionSupported");
   pragma Import(MSIL,ModifyAccessRule,"ModifyAccessRule");
   pragma Import(MSIL,ModifyAuditRule,"ModifyAuditRule");
   pragma Import(MSIL,PurgeAccessRules,"PurgeAccessRules");
   pragma Import(MSIL,PurgeAuditRules,"PurgeAuditRules");
   pragma Import(MSIL,SetAccessRuleProtection,"SetAccessRuleProtection");
   pragma Import(MSIL,SetAuditRuleProtection,"SetAuditRuleProtection");
   pragma Import(MSIL,SetGroup,"SetGroup");
   pragma Import(MSIL,SetOwner,"SetOwner");
   pragma Import(MSIL,SetSecurityDescriptorBinaryForm,"SetSecurityDescriptorBinaryForm");
   pragma Import(MSIL,SetSecurityDescriptorSddlForm,"SetSecurityDescriptorSddlForm");
end MSSyst.Security.AccessControl.ObjectSecurity;
pragma Import(MSIL,MSSyst.Security.AccessControl.ObjectSecurity,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Security.AccessControl.ObjectSecurity");
