-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.String;
limited with MSSyst.TimeSpan;
limited with MSSyst.Type_k;
package MSSyst.Threading.Monitor is
   type Typ is abstract new MSSyst.Object.Typ   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure Enter(
      obj : access MSSyst.Object.Typ'Class);
   procedure Exit_k(
      obj : access MSSyst.Object.Typ'Class);
   procedure Pulse(
      obj : access MSSyst.Object.Typ'Class);
   procedure PulseAll(
      obj : access MSSyst.Object.Typ'Class);
   function TryEnter(
      obj : access MSSyst.Object.Typ'Class;
      timeout : MSSyst.TimeSpan.Valuetype) return Standard.Boolean;
   function TryEnter(
      obj : access MSSyst.Object.Typ'Class;
      millisecondsTimeout : Integer) return Standard.Boolean;
   function TryEnter(
      obj : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function Wait(
      obj : access MSSyst.Object.Typ'Class;
      timeout : MSSyst.TimeSpan.Valuetype;
      exitContext : Standard.Boolean) return Standard.Boolean;
   function Wait(
      obj : access MSSyst.Object.Typ'Class;
      millisecondsTimeout : Integer;
      exitContext : Standard.Boolean) return Standard.Boolean;
   function Wait(
      obj : access MSSyst.Object.Typ'Class;
      millisecondsTimeout : Integer) return Standard.Boolean;
   function Wait(
      obj : access MSSyst.Object.Typ'Class) return Standard.Boolean;
   function Wait(
      obj : access MSSyst.Object.Typ'Class;
      timeout : MSSyst.TimeSpan.Valuetype) return Standard.Boolean;
private
   pragma Convention(MSIL,Typ);
   pragma Import(MSIL,Enter,"Enter");
   pragma Import(MSIL,Exit_k,"Exit");
   pragma Import(MSIL,Pulse,"Pulse");
   pragma Import(MSIL,PulseAll,"PulseAll");
   pragma Import(MSIL,TryEnter,"TryEnter");
   pragma Import(MSIL,Wait,"Wait");
end MSSyst.Threading.Monitor;
pragma Import(MSIL,MSSyst.Threading.Monitor,
   ".ver 2:0:0:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Threading.Monitor");
