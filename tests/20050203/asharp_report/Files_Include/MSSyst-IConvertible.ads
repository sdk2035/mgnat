-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.TypeCode;
with type MSSyst.IFormatProvider.Ref is access;
with type MSSyst.DateTime.Valuetype is tagged;
with type MSSyst.Decimal.Valuetype is tagged;
with type MSSyst.SByte.Valuetype is tagged;
with type MSSyst.String.Ref is access;
with type MSSyst.Object.Ref is access;
with type MSSyst.Type_k.Ref is access;
package MSSyst.IConvertible is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ (Self : access MSSyst.Object.Typ'Class)
      is abstract new MSSyst.Object.Typ with null record;
   pragma MSIL_Interface(Typ);
   function GetTypeCode(
      This : access Typ) return MSSyst.TypeCode.Valuetype is abstract;
   function ToBoolean(
      This : access Typ;
      provider : MSSyst.IFormatProvider.Ref) return Standard.Boolean is abstract;
   function ToByte(
      This : access Typ;
      provider : MSSyst.IFormatProvider.Ref) return MSIL_Types.unsigned_int8 is abstract;
   function ToChar(
      This : access Typ;
      provider : MSSyst.IFormatProvider.Ref) return Wide_Character is abstract;
   function ToDateTime(
      This : access Typ;
      provider : MSSyst.IFormatProvider.Ref) return MSSyst.DateTime.Valuetype is abstract;
   function ToDecimal(
      This : access Typ;
      provider : MSSyst.IFormatProvider.Ref) return MSSyst.Decimal.Valuetype is abstract;
   function ToDouble(
      This : access Typ;
      provider : MSSyst.IFormatProvider.Ref) return Long_Float is abstract;
   function ToInt16(
      This : access Typ;
      provider : MSSyst.IFormatProvider.Ref) return MSIL_Types.int16 is abstract;
   function ToInt32(
      This : access Typ;
      provider : MSSyst.IFormatProvider.Ref) return Integer is abstract;
   function ToInt64(
      This : access Typ;
      provider : MSSyst.IFormatProvider.Ref) return Long_Long_Integer is abstract;
   function ToSByte(
      This : access Typ;
      provider : MSSyst.IFormatProvider.Ref) return MSSyst.SByte.Valuetype is abstract;
   function ToSingle(
      This : access Typ;
      provider : MSSyst.IFormatProvider.Ref) return Float is abstract;
   function ToString(
      This : access Typ;
      provider : MSSyst.IFormatProvider.Ref) return MSSyst.String.Ref is abstract;
   function ToType(
      This : access Typ;
      conversionType : MSSyst.Type_k.Ref;
      provider : MSSyst.IFormatProvider.Ref) return MSSyst.Object.Ref is abstract;
   function ToUInt16(
      This : access Typ;
      provider : MSSyst.IFormatProvider.Ref) return MSIL_Types.unsigned_int16 is abstract;
   function ToUInt32(
      This : access Typ;
      provider : MSSyst.IFormatProvider.Ref) return MSIL_Types.Unsigned_Integer is abstract;
   function ToUInt64(
      This : access Typ;
      provider : MSSyst.IFormatProvider.Ref) return MSIL_Types.Unsigned_Long_Long_Integer is abstract;
private
   pragma Import(MSIL,GetTypeCode,"GetTypeCode");
   pragma Import(MSIL,ToBoolean,"ToBoolean");
   pragma Import(MSIL,ToByte,"ToByte");
   pragma Import(MSIL,ToChar,"ToChar");
   pragma Import(MSIL,ToDateTime,"ToDateTime");
   pragma Import(MSIL,ToDecimal,"ToDecimal");
   pragma Import(MSIL,ToDouble,"ToDouble");
   pragma Import(MSIL,ToInt16,"ToInt16");
   pragma Import(MSIL,ToInt32,"ToInt32");
   pragma Import(MSIL,ToInt64,"ToInt64");
   pragma Import(MSIL,ToSByte,"ToSByte");
   pragma Import(MSIL,ToSingle,"ToSingle");
   pragma Import(MSIL,ToString,"ToString");
   pragma Import(MSIL,ToType,"ToType");
   pragma Import(MSIL,ToUInt16,"ToUInt16");
   pragma Import(MSIL,ToUInt32,"ToUInt32");
   pragma Import(MSIL,ToUInt64,"ToUInt64");
end MSSyst.IConvertible;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.IConvertible,
   ".ver 1:0:5000:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.IConvertible");
