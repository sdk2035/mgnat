-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSIL_Types;
use MSIL_Types;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
package MSSyst.Object is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is tagged limited record
      null;
   end record;
   function new_Object(
      This : Ref := null) return Ref;
   function Equals(
      objA : MSSyst.Object.Ref;
      objB : MSSyst.Object.Ref) return Standard.Boolean;
   function Equals(
      This : access Typ;
      obj : MSSyst.Object.Ref) return Standard.Boolean;
   function GetHashCode(
      This : access Typ) return Integer;
   function GetType(
      This : access Typ) return MSSyst.Type_k.Ref;
   function ReferenceEquals(
      objA : MSSyst.Object.Ref;
      objB : MSSyst.Object.Ref) return Standard.Boolean;
   function ToString(
      This : access Typ) return MSSyst.String.Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_Object);
   pragma Import(MSIL,Equals,"Equals");
   pragma Import(MSIL,GetHashCode,"GetHashCode");
   pragma Import(MSIL,GetType,"GetType");
   pragma Import(MSIL,ReferenceEquals,"ReferenceEquals");
   pragma Import(MSIL,ToString,"ToString");
end MSSyst.Object;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,MSSyst.Object,
   ".ver 1:0:5000:0 .publickeytoken=( b7 7a 5c 56 19 34 e0 89 )",
   "[mscorlib]System.Object");
