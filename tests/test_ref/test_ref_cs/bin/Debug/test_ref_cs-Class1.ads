-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
pragma Extensions_Allowed(On);
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with type MSSyst.Object.Ref is access;
with type MSSyst.Type_k.Ref is access;
with type MSSyst.String.Ref is access;
with MSSyst.Object;
package test_ref_cs.Class1 is
   type Typ;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   type Typ is new MSSyst.Object.Typ with record
      null;
   end record;
   function new_Class1(
      This : Ref := null) return Ref;
   procedure test_bool(
      x : MSIL_Types.Bool_addrof);
   procedure test_int(
      x : MSIL_Types.Int32_addrof);
   procedure test_uint(
      x : MSIL_Types.Unsigned_Integer_addrof);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_Class1);
   pragma Import(MSIL,test_bool,"test_bool");
   pragma Import(MSIL,test_int,"test_int");
   pragma Import(MSIL,test_uint,"test_uint");
end test_ref_cs.Class1;
pragma Extensions_Allowed(Off);
pragma Import(MSIL,test_ref_cs.Class1,
   ".ver 1:0:1797:21842",
   "[test_ref_cs]test_ref_cs.Class1");
